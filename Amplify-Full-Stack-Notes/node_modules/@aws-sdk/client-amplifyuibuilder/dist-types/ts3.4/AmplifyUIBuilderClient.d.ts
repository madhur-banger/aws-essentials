import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandlerUserInput as __HttpHandlerUserInput } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  AwsCredentialIdentityProvider,
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  HttpAuthSchemeInputConfig,
  HttpAuthSchemeResolvedConfig,
} from "./auth/httpAuthSchemeProvider";
import {
  CreateComponentCommandInput,
  CreateComponentCommandOutput,
} from "./commands/CreateComponentCommand";
import {
  CreateFormCommandInput,
  CreateFormCommandOutput,
} from "./commands/CreateFormCommand";
import {
  CreateThemeCommandInput,
  CreateThemeCommandOutput,
} from "./commands/CreateThemeCommand";
import {
  DeleteComponentCommandInput,
  DeleteComponentCommandOutput,
} from "./commands/DeleteComponentCommand";
import {
  DeleteFormCommandInput,
  DeleteFormCommandOutput,
} from "./commands/DeleteFormCommand";
import {
  DeleteThemeCommandInput,
  DeleteThemeCommandOutput,
} from "./commands/DeleteThemeCommand";
import {
  ExchangeCodeForTokenCommandInput,
  ExchangeCodeForTokenCommandOutput,
} from "./commands/ExchangeCodeForTokenCommand";
import {
  ExportComponentsCommandInput,
  ExportComponentsCommandOutput,
} from "./commands/ExportComponentsCommand";
import {
  ExportFormsCommandInput,
  ExportFormsCommandOutput,
} from "./commands/ExportFormsCommand";
import {
  ExportThemesCommandInput,
  ExportThemesCommandOutput,
} from "./commands/ExportThemesCommand";
import {
  GetCodegenJobCommandInput,
  GetCodegenJobCommandOutput,
} from "./commands/GetCodegenJobCommand";
import {
  GetComponentCommandInput,
  GetComponentCommandOutput,
} from "./commands/GetComponentCommand";
import {
  GetFormCommandInput,
  GetFormCommandOutput,
} from "./commands/GetFormCommand";
import {
  GetMetadataCommandInput,
  GetMetadataCommandOutput,
} from "./commands/GetMetadataCommand";
import {
  GetThemeCommandInput,
  GetThemeCommandOutput,
} from "./commands/GetThemeCommand";
import {
  ListCodegenJobsCommandInput,
  ListCodegenJobsCommandOutput,
} from "./commands/ListCodegenJobsCommand";
import {
  ListComponentsCommandInput,
  ListComponentsCommandOutput,
} from "./commands/ListComponentsCommand";
import {
  ListFormsCommandInput,
  ListFormsCommandOutput,
} from "./commands/ListFormsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListThemesCommandInput,
  ListThemesCommandOutput,
} from "./commands/ListThemesCommand";
import {
  PutMetadataFlagCommandInput,
  PutMetadataFlagCommandOutput,
} from "./commands/PutMetadataFlagCommand";
import {
  RefreshTokenCommandInput,
  RefreshTokenCommandOutput,
} from "./commands/RefreshTokenCommand";
import {
  StartCodegenJobCommandInput,
  StartCodegenJobCommandOutput,
} from "./commands/StartCodegenJobCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateComponentCommandInput,
  UpdateComponentCommandOutput,
} from "./commands/UpdateComponentCommand";
import {
  UpdateFormCommandInput,
  UpdateFormCommandOutput,
} from "./commands/UpdateFormCommand";
import {
  UpdateThemeCommandInput,
  UpdateThemeCommandOutput,
} from "./commands/UpdateThemeCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | CreateComponentCommandInput
  | CreateFormCommandInput
  | CreateThemeCommandInput
  | DeleteComponentCommandInput
  | DeleteFormCommandInput
  | DeleteThemeCommandInput
  | ExchangeCodeForTokenCommandInput
  | ExportComponentsCommandInput
  | ExportFormsCommandInput
  | ExportThemesCommandInput
  | GetCodegenJobCommandInput
  | GetComponentCommandInput
  | GetFormCommandInput
  | GetMetadataCommandInput
  | GetThemeCommandInput
  | ListCodegenJobsCommandInput
  | ListComponentsCommandInput
  | ListFormsCommandInput
  | ListTagsForResourceCommandInput
  | ListThemesCommandInput
  | PutMetadataFlagCommandInput
  | RefreshTokenCommandInput
  | StartCodegenJobCommandInput
  | TagResourceCommandInput
  | UntagResourceCommandInput
  | UpdateComponentCommandInput
  | UpdateFormCommandInput
  | UpdateThemeCommandInput;
export type ServiceOutputTypes =
  | CreateComponentCommandOutput
  | CreateFormCommandOutput
  | CreateThemeCommandOutput
  | DeleteComponentCommandOutput
  | DeleteFormCommandOutput
  | DeleteThemeCommandOutput
  | ExchangeCodeForTokenCommandOutput
  | ExportComponentsCommandOutput
  | ExportFormsCommandOutput
  | ExportThemesCommandOutput
  | GetCodegenJobCommandOutput
  | GetComponentCommandOutput
  | GetFormCommandOutput
  | GetMetadataCommandOutput
  | GetThemeCommandOutput
  | ListCodegenJobsCommandOutput
  | ListComponentsCommandOutput
  | ListFormsCommandOutput
  | ListTagsForResourceCommandOutput
  | ListThemesCommandOutput
  | PutMetadataFlagCommandOutput
  | RefreshTokenCommandOutput
  | StartCodegenJobCommandOutput
  | TagResourceCommandOutput
  | UntagResourceCommandOutput
  | UpdateComponentCommandOutput
  | UpdateFormCommandOutput
  | UpdateThemeCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandlerUserInput;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  region?: string | __Provider<string>;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  credentialDefaultProvider?: (input: any) => AwsCredentialIdentityProvider;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type AmplifyUIBuilderClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  UserAgentInputConfig &
  RetryInputConfig &
  RegionInputConfig &
  HostHeaderInputConfig &
  EndpointInputConfig<EndpointParameters> &
  HttpAuthSchemeInputConfig &
  ClientInputEndpointParameters;
export interface AmplifyUIBuilderClientConfig
  extends AmplifyUIBuilderClientConfigType {}
export type AmplifyUIBuilderClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    UserAgentResolvedConfig &
    RetryResolvedConfig &
    RegionResolvedConfig &
    HostHeaderResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    HttpAuthSchemeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface AmplifyUIBuilderClientResolvedConfig
  extends AmplifyUIBuilderClientResolvedConfigType {}
export declare class AmplifyUIBuilderClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  AmplifyUIBuilderClientResolvedConfig
> {
  readonly config: AmplifyUIBuilderClientResolvedConfig;
  constructor(
    ...[
      configuration,
    ]: __CheckOptionalClientConfig<AmplifyUIBuilderClientConfig>
  );
  destroy(): void;
}
