import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { AppSyncClient } from "./AppSyncClient";
import {
  AssociateApiCommandInput,
  AssociateApiCommandOutput,
} from "./commands/AssociateApiCommand";
import {
  AssociateMergedGraphqlApiCommandInput,
  AssociateMergedGraphqlApiCommandOutput,
} from "./commands/AssociateMergedGraphqlApiCommand";
import {
  AssociateSourceGraphqlApiCommandInput,
  AssociateSourceGraphqlApiCommandOutput,
} from "./commands/AssociateSourceGraphqlApiCommand";
import {
  CreateApiCacheCommandInput,
  CreateApiCacheCommandOutput,
} from "./commands/CreateApiCacheCommand";
import {
  CreateApiKeyCommandInput,
  CreateApiKeyCommandOutput,
} from "./commands/CreateApiKeyCommand";
import {
  CreateDataSourceCommandInput,
  CreateDataSourceCommandOutput,
} from "./commands/CreateDataSourceCommand";
import {
  CreateDomainNameCommandInput,
  CreateDomainNameCommandOutput,
} from "./commands/CreateDomainNameCommand";
import {
  CreateFunctionCommandInput,
  CreateFunctionCommandOutput,
} from "./commands/CreateFunctionCommand";
import {
  CreateGraphqlApiCommandInput,
  CreateGraphqlApiCommandOutput,
} from "./commands/CreateGraphqlApiCommand";
import {
  CreateResolverCommandInput,
  CreateResolverCommandOutput,
} from "./commands/CreateResolverCommand";
import {
  CreateTypeCommandInput,
  CreateTypeCommandOutput,
} from "./commands/CreateTypeCommand";
import {
  DeleteApiCacheCommandInput,
  DeleteApiCacheCommandOutput,
} from "./commands/DeleteApiCacheCommand";
import {
  DeleteApiKeyCommandInput,
  DeleteApiKeyCommandOutput,
} from "./commands/DeleteApiKeyCommand";
import {
  DeleteDataSourceCommandInput,
  DeleteDataSourceCommandOutput,
} from "./commands/DeleteDataSourceCommand";
import {
  DeleteDomainNameCommandInput,
  DeleteDomainNameCommandOutput,
} from "./commands/DeleteDomainNameCommand";
import {
  DeleteFunctionCommandInput,
  DeleteFunctionCommandOutput,
} from "./commands/DeleteFunctionCommand";
import {
  DeleteGraphqlApiCommandInput,
  DeleteGraphqlApiCommandOutput,
} from "./commands/DeleteGraphqlApiCommand";
import {
  DeleteResolverCommandInput,
  DeleteResolverCommandOutput,
} from "./commands/DeleteResolverCommand";
import {
  DeleteTypeCommandInput,
  DeleteTypeCommandOutput,
} from "./commands/DeleteTypeCommand";
import {
  DisassociateApiCommandInput,
  DisassociateApiCommandOutput,
} from "./commands/DisassociateApiCommand";
import {
  DisassociateMergedGraphqlApiCommandInput,
  DisassociateMergedGraphqlApiCommandOutput,
} from "./commands/DisassociateMergedGraphqlApiCommand";
import {
  DisassociateSourceGraphqlApiCommandInput,
  DisassociateSourceGraphqlApiCommandOutput,
} from "./commands/DisassociateSourceGraphqlApiCommand";
import {
  EvaluateCodeCommandInput,
  EvaluateCodeCommandOutput,
} from "./commands/EvaluateCodeCommand";
import {
  EvaluateMappingTemplateCommandInput,
  EvaluateMappingTemplateCommandOutput,
} from "./commands/EvaluateMappingTemplateCommand";
import {
  FlushApiCacheCommandInput,
  FlushApiCacheCommandOutput,
} from "./commands/FlushApiCacheCommand";
import {
  GetApiAssociationCommandInput,
  GetApiAssociationCommandOutput,
} from "./commands/GetApiAssociationCommand";
import {
  GetApiCacheCommandInput,
  GetApiCacheCommandOutput,
} from "./commands/GetApiCacheCommand";
import {
  GetDataSourceCommandInput,
  GetDataSourceCommandOutput,
} from "./commands/GetDataSourceCommand";
import {
  GetDataSourceIntrospectionCommandInput,
  GetDataSourceIntrospectionCommandOutput,
} from "./commands/GetDataSourceIntrospectionCommand";
import {
  GetDomainNameCommandInput,
  GetDomainNameCommandOutput,
} from "./commands/GetDomainNameCommand";
import {
  GetFunctionCommandInput,
  GetFunctionCommandOutput,
} from "./commands/GetFunctionCommand";
import {
  GetGraphqlApiCommandInput,
  GetGraphqlApiCommandOutput,
} from "./commands/GetGraphqlApiCommand";
import {
  GetGraphqlApiEnvironmentVariablesCommandInput,
  GetGraphqlApiEnvironmentVariablesCommandOutput,
} from "./commands/GetGraphqlApiEnvironmentVariablesCommand";
import {
  GetIntrospectionSchemaCommandInput,
  GetIntrospectionSchemaCommandOutput,
} from "./commands/GetIntrospectionSchemaCommand";
import {
  GetResolverCommandInput,
  GetResolverCommandOutput,
} from "./commands/GetResolverCommand";
import {
  GetSchemaCreationStatusCommandInput,
  GetSchemaCreationStatusCommandOutput,
} from "./commands/GetSchemaCreationStatusCommand";
import {
  GetSourceApiAssociationCommandInput,
  GetSourceApiAssociationCommandOutput,
} from "./commands/GetSourceApiAssociationCommand";
import {
  GetTypeCommandInput,
  GetTypeCommandOutput,
} from "./commands/GetTypeCommand";
import {
  ListApiKeysCommandInput,
  ListApiKeysCommandOutput,
} from "./commands/ListApiKeysCommand";
import {
  ListDataSourcesCommandInput,
  ListDataSourcesCommandOutput,
} from "./commands/ListDataSourcesCommand";
import {
  ListDomainNamesCommandInput,
  ListDomainNamesCommandOutput,
} from "./commands/ListDomainNamesCommand";
import {
  ListFunctionsCommandInput,
  ListFunctionsCommandOutput,
} from "./commands/ListFunctionsCommand";
import {
  ListGraphqlApisCommandInput,
  ListGraphqlApisCommandOutput,
} from "./commands/ListGraphqlApisCommand";
import {
  ListResolversByFunctionCommandInput,
  ListResolversByFunctionCommandOutput,
} from "./commands/ListResolversByFunctionCommand";
import {
  ListResolversCommandInput,
  ListResolversCommandOutput,
} from "./commands/ListResolversCommand";
import {
  ListSourceApiAssociationsCommandInput,
  ListSourceApiAssociationsCommandOutput,
} from "./commands/ListSourceApiAssociationsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListTypesByAssociationCommandInput,
  ListTypesByAssociationCommandOutput,
} from "./commands/ListTypesByAssociationCommand";
import {
  ListTypesCommandInput,
  ListTypesCommandOutput,
} from "./commands/ListTypesCommand";
import {
  PutGraphqlApiEnvironmentVariablesCommandInput,
  PutGraphqlApiEnvironmentVariablesCommandOutput,
} from "./commands/PutGraphqlApiEnvironmentVariablesCommand";
import {
  StartDataSourceIntrospectionCommandInput,
  StartDataSourceIntrospectionCommandOutput,
} from "./commands/StartDataSourceIntrospectionCommand";
import {
  StartSchemaCreationCommandInput,
  StartSchemaCreationCommandOutput,
} from "./commands/StartSchemaCreationCommand";
import {
  StartSchemaMergeCommandInput,
  StartSchemaMergeCommandOutput,
} from "./commands/StartSchemaMergeCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateApiCacheCommandInput,
  UpdateApiCacheCommandOutput,
} from "./commands/UpdateApiCacheCommand";
import {
  UpdateApiKeyCommandInput,
  UpdateApiKeyCommandOutput,
} from "./commands/UpdateApiKeyCommand";
import {
  UpdateDataSourceCommandInput,
  UpdateDataSourceCommandOutput,
} from "./commands/UpdateDataSourceCommand";
import {
  UpdateDomainNameCommandInput,
  UpdateDomainNameCommandOutput,
} from "./commands/UpdateDomainNameCommand";
import {
  UpdateFunctionCommandInput,
  UpdateFunctionCommandOutput,
} from "./commands/UpdateFunctionCommand";
import {
  UpdateGraphqlApiCommandInput,
  UpdateGraphqlApiCommandOutput,
} from "./commands/UpdateGraphqlApiCommand";
import {
  UpdateResolverCommandInput,
  UpdateResolverCommandOutput,
} from "./commands/UpdateResolverCommand";
import {
  UpdateSourceApiAssociationCommandInput,
  UpdateSourceApiAssociationCommandOutput,
} from "./commands/UpdateSourceApiAssociationCommand";
import {
  UpdateTypeCommandInput,
  UpdateTypeCommandOutput,
} from "./commands/UpdateTypeCommand";
export interface AppSync {
  associateApi(
    args: AssociateApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateApiCommandOutput>;
  associateApi(
    args: AssociateApiCommandInput,
    cb: (err: any, data?: AssociateApiCommandOutput) => void
  ): void;
  associateApi(
    args: AssociateApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateApiCommandOutput) => void
  ): void;
  associateMergedGraphqlApi(
    args: AssociateMergedGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateMergedGraphqlApiCommandOutput>;
  associateMergedGraphqlApi(
    args: AssociateMergedGraphqlApiCommandInput,
    cb: (err: any, data?: AssociateMergedGraphqlApiCommandOutput) => void
  ): void;
  associateMergedGraphqlApi(
    args: AssociateMergedGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateMergedGraphqlApiCommandOutput) => void
  ): void;
  associateSourceGraphqlApi(
    args: AssociateSourceGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateSourceGraphqlApiCommandOutput>;
  associateSourceGraphqlApi(
    args: AssociateSourceGraphqlApiCommandInput,
    cb: (err: any, data?: AssociateSourceGraphqlApiCommandOutput) => void
  ): void;
  associateSourceGraphqlApi(
    args: AssociateSourceGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateSourceGraphqlApiCommandOutput) => void
  ): void;
  createApiCache(
    args: CreateApiCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateApiCacheCommandOutput>;
  createApiCache(
    args: CreateApiCacheCommandInput,
    cb: (err: any, data?: CreateApiCacheCommandOutput) => void
  ): void;
  createApiCache(
    args: CreateApiCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateApiCacheCommandOutput) => void
  ): void;
  createApiKey(
    args: CreateApiKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateApiKeyCommandOutput>;
  createApiKey(
    args: CreateApiKeyCommandInput,
    cb: (err: any, data?: CreateApiKeyCommandOutput) => void
  ): void;
  createApiKey(
    args: CreateApiKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateApiKeyCommandOutput) => void
  ): void;
  createDataSource(
    args: CreateDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDataSourceCommandOutput>;
  createDataSource(
    args: CreateDataSourceCommandInput,
    cb: (err: any, data?: CreateDataSourceCommandOutput) => void
  ): void;
  createDataSource(
    args: CreateDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDataSourceCommandOutput) => void
  ): void;
  createDomainName(
    args: CreateDomainNameCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDomainNameCommandOutput>;
  createDomainName(
    args: CreateDomainNameCommandInput,
    cb: (err: any, data?: CreateDomainNameCommandOutput) => void
  ): void;
  createDomainName(
    args: CreateDomainNameCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDomainNameCommandOutput) => void
  ): void;
  createFunction(
    args: CreateFunctionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFunctionCommandOutput>;
  createFunction(
    args: CreateFunctionCommandInput,
    cb: (err: any, data?: CreateFunctionCommandOutput) => void
  ): void;
  createFunction(
    args: CreateFunctionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFunctionCommandOutput) => void
  ): void;
  createGraphqlApi(
    args: CreateGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateGraphqlApiCommandOutput>;
  createGraphqlApi(
    args: CreateGraphqlApiCommandInput,
    cb: (err: any, data?: CreateGraphqlApiCommandOutput) => void
  ): void;
  createGraphqlApi(
    args: CreateGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateGraphqlApiCommandOutput) => void
  ): void;
  createResolver(
    args: CreateResolverCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateResolverCommandOutput>;
  createResolver(
    args: CreateResolverCommandInput,
    cb: (err: any, data?: CreateResolverCommandOutput) => void
  ): void;
  createResolver(
    args: CreateResolverCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateResolverCommandOutput) => void
  ): void;
  createType(
    args: CreateTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTypeCommandOutput>;
  createType(
    args: CreateTypeCommandInput,
    cb: (err: any, data?: CreateTypeCommandOutput) => void
  ): void;
  createType(
    args: CreateTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTypeCommandOutput) => void
  ): void;
  deleteApiCache(
    args: DeleteApiCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteApiCacheCommandOutput>;
  deleteApiCache(
    args: DeleteApiCacheCommandInput,
    cb: (err: any, data?: DeleteApiCacheCommandOutput) => void
  ): void;
  deleteApiCache(
    args: DeleteApiCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteApiCacheCommandOutput) => void
  ): void;
  deleteApiKey(
    args: DeleteApiKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteApiKeyCommandOutput>;
  deleteApiKey(
    args: DeleteApiKeyCommandInput,
    cb: (err: any, data?: DeleteApiKeyCommandOutput) => void
  ): void;
  deleteApiKey(
    args: DeleteApiKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteApiKeyCommandOutput) => void
  ): void;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDataSourceCommandOutput>;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    cb: (err: any, data?: DeleteDataSourceCommandOutput) => void
  ): void;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDataSourceCommandOutput) => void
  ): void;
  deleteDomainName(
    args: DeleteDomainNameCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDomainNameCommandOutput>;
  deleteDomainName(
    args: DeleteDomainNameCommandInput,
    cb: (err: any, data?: DeleteDomainNameCommandOutput) => void
  ): void;
  deleteDomainName(
    args: DeleteDomainNameCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDomainNameCommandOutput) => void
  ): void;
  deleteFunction(
    args: DeleteFunctionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFunctionCommandOutput>;
  deleteFunction(
    args: DeleteFunctionCommandInput,
    cb: (err: any, data?: DeleteFunctionCommandOutput) => void
  ): void;
  deleteFunction(
    args: DeleteFunctionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFunctionCommandOutput) => void
  ): void;
  deleteGraphqlApi(
    args: DeleteGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteGraphqlApiCommandOutput>;
  deleteGraphqlApi(
    args: DeleteGraphqlApiCommandInput,
    cb: (err: any, data?: DeleteGraphqlApiCommandOutput) => void
  ): void;
  deleteGraphqlApi(
    args: DeleteGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteGraphqlApiCommandOutput) => void
  ): void;
  deleteResolver(
    args: DeleteResolverCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteResolverCommandOutput>;
  deleteResolver(
    args: DeleteResolverCommandInput,
    cb: (err: any, data?: DeleteResolverCommandOutput) => void
  ): void;
  deleteResolver(
    args: DeleteResolverCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteResolverCommandOutput) => void
  ): void;
  deleteType(
    args: DeleteTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTypeCommandOutput>;
  deleteType(
    args: DeleteTypeCommandInput,
    cb: (err: any, data?: DeleteTypeCommandOutput) => void
  ): void;
  deleteType(
    args: DeleteTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTypeCommandOutput) => void
  ): void;
  disassociateApi(
    args: DisassociateApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateApiCommandOutput>;
  disassociateApi(
    args: DisassociateApiCommandInput,
    cb: (err: any, data?: DisassociateApiCommandOutput) => void
  ): void;
  disassociateApi(
    args: DisassociateApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateApiCommandOutput) => void
  ): void;
  disassociateMergedGraphqlApi(
    args: DisassociateMergedGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateMergedGraphqlApiCommandOutput>;
  disassociateMergedGraphqlApi(
    args: DisassociateMergedGraphqlApiCommandInput,
    cb: (err: any, data?: DisassociateMergedGraphqlApiCommandOutput) => void
  ): void;
  disassociateMergedGraphqlApi(
    args: DisassociateMergedGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateMergedGraphqlApiCommandOutput) => void
  ): void;
  disassociateSourceGraphqlApi(
    args: DisassociateSourceGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateSourceGraphqlApiCommandOutput>;
  disassociateSourceGraphqlApi(
    args: DisassociateSourceGraphqlApiCommandInput,
    cb: (err: any, data?: DisassociateSourceGraphqlApiCommandOutput) => void
  ): void;
  disassociateSourceGraphqlApi(
    args: DisassociateSourceGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateSourceGraphqlApiCommandOutput) => void
  ): void;
  evaluateCode(
    args: EvaluateCodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<EvaluateCodeCommandOutput>;
  evaluateCode(
    args: EvaluateCodeCommandInput,
    cb: (err: any, data?: EvaluateCodeCommandOutput) => void
  ): void;
  evaluateCode(
    args: EvaluateCodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: EvaluateCodeCommandOutput) => void
  ): void;
  evaluateMappingTemplate(
    args: EvaluateMappingTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<EvaluateMappingTemplateCommandOutput>;
  evaluateMappingTemplate(
    args: EvaluateMappingTemplateCommandInput,
    cb: (err: any, data?: EvaluateMappingTemplateCommandOutput) => void
  ): void;
  evaluateMappingTemplate(
    args: EvaluateMappingTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: EvaluateMappingTemplateCommandOutput) => void
  ): void;
  flushApiCache(
    args: FlushApiCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<FlushApiCacheCommandOutput>;
  flushApiCache(
    args: FlushApiCacheCommandInput,
    cb: (err: any, data?: FlushApiCacheCommandOutput) => void
  ): void;
  flushApiCache(
    args: FlushApiCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: FlushApiCacheCommandOutput) => void
  ): void;
  getApiAssociation(
    args: GetApiAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetApiAssociationCommandOutput>;
  getApiAssociation(
    args: GetApiAssociationCommandInput,
    cb: (err: any, data?: GetApiAssociationCommandOutput) => void
  ): void;
  getApiAssociation(
    args: GetApiAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetApiAssociationCommandOutput) => void
  ): void;
  getApiCache(
    args: GetApiCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetApiCacheCommandOutput>;
  getApiCache(
    args: GetApiCacheCommandInput,
    cb: (err: any, data?: GetApiCacheCommandOutput) => void
  ): void;
  getApiCache(
    args: GetApiCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetApiCacheCommandOutput) => void
  ): void;
  getDataSource(
    args: GetDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDataSourceCommandOutput>;
  getDataSource(
    args: GetDataSourceCommandInput,
    cb: (err: any, data?: GetDataSourceCommandOutput) => void
  ): void;
  getDataSource(
    args: GetDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDataSourceCommandOutput) => void
  ): void;
  getDataSourceIntrospection(
    args: GetDataSourceIntrospectionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDataSourceIntrospectionCommandOutput>;
  getDataSourceIntrospection(
    args: GetDataSourceIntrospectionCommandInput,
    cb: (err: any, data?: GetDataSourceIntrospectionCommandOutput) => void
  ): void;
  getDataSourceIntrospection(
    args: GetDataSourceIntrospectionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDataSourceIntrospectionCommandOutput) => void
  ): void;
  getDomainName(
    args: GetDomainNameCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDomainNameCommandOutput>;
  getDomainName(
    args: GetDomainNameCommandInput,
    cb: (err: any, data?: GetDomainNameCommandOutput) => void
  ): void;
  getDomainName(
    args: GetDomainNameCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDomainNameCommandOutput) => void
  ): void;
  getFunction(
    args: GetFunctionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetFunctionCommandOutput>;
  getFunction(
    args: GetFunctionCommandInput,
    cb: (err: any, data?: GetFunctionCommandOutput) => void
  ): void;
  getFunction(
    args: GetFunctionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetFunctionCommandOutput) => void
  ): void;
  getGraphqlApi(
    args: GetGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetGraphqlApiCommandOutput>;
  getGraphqlApi(
    args: GetGraphqlApiCommandInput,
    cb: (err: any, data?: GetGraphqlApiCommandOutput) => void
  ): void;
  getGraphqlApi(
    args: GetGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetGraphqlApiCommandOutput) => void
  ): void;
  getGraphqlApiEnvironmentVariables(
    args: GetGraphqlApiEnvironmentVariablesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetGraphqlApiEnvironmentVariablesCommandOutput>;
  getGraphqlApiEnvironmentVariables(
    args: GetGraphqlApiEnvironmentVariablesCommandInput,
    cb: (
      err: any,
      data?: GetGraphqlApiEnvironmentVariablesCommandOutput
    ) => void
  ): void;
  getGraphqlApiEnvironmentVariables(
    args: GetGraphqlApiEnvironmentVariablesCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: GetGraphqlApiEnvironmentVariablesCommandOutput
    ) => void
  ): void;
  getIntrospectionSchema(
    args: GetIntrospectionSchemaCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetIntrospectionSchemaCommandOutput>;
  getIntrospectionSchema(
    args: GetIntrospectionSchemaCommandInput,
    cb: (err: any, data?: GetIntrospectionSchemaCommandOutput) => void
  ): void;
  getIntrospectionSchema(
    args: GetIntrospectionSchemaCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetIntrospectionSchemaCommandOutput) => void
  ): void;
  getResolver(
    args: GetResolverCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetResolverCommandOutput>;
  getResolver(
    args: GetResolverCommandInput,
    cb: (err: any, data?: GetResolverCommandOutput) => void
  ): void;
  getResolver(
    args: GetResolverCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetResolverCommandOutput) => void
  ): void;
  getSchemaCreationStatus(
    args: GetSchemaCreationStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSchemaCreationStatusCommandOutput>;
  getSchemaCreationStatus(
    args: GetSchemaCreationStatusCommandInput,
    cb: (err: any, data?: GetSchemaCreationStatusCommandOutput) => void
  ): void;
  getSchemaCreationStatus(
    args: GetSchemaCreationStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSchemaCreationStatusCommandOutput) => void
  ): void;
  getSourceApiAssociation(
    args: GetSourceApiAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSourceApiAssociationCommandOutput>;
  getSourceApiAssociation(
    args: GetSourceApiAssociationCommandInput,
    cb: (err: any, data?: GetSourceApiAssociationCommandOutput) => void
  ): void;
  getSourceApiAssociation(
    args: GetSourceApiAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSourceApiAssociationCommandOutput) => void
  ): void;
  getType(
    args: GetTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetTypeCommandOutput>;
  getType(
    args: GetTypeCommandInput,
    cb: (err: any, data?: GetTypeCommandOutput) => void
  ): void;
  getType(
    args: GetTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetTypeCommandOutput) => void
  ): void;
  listApiKeys(
    args: ListApiKeysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListApiKeysCommandOutput>;
  listApiKeys(
    args: ListApiKeysCommandInput,
    cb: (err: any, data?: ListApiKeysCommandOutput) => void
  ): void;
  listApiKeys(
    args: ListApiKeysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListApiKeysCommandOutput) => void
  ): void;
  listDataSources(
    args: ListDataSourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDataSourcesCommandOutput>;
  listDataSources(
    args: ListDataSourcesCommandInput,
    cb: (err: any, data?: ListDataSourcesCommandOutput) => void
  ): void;
  listDataSources(
    args: ListDataSourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDataSourcesCommandOutput) => void
  ): void;
  listDomainNames(): Promise<ListDomainNamesCommandOutput>;
  listDomainNames(
    args: ListDomainNamesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDomainNamesCommandOutput>;
  listDomainNames(
    args: ListDomainNamesCommandInput,
    cb: (err: any, data?: ListDomainNamesCommandOutput) => void
  ): void;
  listDomainNames(
    args: ListDomainNamesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDomainNamesCommandOutput) => void
  ): void;
  listFunctions(
    args: ListFunctionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFunctionsCommandOutput>;
  listFunctions(
    args: ListFunctionsCommandInput,
    cb: (err: any, data?: ListFunctionsCommandOutput) => void
  ): void;
  listFunctions(
    args: ListFunctionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFunctionsCommandOutput) => void
  ): void;
  listGraphqlApis(): Promise<ListGraphqlApisCommandOutput>;
  listGraphqlApis(
    args: ListGraphqlApisCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGraphqlApisCommandOutput>;
  listGraphqlApis(
    args: ListGraphqlApisCommandInput,
    cb: (err: any, data?: ListGraphqlApisCommandOutput) => void
  ): void;
  listGraphqlApis(
    args: ListGraphqlApisCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGraphqlApisCommandOutput) => void
  ): void;
  listResolvers(
    args: ListResolversCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListResolversCommandOutput>;
  listResolvers(
    args: ListResolversCommandInput,
    cb: (err: any, data?: ListResolversCommandOutput) => void
  ): void;
  listResolvers(
    args: ListResolversCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListResolversCommandOutput) => void
  ): void;
  listResolversByFunction(
    args: ListResolversByFunctionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListResolversByFunctionCommandOutput>;
  listResolversByFunction(
    args: ListResolversByFunctionCommandInput,
    cb: (err: any, data?: ListResolversByFunctionCommandOutput) => void
  ): void;
  listResolversByFunction(
    args: ListResolversByFunctionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListResolversByFunctionCommandOutput) => void
  ): void;
  listSourceApiAssociations(
    args: ListSourceApiAssociationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSourceApiAssociationsCommandOutput>;
  listSourceApiAssociations(
    args: ListSourceApiAssociationsCommandInput,
    cb: (err: any, data?: ListSourceApiAssociationsCommandOutput) => void
  ): void;
  listSourceApiAssociations(
    args: ListSourceApiAssociationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSourceApiAssociationsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTypes(
    args: ListTypesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTypesCommandOutput>;
  listTypes(
    args: ListTypesCommandInput,
    cb: (err: any, data?: ListTypesCommandOutput) => void
  ): void;
  listTypes(
    args: ListTypesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTypesCommandOutput) => void
  ): void;
  listTypesByAssociation(
    args: ListTypesByAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTypesByAssociationCommandOutput>;
  listTypesByAssociation(
    args: ListTypesByAssociationCommandInput,
    cb: (err: any, data?: ListTypesByAssociationCommandOutput) => void
  ): void;
  listTypesByAssociation(
    args: ListTypesByAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTypesByAssociationCommandOutput) => void
  ): void;
  putGraphqlApiEnvironmentVariables(
    args: PutGraphqlApiEnvironmentVariablesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutGraphqlApiEnvironmentVariablesCommandOutput>;
  putGraphqlApiEnvironmentVariables(
    args: PutGraphqlApiEnvironmentVariablesCommandInput,
    cb: (
      err: any,
      data?: PutGraphqlApiEnvironmentVariablesCommandOutput
    ) => void
  ): void;
  putGraphqlApiEnvironmentVariables(
    args: PutGraphqlApiEnvironmentVariablesCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutGraphqlApiEnvironmentVariablesCommandOutput
    ) => void
  ): void;
  startDataSourceIntrospection(): Promise<StartDataSourceIntrospectionCommandOutput>;
  startDataSourceIntrospection(
    args: StartDataSourceIntrospectionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartDataSourceIntrospectionCommandOutput>;
  startDataSourceIntrospection(
    args: StartDataSourceIntrospectionCommandInput,
    cb: (err: any, data?: StartDataSourceIntrospectionCommandOutput) => void
  ): void;
  startDataSourceIntrospection(
    args: StartDataSourceIntrospectionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartDataSourceIntrospectionCommandOutput) => void
  ): void;
  startSchemaCreation(
    args: StartSchemaCreationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartSchemaCreationCommandOutput>;
  startSchemaCreation(
    args: StartSchemaCreationCommandInput,
    cb: (err: any, data?: StartSchemaCreationCommandOutput) => void
  ): void;
  startSchemaCreation(
    args: StartSchemaCreationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartSchemaCreationCommandOutput) => void
  ): void;
  startSchemaMerge(
    args: StartSchemaMergeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartSchemaMergeCommandOutput>;
  startSchemaMerge(
    args: StartSchemaMergeCommandInput,
    cb: (err: any, data?: StartSchemaMergeCommandOutput) => void
  ): void;
  startSchemaMerge(
    args: StartSchemaMergeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartSchemaMergeCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateApiCache(
    args: UpdateApiCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateApiCacheCommandOutput>;
  updateApiCache(
    args: UpdateApiCacheCommandInput,
    cb: (err: any, data?: UpdateApiCacheCommandOutput) => void
  ): void;
  updateApiCache(
    args: UpdateApiCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateApiCacheCommandOutput) => void
  ): void;
  updateApiKey(
    args: UpdateApiKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateApiKeyCommandOutput>;
  updateApiKey(
    args: UpdateApiKeyCommandInput,
    cb: (err: any, data?: UpdateApiKeyCommandOutput) => void
  ): void;
  updateApiKey(
    args: UpdateApiKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateApiKeyCommandOutput) => void
  ): void;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDataSourceCommandOutput>;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    cb: (err: any, data?: UpdateDataSourceCommandOutput) => void
  ): void;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDataSourceCommandOutput) => void
  ): void;
  updateDomainName(
    args: UpdateDomainNameCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDomainNameCommandOutput>;
  updateDomainName(
    args: UpdateDomainNameCommandInput,
    cb: (err: any, data?: UpdateDomainNameCommandOutput) => void
  ): void;
  updateDomainName(
    args: UpdateDomainNameCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDomainNameCommandOutput) => void
  ): void;
  updateFunction(
    args: UpdateFunctionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFunctionCommandOutput>;
  updateFunction(
    args: UpdateFunctionCommandInput,
    cb: (err: any, data?: UpdateFunctionCommandOutput) => void
  ): void;
  updateFunction(
    args: UpdateFunctionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFunctionCommandOutput) => void
  ): void;
  updateGraphqlApi(
    args: UpdateGraphqlApiCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGraphqlApiCommandOutput>;
  updateGraphqlApi(
    args: UpdateGraphqlApiCommandInput,
    cb: (err: any, data?: UpdateGraphqlApiCommandOutput) => void
  ): void;
  updateGraphqlApi(
    args: UpdateGraphqlApiCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGraphqlApiCommandOutput) => void
  ): void;
  updateResolver(
    args: UpdateResolverCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateResolverCommandOutput>;
  updateResolver(
    args: UpdateResolverCommandInput,
    cb: (err: any, data?: UpdateResolverCommandOutput) => void
  ): void;
  updateResolver(
    args: UpdateResolverCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateResolverCommandOutput) => void
  ): void;
  updateSourceApiAssociation(
    args: UpdateSourceApiAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSourceApiAssociationCommandOutput>;
  updateSourceApiAssociation(
    args: UpdateSourceApiAssociationCommandInput,
    cb: (err: any, data?: UpdateSourceApiAssociationCommandOutput) => void
  ): void;
  updateSourceApiAssociation(
    args: UpdateSourceApiAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSourceApiAssociationCommandOutput) => void
  ): void;
  updateType(
    args: UpdateTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateTypeCommandOutput>;
  updateType(
    args: UpdateTypeCommandInput,
    cb: (err: any, data?: UpdateTypeCommandOutput) => void
  ): void;
  updateType(
    args: UpdateTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateTypeCommandOutput) => void
  ): void;
}
export declare class AppSync extends AppSyncClient implements AppSync {}
