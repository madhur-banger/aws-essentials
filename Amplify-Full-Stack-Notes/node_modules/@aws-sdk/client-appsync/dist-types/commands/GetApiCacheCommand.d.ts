import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AppSyncClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AppSyncClient";
import { GetApiCacheRequest, GetApiCacheResponse } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link GetApiCacheCommand}.
 */
export interface GetApiCacheCommandInput extends GetApiCacheRequest {
}
/**
 * @public
 *
 * The output of {@link GetApiCacheCommand}.
 */
export interface GetApiCacheCommandOutput extends GetApiCacheResponse, __MetadataBearer {
}
declare const GetApiCacheCommand_base: {
    new (input: GetApiCacheCommandInput): import("@smithy/smithy-client").CommandImpl<GetApiCacheCommandInput, GetApiCacheCommandOutput, AppSyncClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: GetApiCacheCommandInput): import("@smithy/smithy-client").CommandImpl<GetApiCacheCommandInput, GetApiCacheCommandOutput, AppSyncClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Retrieves an <code>ApiCache</code> object.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AppSyncClient, GetApiCacheCommand } from "@aws-sdk/client-appsync"; // ES Modules import
 * // const { AppSyncClient, GetApiCacheCommand } = require("@aws-sdk/client-appsync"); // CommonJS import
 * const client = new AppSyncClient(config);
 * const input = { // GetApiCacheRequest
 *   apiId: "STRING_VALUE", // required
 * };
 * const command = new GetApiCacheCommand(input);
 * const response = await client.send(command);
 * // { // GetApiCacheResponse
 * //   apiCache: { // ApiCache
 * //     ttl: Number("long"),
 * //     apiCachingBehavior: "FULL_REQUEST_CACHING" || "PER_RESOLVER_CACHING",
 * //     transitEncryptionEnabled: true || false,
 * //     atRestEncryptionEnabled: true || false,
 * //     type: "T2_SMALL" || "T2_MEDIUM" || "R4_LARGE" || "R4_XLARGE" || "R4_2XLARGE" || "R4_4XLARGE" || "R4_8XLARGE" || "SMALL" || "MEDIUM" || "LARGE" || "XLARGE" || "LARGE_2X" || "LARGE_4X" || "LARGE_8X" || "LARGE_12X",
 * //     status: "AVAILABLE" || "CREATING" || "DELETING" || "MODIFYING" || "FAILED",
 * //     healthMetricsConfig: "ENABLED" || "DISABLED",
 * //   },
 * // };
 *
 * ```
 *
 * @param GetApiCacheCommandInput - {@link GetApiCacheCommandInput}
 * @returns {@link GetApiCacheCommandOutput}
 * @see {@link GetApiCacheCommandInput} for command's `input` shape.
 * @see {@link GetApiCacheCommandOutput} for command's `response` shape.
 * @see {@link AppSyncClientResolvedConfig | config} for AppSyncClient's `config` shape.
 *
 * @throws {@link BadRequestException} (client fault)
 *  <p>The request is not well formed. For example, a value is invalid or a required field is missing. Check the
 *          field values, and then try again.</p>
 *
 * @throws {@link ConcurrentModificationException} (client fault)
 *  <p>Another modification is in progress at this time and it must complete before you can make your
 *          change.</p>
 *
 * @throws {@link InternalFailureException} (server fault)
 *  <p>An internal AppSync error occurred. Try your request again.</p>
 *
 * @throws {@link NotFoundException} (client fault)
 *  <p>The resource specified in the request was not found. Check the resource, and then try again.</p>
 *
 * @throws {@link UnauthorizedException} (client fault)
 *  <p>You aren't authorized to perform this operation.</p>
 *
 * @throws {@link AppSyncServiceException}
 * <p>Base exception class for all service exceptions from AppSync service.</p>
 *
 * @public
 */
export declare class GetApiCacheCommand extends GetApiCacheCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: GetApiCacheRequest;
            output: GetApiCacheResponse;
        };
        sdk: {
            input: GetApiCacheCommandInput;
            output: GetApiCacheCommandOutput;
        };
    };
}
