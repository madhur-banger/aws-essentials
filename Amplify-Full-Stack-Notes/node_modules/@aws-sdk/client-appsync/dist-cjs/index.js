"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  ApiCacheStatus: () => ApiCacheStatus,
  ApiCacheType: () => ApiCacheType,
  ApiCachingBehavior: () => ApiCachingBehavior,
  ApiKeyLimitExceededException: () => ApiKeyLimitExceededException,
  ApiKeyValidityOutOfBoundsException: () => ApiKeyValidityOutOfBoundsException,
  ApiLimitExceededException: () => ApiLimitExceededException,
  AppSync: () => AppSync,
  AppSyncClient: () => AppSyncClient,
  AppSyncServiceException: () => AppSyncServiceException,
  AssociateApiCommand: () => AssociateApiCommand,
  AssociateMergedGraphqlApiCommand: () => AssociateMergedGraphqlApiCommand,
  AssociateSourceGraphqlApiCommand: () => AssociateSourceGraphqlApiCommand,
  AssociationStatus: () => AssociationStatus,
  AuthenticationType: () => AuthenticationType,
  AuthorizationType: () => AuthorizationType,
  BadRequestException: () => BadRequestException,
  BadRequestReason: () => BadRequestReason,
  CacheHealthMetricsConfig: () => CacheHealthMetricsConfig,
  ConcurrentModificationException: () => ConcurrentModificationException,
  ConflictDetectionType: () => ConflictDetectionType,
  ConflictHandlerType: () => ConflictHandlerType,
  CreateApiCacheCommand: () => CreateApiCacheCommand,
  CreateApiKeyCommand: () => CreateApiKeyCommand,
  CreateDataSourceCommand: () => CreateDataSourceCommand,
  CreateDomainNameCommand: () => CreateDomainNameCommand,
  CreateFunctionCommand: () => CreateFunctionCommand,
  CreateGraphqlApiCommand: () => CreateGraphqlApiCommand,
  CreateResolverCommand: () => CreateResolverCommand,
  CreateTypeCommand: () => CreateTypeCommand,
  DataSourceIntrospectionStatus: () => DataSourceIntrospectionStatus,
  DataSourceLevelMetricsBehavior: () => DataSourceLevelMetricsBehavior,
  DataSourceLevelMetricsConfig: () => DataSourceLevelMetricsConfig,
  DataSourceType: () => DataSourceType,
  DefaultAction: () => DefaultAction,
  DeleteApiCacheCommand: () => DeleteApiCacheCommand,
  DeleteApiKeyCommand: () => DeleteApiKeyCommand,
  DeleteDataSourceCommand: () => DeleteDataSourceCommand,
  DeleteDomainNameCommand: () => DeleteDomainNameCommand,
  DeleteFunctionCommand: () => DeleteFunctionCommand,
  DeleteGraphqlApiCommand: () => DeleteGraphqlApiCommand,
  DeleteResolverCommand: () => DeleteResolverCommand,
  DeleteTypeCommand: () => DeleteTypeCommand,
  DisassociateApiCommand: () => DisassociateApiCommand,
  DisassociateMergedGraphqlApiCommand: () => DisassociateMergedGraphqlApiCommand,
  DisassociateSourceGraphqlApiCommand: () => DisassociateSourceGraphqlApiCommand,
  EvaluateCodeCommand: () => EvaluateCodeCommand,
  EvaluateMappingTemplateCommand: () => EvaluateMappingTemplateCommand,
  FieldLogLevel: () => FieldLogLevel,
  FlushApiCacheCommand: () => FlushApiCacheCommand,
  GetApiAssociationCommand: () => GetApiAssociationCommand,
  GetApiCacheCommand: () => GetApiCacheCommand,
  GetDataSourceCommand: () => GetDataSourceCommand,
  GetDataSourceIntrospectionCommand: () => GetDataSourceIntrospectionCommand,
  GetDomainNameCommand: () => GetDomainNameCommand,
  GetFunctionCommand: () => GetFunctionCommand,
  GetGraphqlApiCommand: () => GetGraphqlApiCommand,
  GetGraphqlApiEnvironmentVariablesCommand: () => GetGraphqlApiEnvironmentVariablesCommand,
  GetIntrospectionSchemaCommand: () => GetIntrospectionSchemaCommand,
  GetResolverCommand: () => GetResolverCommand,
  GetSchemaCreationStatusCommand: () => GetSchemaCreationStatusCommand,
  GetSourceApiAssociationCommand: () => GetSourceApiAssociationCommand,
  GetTypeCommand: () => GetTypeCommand,
  GraphQLApiIntrospectionConfig: () => GraphQLApiIntrospectionConfig,
  GraphQLApiType: () => GraphQLApiType,
  GraphQLApiVisibility: () => GraphQLApiVisibility,
  GraphQLSchemaException: () => GraphQLSchemaException,
  InternalFailureException: () => InternalFailureException,
  LimitExceededException: () => LimitExceededException,
  ListApiKeysCommand: () => ListApiKeysCommand,
  ListDataSourcesCommand: () => ListDataSourcesCommand,
  ListDomainNamesCommand: () => ListDomainNamesCommand,
  ListFunctionsCommand: () => ListFunctionsCommand,
  ListGraphqlApisCommand: () => ListGraphqlApisCommand,
  ListResolversByFunctionCommand: () => ListResolversByFunctionCommand,
  ListResolversCommand: () => ListResolversCommand,
  ListSourceApiAssociationsCommand: () => ListSourceApiAssociationsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListTypesByAssociationCommand: () => ListTypesByAssociationCommand,
  ListTypesCommand: () => ListTypesCommand,
  MergeType: () => MergeType,
  NotFoundException: () => NotFoundException,
  OperationLevelMetricsConfig: () => OperationLevelMetricsConfig,
  OutputType: () => OutputType,
  Ownership: () => Ownership,
  PutGraphqlApiEnvironmentVariablesCommand: () => PutGraphqlApiEnvironmentVariablesCommand,
  RelationalDatabaseSourceType: () => RelationalDatabaseSourceType,
  ResolverKind: () => ResolverKind,
  ResolverLevelMetricsBehavior: () => ResolverLevelMetricsBehavior,
  ResolverLevelMetricsConfig: () => ResolverLevelMetricsConfig,
  RuntimeName: () => RuntimeName,
  SchemaStatus: () => SchemaStatus,
  SourceApiAssociationStatus: () => SourceApiAssociationStatus,
  StartDataSourceIntrospectionCommand: () => StartDataSourceIntrospectionCommand,
  StartSchemaCreationCommand: () => StartSchemaCreationCommand,
  StartSchemaMergeCommand: () => StartSchemaMergeCommand,
  TagResourceCommand: () => TagResourceCommand,
  TypeDefinitionFormat: () => TypeDefinitionFormat,
  UnauthorizedException: () => UnauthorizedException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateApiCacheCommand: () => UpdateApiCacheCommand,
  UpdateApiKeyCommand: () => UpdateApiKeyCommand,
  UpdateDataSourceCommand: () => UpdateDataSourceCommand,
  UpdateDomainNameCommand: () => UpdateDomainNameCommand,
  UpdateFunctionCommand: () => UpdateFunctionCommand,
  UpdateGraphqlApiCommand: () => UpdateGraphqlApiCommand,
  UpdateResolverCommand: () => UpdateResolverCommand,
  UpdateSourceApiAssociationCommand: () => UpdateSourceApiAssociationCommand,
  UpdateTypeCommand: () => UpdateTypeCommand,
  __Client: () => import_smithy_client.Client,
  paginateListApiKeys: () => paginateListApiKeys,
  paginateListDataSources: () => paginateListDataSources,
  paginateListDomainNames: () => paginateListDomainNames,
  paginateListFunctions: () => paginateListFunctions,
  paginateListGraphqlApis: () => paginateListGraphqlApis,
  paginateListResolvers: () => paginateListResolvers,
  paginateListResolversByFunction: () => paginateListResolversByFunction,
  paginateListSourceApiAssociations: () => paginateListSourceApiAssociations,
  paginateListTypes: () => paginateListTypes,
  paginateListTypesByAssociation: () => paginateListTypesByAssociation
});
module.exports = __toCommonJS(src_exports);

// src/AppSyncClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "appsync"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/AppSyncClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/AppSyncClient.ts
var _AppSyncClient = class _AppSyncClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultAppSyncHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};
__name(_AppSyncClient, "AppSyncClient");
var AppSyncClient = _AppSyncClient;

// src/AppSync.ts


// src/commands/AssociateApiCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/AppSyncServiceException.ts

var _AppSyncServiceException = class _AppSyncServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _AppSyncServiceException.prototype);
  }
};
__name(_AppSyncServiceException, "AppSyncServiceException");
var AppSyncServiceException = _AppSyncServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AuthenticationType = {
  AMAZON_COGNITO_USER_POOLS: "AMAZON_COGNITO_USER_POOLS",
  API_KEY: "API_KEY",
  AWS_IAM: "AWS_IAM",
  AWS_LAMBDA: "AWS_LAMBDA",
  OPENID_CONNECT: "OPENID_CONNECT"
};
var AssociationStatus = {
  Failed: "FAILED",
  Processing: "PROCESSING",
  Success: "SUCCESS"
};
var ApiCachingBehavior = {
  FULL_REQUEST_CACHING: "FULL_REQUEST_CACHING",
  PER_RESOLVER_CACHING: "PER_RESOLVER_CACHING"
};
var CacheHealthMetricsConfig = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var ApiCacheStatus = {
  AVAILABLE: "AVAILABLE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  MODIFYING: "MODIFYING"
};
var ApiCacheType = {
  LARGE: "LARGE",
  LARGE_12X: "LARGE_12X",
  LARGE_2X: "LARGE_2X",
  LARGE_4X: "LARGE_4X",
  LARGE_8X: "LARGE_8X",
  MEDIUM: "MEDIUM",
  R4_2XLARGE: "R4_2XLARGE",
  R4_4XLARGE: "R4_4XLARGE",
  R4_8XLARGE: "R4_8XLARGE",
  R4_LARGE: "R4_LARGE",
  R4_XLARGE: "R4_XLARGE",
  SMALL: "SMALL",
  T2_MEDIUM: "T2_MEDIUM",
  T2_SMALL: "T2_SMALL",
  XLARGE: "XLARGE"
};
var _ApiKeyLimitExceededException = class _ApiKeyLimitExceededException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ApiKeyLimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ApiKeyLimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ApiKeyLimitExceededException.prototype);
  }
};
__name(_ApiKeyLimitExceededException, "ApiKeyLimitExceededException");
var ApiKeyLimitExceededException = _ApiKeyLimitExceededException;
var _ApiKeyValidityOutOfBoundsException = class _ApiKeyValidityOutOfBoundsException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ApiKeyValidityOutOfBoundsException",
      $fault: "client",
      ...opts
    });
    this.name = "ApiKeyValidityOutOfBoundsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ApiKeyValidityOutOfBoundsException.prototype);
  }
};
__name(_ApiKeyValidityOutOfBoundsException, "ApiKeyValidityOutOfBoundsException");
var ApiKeyValidityOutOfBoundsException = _ApiKeyValidityOutOfBoundsException;
var _ApiLimitExceededException = class _ApiLimitExceededException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ApiLimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ApiLimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ApiLimitExceededException.prototype);
  }
};
__name(_ApiLimitExceededException, "ApiLimitExceededException");
var ApiLimitExceededException = _ApiLimitExceededException;
var RuntimeName = {
  APPSYNC_JS: "APPSYNC_JS"
};
var BadRequestReason = {
  CODE_ERROR: "CODE_ERROR"
};
var _BadRequestException = class _BadRequestException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "BadRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.reason = opts.reason;
    this.detail = opts.detail;
  }
};
__name(_BadRequestException, "BadRequestException");
var BadRequestException = _BadRequestException;
var _InternalFailureException = class _InternalFailureException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalFailureException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalFailureException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalFailureException.prototype);
  }
};
__name(_InternalFailureException, "InternalFailureException");
var InternalFailureException = _InternalFailureException;
var _NotFoundException = class _NotFoundException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;
var MergeType = {
  AUTO_MERGE: "AUTO_MERGE",
  MANUAL_MERGE: "MANUAL_MERGE"
};
var SourceApiAssociationStatus = {
  AUTO_MERGE_SCHEDULE_FAILED: "AUTO_MERGE_SCHEDULE_FAILED",
  DELETION_FAILED: "DELETION_FAILED",
  DELETION_IN_PROGRESS: "DELETION_IN_PROGRESS",
  DELETION_SCHEDULED: "DELETION_SCHEDULED",
  MERGE_FAILED: "MERGE_FAILED",
  MERGE_IN_PROGRESS: "MERGE_IN_PROGRESS",
  MERGE_SCHEDULED: "MERGE_SCHEDULED",
  MERGE_SUCCESS: "MERGE_SUCCESS"
};
var _ConcurrentModificationException = class _ConcurrentModificationException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentModificationException",
      $fault: "client",
      ...opts
    });
    this.name = "ConcurrentModificationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);
  }
};
__name(_ConcurrentModificationException, "ConcurrentModificationException");
var ConcurrentModificationException = _ConcurrentModificationException;
var _LimitExceededException = class _LimitExceededException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _UnauthorizedException = class _UnauthorizedException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedException",
      $fault: "client",
      ...opts
    });
    this.name = "UnauthorizedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnauthorizedException.prototype);
  }
};
__name(_UnauthorizedException, "UnauthorizedException");
var UnauthorizedException = _UnauthorizedException;
var AuthorizationType = {
  AWS_IAM: "AWS_IAM"
};
var DataSourceLevelMetricsConfig = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var RelationalDatabaseSourceType = {
  RDS_HTTP_ENDPOINT: "RDS_HTTP_ENDPOINT"
};
var DataSourceType = {
  AMAZON_DYNAMODB: "AMAZON_DYNAMODB",
  AMAZON_ELASTICSEARCH: "AMAZON_ELASTICSEARCH",
  AMAZON_EVENTBRIDGE: "AMAZON_EVENTBRIDGE",
  AMAZON_OPENSEARCH_SERVICE: "AMAZON_OPENSEARCH_SERVICE",
  AWS_LAMBDA: "AWS_LAMBDA",
  HTTP: "HTTP",
  NONE: "NONE",
  RELATIONAL_DATABASE: "RELATIONAL_DATABASE"
};
var ConflictDetectionType = {
  NONE: "NONE",
  VERSION: "VERSION"
};
var ConflictHandlerType = {
  AUTOMERGE: "AUTOMERGE",
  LAMBDA: "LAMBDA",
  NONE: "NONE",
  OPTIMISTIC_CONCURRENCY: "OPTIMISTIC_CONCURRENCY"
};
var GraphQLApiType = {
  GRAPHQL: "GRAPHQL",
  MERGED: "MERGED"
};
var DataSourceLevelMetricsBehavior = {
  FULL_REQUEST_DATA_SOURCE_METRICS: "FULL_REQUEST_DATA_SOURCE_METRICS",
  PER_DATA_SOURCE_METRICS: "PER_DATA_SOURCE_METRICS"
};
var OperationLevelMetricsConfig = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var ResolverLevelMetricsBehavior = {
  FULL_REQUEST_RESOLVER_METRICS: "FULL_REQUEST_RESOLVER_METRICS",
  PER_RESOLVER_METRICS: "PER_RESOLVER_METRICS"
};
var GraphQLApiIntrospectionConfig = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var FieldLogLevel = {
  ALL: "ALL",
  DEBUG: "DEBUG",
  ERROR: "ERROR",
  INFO: "INFO",
  NONE: "NONE"
};
var DefaultAction = {
  ALLOW: "ALLOW",
  DENY: "DENY"
};
var GraphQLApiVisibility = {
  GLOBAL: "GLOBAL",
  PRIVATE: "PRIVATE"
};
var ResolverKind = {
  PIPELINE: "PIPELINE",
  UNIT: "UNIT"
};
var ResolverLevelMetricsConfig = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var TypeDefinitionFormat = {
  JSON: "JSON",
  SDL: "SDL"
};
var DataSourceIntrospectionStatus = {
  FAILED: "FAILED",
  PROCESSING: "PROCESSING",
  SUCCESS: "SUCCESS"
};
var OutputType = {
  JSON: "JSON",
  SDL: "SDL"
};
var _GraphQLSchemaException = class _GraphQLSchemaException extends AppSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "GraphQLSchemaException",
      $fault: "client",
      ...opts
    });
    this.name = "GraphQLSchemaException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _GraphQLSchemaException.prototype);
  }
};
__name(_GraphQLSchemaException, "GraphQLSchemaException");
var GraphQLSchemaException = _GraphQLSchemaException;
var SchemaStatus = {
  Active: "ACTIVE",
  Deleting: "DELETING",
  Failed: "FAILED",
  NotApplicable: "NOT_APPLICABLE",
  Processing: "PROCESSING",
  Success: "SUCCESS"
};
var Ownership = {
  CURRENT_ACCOUNT: "CURRENT_ACCOUNT",
  OTHER_ACCOUNTS: "OTHER_ACCOUNTS"
};

// src/protocols/Aws_restJson1.ts
var se_AssociateApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/domainnames/{domainName}/apiassociation");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociateApiCommand");
var se_AssociateMergedGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/sourceApis/{sourceApiIdentifier}/mergedApiAssociations");
  b.p("sourceApiIdentifier", () => input.sourceApiIdentifier, "{sourceApiIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      mergedApiIdentifier: [],
      sourceApiAssociationConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociateMergedGraphqlApiCommand");
var se_AssociateSourceGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations");
  b.p("mergedApiIdentifier", () => input.mergedApiIdentifier, "{mergedApiIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      sourceApiAssociationConfig: (_) => (0, import_smithy_client._json)(_),
      sourceApiIdentifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociateSourceGraphqlApiCommand");
var se_CreateApiCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/ApiCaches");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiCachingBehavior: [],
      atRestEncryptionEnabled: [],
      healthMetricsConfig: [],
      transitEncryptionEnabled: [],
      ttl: [],
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApiCacheCommand");
var se_CreateApiKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/apikeys");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      expires: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApiKeyCommand");
var se_CreateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/datasources");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      dynamodbConfig: (_) => (0, import_smithy_client._json)(_),
      elasticsearchConfig: (_) => (0, import_smithy_client._json)(_),
      eventBridgeConfig: (_) => (0, import_smithy_client._json)(_),
      httpConfig: (_) => (0, import_smithy_client._json)(_),
      lambdaConfig: (_) => (0, import_smithy_client._json)(_),
      metricsConfig: [],
      name: [],
      openSearchServiceConfig: (_) => (0, import_smithy_client._json)(_),
      relationalDatabaseConfig: (_) => (0, import_smithy_client._json)(_),
      serviceRoleArn: [],
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDataSourceCommand");
var se_CreateDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/domainnames");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      certificateArn: [],
      description: [],
      domainName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDomainNameCommand");
var se_CreateFunctionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/functions");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      code: [],
      dataSourceName: [],
      description: [],
      functionVersion: [],
      maxBatchSize: [],
      name: [],
      requestMappingTemplate: [],
      responseMappingTemplate: [],
      runtime: (_) => (0, import_smithy_client._json)(_),
      syncConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateFunctionCommand");
var se_CreateGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      additionalAuthenticationProviders: (_) => (0, import_smithy_client._json)(_),
      apiType: [],
      authenticationType: [],
      enhancedMetricsConfig: (_) => (0, import_smithy_client._json)(_),
      introspectionConfig: [],
      lambdaAuthorizerConfig: (_) => (0, import_smithy_client._json)(_),
      logConfig: (_) => (0, import_smithy_client._json)(_),
      mergedApiExecutionRoleArn: [],
      name: [],
      openIDConnectConfig: (_) => (0, import_smithy_client._json)(_),
      ownerContact: [],
      queryDepthLimit: [],
      resolverCountLimit: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      userPoolConfig: (_) => (0, import_smithy_client._json)(_),
      visibility: [],
      xrayEnabled: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateGraphqlApiCommand");
var se_CreateResolverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/types/{typeName}/resolvers");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      cachingConfig: (_) => (0, import_smithy_client._json)(_),
      code: [],
      dataSourceName: [],
      fieldName: [],
      kind: [],
      maxBatchSize: [],
      metricsConfig: [],
      pipelineConfig: (_) => (0, import_smithy_client._json)(_),
      requestMappingTemplate: [],
      responseMappingTemplate: [],
      runtime: (_) => (0, import_smithy_client._json)(_),
      syncConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateResolverCommand");
var se_CreateTypeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/types");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      definition: [],
      format: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateTypeCommand");
var se_DeleteApiCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/ApiCaches");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApiCacheCommand");
var se_DeleteApiKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/apikeys/{id}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApiKeyCommand");
var se_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/datasources/{name}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("name", () => input.name, "{name}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDataSourceCommand");
var se_DeleteDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/domainnames/{domainName}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDomainNameCommand");
var se_DeleteFunctionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/functions/{functionId}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("functionId", () => input.functionId, "{functionId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteFunctionCommand");
var se_DeleteGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteGraphqlApiCommand");
var se_DeleteResolverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  b.p("fieldName", () => input.fieldName, "{fieldName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteResolverCommand");
var se_DeleteTypeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/types/{typeName}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteTypeCommand");
var se_DisassociateApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/domainnames/{domainName}/apiassociation");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateApiCommand");
var se_DisassociateMergedGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/sourceApis/{sourceApiIdentifier}/mergedApiAssociations/{associationId}");
  b.p("sourceApiIdentifier", () => input.sourceApiIdentifier, "{sourceApiIdentifier}", false);
  b.p("associationId", () => input.associationId, "{associationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateMergedGraphqlApiCommand");
var se_DisassociateSourceGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}");
  b.p("mergedApiIdentifier", () => input.mergedApiIdentifier, "{mergedApiIdentifier}", false);
  b.p("associationId", () => input.associationId, "{associationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateSourceGraphqlApiCommand");
var se_EvaluateCodeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/dataplane-evaluatecode");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      code: [],
      context: [],
      function: [],
      runtime: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_EvaluateCodeCommand");
var se_EvaluateMappingTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/dataplane-evaluatetemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      context: [],
      template: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_EvaluateMappingTemplateCommand");
var se_FlushApiCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/FlushCache");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_FlushApiCacheCommand");
var se_GetApiAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/domainnames/{domainName}/apiassociation");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApiAssociationCommand");
var se_GetApiCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/ApiCaches");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApiCacheCommand");
var se_GetDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/datasources/{name}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("name", () => input.name, "{name}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDataSourceCommand");
var se_GetDataSourceIntrospectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/datasources/introspections/{introspectionId}");
  b.p("introspectionId", () => input.introspectionId, "{introspectionId}", false);
  const query = (0, import_smithy_client.map)({
    [_iMSDL]: [() => input.includeModelsSDL !== void 0, () => input[_iMSDL].toString()],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDataSourceIntrospectionCommand");
var se_GetDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/domainnames/{domainName}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDomainNameCommand");
var se_GetFunctionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/functions/{functionId}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("functionId", () => input.functionId, "{functionId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetFunctionCommand");
var se_GetGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetGraphqlApiCommand");
var se_GetGraphqlApiEnvironmentVariablesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/environmentVariables");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetGraphqlApiEnvironmentVariablesCommand");
var se_GetIntrospectionSchemaCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/schema");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  const query = (0, import_smithy_client.map)({
    [_f]: [, (0, import_smithy_client.expectNonNull)(input[_f], `format`)],
    [_iD]: [() => input.includeDirectives !== void 0, () => input[_iD].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetIntrospectionSchemaCommand");
var se_GetResolverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  b.p("fieldName", () => input.fieldName, "{fieldName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetResolverCommand");
var se_GetSchemaCreationStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/schemacreation");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetSchemaCreationStatusCommand");
var se_GetSourceApiAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}");
  b.p("mergedApiIdentifier", () => input.mergedApiIdentifier, "{mergedApiIdentifier}", false);
  b.p("associationId", () => input.associationId, "{associationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetSourceApiAssociationCommand");
var se_GetTypeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/types/{typeName}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  const query = (0, import_smithy_client.map)({
    [_f]: [, (0, import_smithy_client.expectNonNull)(input[_f], `format`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetTypeCommand");
var se_ListApiKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/apikeys");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApiKeysCommand");
var se_ListDataSourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/datasources");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDataSourcesCommand");
var se_ListDomainNamesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/domainnames");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDomainNamesCommand");
var se_ListFunctionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/functions");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListFunctionsCommand");
var se_ListGraphqlApisCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_aT]: [, input[_aT]],
    [_o]: [, input[_o]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListGraphqlApisCommand");
var se_ListResolversCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/types/{typeName}/resolvers");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListResolversCommand");
var se_ListResolversByFunctionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/functions/{functionId}/resolvers");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("functionId", () => input.functionId, "{functionId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListResolversByFunctionCommand");
var se_ListSourceApiAssociationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/sourceApiAssociations");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSourceApiAssociationsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListTypesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/apis/{apiId}/types");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  const query = (0, import_smithy_client.map)({
    [_f]: [, (0, import_smithy_client.expectNonNull)(input[_f], `format`)],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTypesCommand");
var se_ListTypesByAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}/types");
  b.p("mergedApiIdentifier", () => input.mergedApiIdentifier, "{mergedApiIdentifier}", false);
  b.p("associationId", () => input.associationId, "{associationId}", false);
  const query = (0, import_smithy_client.map)({
    [_f]: [, (0, import_smithy_client.expectNonNull)(input[_f], `format`)],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTypesByAssociationCommand");
var se_PutGraphqlApiEnvironmentVariablesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/environmentVariables");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      environmentVariables: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutGraphqlApiEnvironmentVariablesCommand");
var se_StartDataSourceIntrospectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/datasources/introspections");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      rdsDataApiConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartDataSourceIntrospectionCommand");
var se_StartSchemaCreationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/schemacreation");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      definition: (_) => context.base64Encoder(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartSchemaCreationCommand");
var se_StartSchemaMergeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}/merge");
  b.p("associationId", () => input.associationId, "{associationId}", false);
  b.p("mergedApiIdentifier", () => input.mergedApiIdentifier, "{mergedApiIdentifier}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartSchemaMergeCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [(0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null, () => input[_tK] || []]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateApiCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/ApiCaches/update");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiCachingBehavior: [],
      healthMetricsConfig: [],
      ttl: [],
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateApiCacheCommand");
var se_UpdateApiKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/apikeys/{id}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("id", () => input.id, "{id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      expires: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateApiKeyCommand");
var se_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/datasources/{name}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("name", () => input.name, "{name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      dynamodbConfig: (_) => (0, import_smithy_client._json)(_),
      elasticsearchConfig: (_) => (0, import_smithy_client._json)(_),
      eventBridgeConfig: (_) => (0, import_smithy_client._json)(_),
      httpConfig: (_) => (0, import_smithy_client._json)(_),
      lambdaConfig: (_) => (0, import_smithy_client._json)(_),
      metricsConfig: [],
      openSearchServiceConfig: (_) => (0, import_smithy_client._json)(_),
      relationalDatabaseConfig: (_) => (0, import_smithy_client._json)(_),
      serviceRoleArn: [],
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateDataSourceCommand");
var se_UpdateDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/domainnames/{domainName}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateDomainNameCommand");
var se_UpdateFunctionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/functions/{functionId}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("functionId", () => input.functionId, "{functionId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      code: [],
      dataSourceName: [],
      description: [],
      functionVersion: [],
      maxBatchSize: [],
      name: [],
      requestMappingTemplate: [],
      responseMappingTemplate: [],
      runtime: (_) => (0, import_smithy_client._json)(_),
      syncConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateFunctionCommand");
var se_UpdateGraphqlApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      additionalAuthenticationProviders: (_) => (0, import_smithy_client._json)(_),
      authenticationType: [],
      enhancedMetricsConfig: (_) => (0, import_smithy_client._json)(_),
      introspectionConfig: [],
      lambdaAuthorizerConfig: (_) => (0, import_smithy_client._json)(_),
      logConfig: (_) => (0, import_smithy_client._json)(_),
      mergedApiExecutionRoleArn: [],
      name: [],
      openIDConnectConfig: (_) => (0, import_smithy_client._json)(_),
      ownerContact: [],
      queryDepthLimit: [],
      resolverCountLimit: [],
      userPoolConfig: (_) => (0, import_smithy_client._json)(_),
      xrayEnabled: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateGraphqlApiCommand");
var se_UpdateResolverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  b.p("fieldName", () => input.fieldName, "{fieldName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      cachingConfig: (_) => (0, import_smithy_client._json)(_),
      code: [],
      dataSourceName: [],
      kind: [],
      maxBatchSize: [],
      metricsConfig: [],
      pipelineConfig: (_) => (0, import_smithy_client._json)(_),
      requestMappingTemplate: [],
      responseMappingTemplate: [],
      runtime: (_) => (0, import_smithy_client._json)(_),
      syncConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateResolverCommand");
var se_UpdateSourceApiAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}");
  b.p("associationId", () => input.associationId, "{associationId}", false);
  b.p("mergedApiIdentifier", () => input.mergedApiIdentifier, "{mergedApiIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      sourceApiAssociationConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateSourceApiAssociationCommand");
var se_UpdateTypeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/apis/{apiId}/types/{typeName}");
  b.p("apiId", () => input.apiId, "{apiId}", false);
  b.p("typeName", () => input.typeName, "{typeName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      definition: [],
      format: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateTypeCommand");
var de_AssociateApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiAssociation: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociateApiCommand");
var de_AssociateMergedGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sourceApiAssociation: (_) => de_SourceApiAssociation(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociateMergedGraphqlApiCommand");
var de_AssociateSourceGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sourceApiAssociation: (_) => de_SourceApiAssociation(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociateSourceGraphqlApiCommand");
var de_CreateApiCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiCache: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApiCacheCommand");
var de_CreateApiKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKey: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApiKeyCommand");
var de_CreateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSource: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDataSourceCommand");
var de_CreateDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    domainNameConfig: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDomainNameCommand");
var de_CreateFunctionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    functionConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateFunctionCommand");
var de_CreateGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    graphqlApi: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateGraphqlApiCommand");
var de_CreateResolverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    resolver: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateResolverCommand");
var de_CreateTypeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    type: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateTypeCommand");
var de_DeleteApiCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApiCacheCommand");
var de_DeleteApiKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApiKeyCommand");
var de_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDataSourceCommand");
var de_DeleteDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDomainNameCommand");
var de_DeleteFunctionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteFunctionCommand");
var de_DeleteGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteGraphqlApiCommand");
var de_DeleteResolverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteResolverCommand");
var de_DeleteTypeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteTypeCommand");
var de_DisassociateApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisassociateApiCommand");
var de_DisassociateMergedGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sourceApiAssociationStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DisassociateMergedGraphqlApiCommand");
var de_DisassociateSourceGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sourceApiAssociationStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DisassociateSourceGraphqlApiCommand");
var de_EvaluateCodeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    error: import_smithy_client._json,
    evaluationResult: import_smithy_client.expectString,
    logs: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_EvaluateCodeCommand");
var de_EvaluateMappingTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    error: import_smithy_client._json,
    evaluationResult: import_smithy_client.expectString,
    logs: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_EvaluateMappingTemplateCommand");
var de_FlushApiCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_FlushApiCacheCommand");
var de_GetApiAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiAssociation: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApiAssociationCommand");
var de_GetApiCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiCache: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApiCacheCommand");
var de_GetDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSource: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataSourceCommand");
var de_GetDataSourceIntrospectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    introspectionId: import_smithy_client.expectString,
    introspectionResult: (_) => de_DataSourceIntrospectionResult(_, context),
    introspectionStatus: import_smithy_client.expectString,
    introspectionStatusDetail: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataSourceIntrospectionCommand");
var de_GetDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    domainNameConfig: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainNameCommand");
var de_GetFunctionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    functionConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetFunctionCommand");
var de_GetGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    graphqlApi: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetGraphqlApiCommand");
var de_GetGraphqlApiEnvironmentVariablesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environmentVariables: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetGraphqlApiEnvironmentVariablesCommand");
var de_GetIntrospectionSchemaCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = await (0, import_smithy_client.collectBody)(output.body, context);
  contents.schema = data;
  return contents;
}, "de_GetIntrospectionSchemaCommand");
var de_GetResolverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    resolver: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetResolverCommand");
var de_GetSchemaCreationStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    details: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSchemaCreationStatusCommand");
var de_GetSourceApiAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sourceApiAssociation: (_) => de_SourceApiAssociation(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSourceApiAssociationCommand");
var de_GetTypeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    type: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetTypeCommand");
var de_ListApiKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeys: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApiKeysCommand");
var de_ListDataSourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSources: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataSourcesCommand");
var de_ListDomainNamesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    domainNameConfigs: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDomainNamesCommand");
var de_ListFunctionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    functions: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFunctionsCommand");
var de_ListGraphqlApisCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    graphqlApis: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListGraphqlApisCommand");
var de_ListResolversCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    resolvers: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListResolversCommand");
var de_ListResolversByFunctionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    resolvers: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListResolversByFunctionCommand");
var de_ListSourceApiAssociationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    sourceApiAssociationSummaries: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSourceApiAssociationsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListTypesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    types: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTypesCommand");
var de_ListTypesByAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    types: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTypesByAssociationCommand");
var de_PutGraphqlApiEnvironmentVariablesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environmentVariables: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutGraphqlApiEnvironmentVariablesCommand");
var de_StartDataSourceIntrospectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    introspectionId: import_smithy_client.expectString,
    introspectionStatus: import_smithy_client.expectString,
    introspectionStatusDetail: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartDataSourceIntrospectionCommand");
var de_StartSchemaCreationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartSchemaCreationCommand");
var de_StartSchemaMergeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sourceApiAssociationStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartSchemaMergeCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateApiCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiCache: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApiCacheCommand");
var de_UpdateApiKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKey: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApiKeyCommand");
var de_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSource: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDataSourceCommand");
var de_UpdateDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    domainNameConfig: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDomainNameCommand");
var de_UpdateFunctionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    functionConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateFunctionCommand");
var de_UpdateGraphqlApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    graphqlApi: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateGraphqlApiCommand");
var de_UpdateResolverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    resolver: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateResolverCommand");
var de_UpdateSourceApiAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sourceApiAssociation: (_) => de_SourceApiAssociation(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateSourceApiAssociationCommand");
var de_UpdateTypeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    type: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateTypeCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.appsync#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "BadRequestException":
    case "com.amazonaws.appsync#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "InternalFailureException":
    case "com.amazonaws.appsync#InternalFailureException":
      throw await de_InternalFailureExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.appsync#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "ConcurrentModificationException":
    case "com.amazonaws.appsync#ConcurrentModificationException":
      throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.appsync#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "UnauthorizedException":
    case "com.amazonaws.appsync#UnauthorizedException":
      throw await de_UnauthorizedExceptionRes(parsedOutput, context);
    case "ApiKeyLimitExceededException":
    case "com.amazonaws.appsync#ApiKeyLimitExceededException":
      throw await de_ApiKeyLimitExceededExceptionRes(parsedOutput, context);
    case "ApiKeyValidityOutOfBoundsException":
    case "com.amazonaws.appsync#ApiKeyValidityOutOfBoundsException":
      throw await de_ApiKeyValidityOutOfBoundsExceptionRes(parsedOutput, context);
    case "ApiLimitExceededException":
    case "com.amazonaws.appsync#ApiLimitExceededException":
      throw await de_ApiLimitExceededExceptionRes(parsedOutput, context);
    case "GraphQLSchemaException":
    case "com.amazonaws.appsync#GraphQLSchemaException":
      throw await de_GraphQLSchemaExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(AppSyncServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ApiKeyLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ApiKeyLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ApiKeyLimitExceededExceptionRes");
var de_ApiKeyValidityOutOfBoundsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ApiKeyValidityOutOfBoundsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ApiKeyValidityOutOfBoundsExceptionRes");
var de_ApiLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ApiLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ApiLimitExceededExceptionRes");
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    detail: import_smithy_client._json,
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConcurrentModificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConcurrentModificationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConcurrentModificationExceptionRes");
var de_GraphQLSchemaExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new GraphQLSchemaException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_GraphQLSchemaExceptionRes");
var de_InternalFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalFailureExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_UnauthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnauthorizedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnauthorizedExceptionRes");
var de_DataSourceIntrospectionModel = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    fields: (_) => de_DataSourceIntrospectionModelFields(_, context),
    indexes: import_smithy_client._json,
    name: import_smithy_client.expectString,
    primaryKey: import_smithy_client._json,
    sdl: import_smithy_client.expectString
  });
}, "de_DataSourceIntrospectionModel");
var de_DataSourceIntrospectionModelField = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    length: import_smithy_client.expectLong,
    name: import_smithy_client.expectString,
    type: (_) => de_DataSourceIntrospectionModelFieldType(_, context)
  });
}, "de_DataSourceIntrospectionModelField");
var de_DataSourceIntrospectionModelFields = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataSourceIntrospectionModelField(entry, context);
  });
  return retVal;
}, "de_DataSourceIntrospectionModelFields");
var de_DataSourceIntrospectionModelFieldType = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    kind: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    type: (_) => de_DataSourceIntrospectionModelFieldType(_, context),
    values: import_smithy_client._json
  });
}, "de_DataSourceIntrospectionModelFieldType");
var de_DataSourceIntrospectionModels = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataSourceIntrospectionModel(entry, context);
  });
  return retVal;
}, "de_DataSourceIntrospectionModels");
var de_DataSourceIntrospectionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    models: (_) => de_DataSourceIntrospectionModels(_, context),
    nextToken: import_smithy_client.expectString
  });
}, "de_DataSourceIntrospectionResult");
var de_SourceApiAssociation = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    associationArn: import_smithy_client.expectString,
    associationId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    lastSuccessfulMergeDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    mergedApiArn: import_smithy_client.expectString,
    mergedApiId: import_smithy_client.expectString,
    sourceApiArn: import_smithy_client.expectString,
    sourceApiAssociationConfig: import_smithy_client._json,
    sourceApiAssociationStatus: import_smithy_client.expectString,
    sourceApiAssociationStatusDetail: import_smithy_client.expectString,
    sourceApiId: import_smithy_client.expectString
  });
}, "de_SourceApiAssociation");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _aT = "apiType";
var _f = "format";
var _iD = "includeDirectives";
var _iMSDL = "includeModelsSDL";
var _mR = "maxResults";
var _nT = "nextToken";
var _o = "owner";
var _tK = "tagKeys";

// src/commands/AssociateApiCommand.ts
var _AssociateApiCommand = class _AssociateApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "AssociateApi", {}).n("AppSyncClient", "AssociateApiCommand").f(void 0, void 0).ser(se_AssociateApiCommand).de(de_AssociateApiCommand).build() {
};
__name(_AssociateApiCommand, "AssociateApiCommand");
var AssociateApiCommand = _AssociateApiCommand;

// src/commands/AssociateMergedGraphqlApiCommand.ts



var _AssociateMergedGraphqlApiCommand = class _AssociateMergedGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "AssociateMergedGraphqlApi", {}).n("AppSyncClient", "AssociateMergedGraphqlApiCommand").f(void 0, void 0).ser(se_AssociateMergedGraphqlApiCommand).de(de_AssociateMergedGraphqlApiCommand).build() {
};
__name(_AssociateMergedGraphqlApiCommand, "AssociateMergedGraphqlApiCommand");
var AssociateMergedGraphqlApiCommand = _AssociateMergedGraphqlApiCommand;

// src/commands/AssociateSourceGraphqlApiCommand.ts



var _AssociateSourceGraphqlApiCommand = class _AssociateSourceGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "AssociateSourceGraphqlApi", {}).n("AppSyncClient", "AssociateSourceGraphqlApiCommand").f(void 0, void 0).ser(se_AssociateSourceGraphqlApiCommand).de(de_AssociateSourceGraphqlApiCommand).build() {
};
__name(_AssociateSourceGraphqlApiCommand, "AssociateSourceGraphqlApiCommand");
var AssociateSourceGraphqlApiCommand = _AssociateSourceGraphqlApiCommand;

// src/commands/CreateApiCacheCommand.ts



var _CreateApiCacheCommand = class _CreateApiCacheCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateApiCache", {}).n("AppSyncClient", "CreateApiCacheCommand").f(void 0, void 0).ser(se_CreateApiCacheCommand).de(de_CreateApiCacheCommand).build() {
};
__name(_CreateApiCacheCommand, "CreateApiCacheCommand");
var CreateApiCacheCommand = _CreateApiCacheCommand;

// src/commands/CreateApiKeyCommand.ts



var _CreateApiKeyCommand = class _CreateApiKeyCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateApiKey", {}).n("AppSyncClient", "CreateApiKeyCommand").f(void 0, void 0).ser(se_CreateApiKeyCommand).de(de_CreateApiKeyCommand).build() {
};
__name(_CreateApiKeyCommand, "CreateApiKeyCommand");
var CreateApiKeyCommand = _CreateApiKeyCommand;

// src/commands/CreateDataSourceCommand.ts



var _CreateDataSourceCommand = class _CreateDataSourceCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateDataSource", {}).n("AppSyncClient", "CreateDataSourceCommand").f(void 0, void 0).ser(se_CreateDataSourceCommand).de(de_CreateDataSourceCommand).build() {
};
__name(_CreateDataSourceCommand, "CreateDataSourceCommand");
var CreateDataSourceCommand = _CreateDataSourceCommand;

// src/commands/CreateDomainNameCommand.ts



var _CreateDomainNameCommand = class _CreateDomainNameCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateDomainName", {}).n("AppSyncClient", "CreateDomainNameCommand").f(void 0, void 0).ser(se_CreateDomainNameCommand).de(de_CreateDomainNameCommand).build() {
};
__name(_CreateDomainNameCommand, "CreateDomainNameCommand");
var CreateDomainNameCommand = _CreateDomainNameCommand;

// src/commands/CreateFunctionCommand.ts



var _CreateFunctionCommand = class _CreateFunctionCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateFunction", {}).n("AppSyncClient", "CreateFunctionCommand").f(void 0, void 0).ser(se_CreateFunctionCommand).de(de_CreateFunctionCommand).build() {
};
__name(_CreateFunctionCommand, "CreateFunctionCommand");
var CreateFunctionCommand = _CreateFunctionCommand;

// src/commands/CreateGraphqlApiCommand.ts



var _CreateGraphqlApiCommand = class _CreateGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateGraphqlApi", {}).n("AppSyncClient", "CreateGraphqlApiCommand").f(void 0, void 0).ser(se_CreateGraphqlApiCommand).de(de_CreateGraphqlApiCommand).build() {
};
__name(_CreateGraphqlApiCommand, "CreateGraphqlApiCommand");
var CreateGraphqlApiCommand = _CreateGraphqlApiCommand;

// src/commands/CreateResolverCommand.ts



var _CreateResolverCommand = class _CreateResolverCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateResolver", {}).n("AppSyncClient", "CreateResolverCommand").f(void 0, void 0).ser(se_CreateResolverCommand).de(de_CreateResolverCommand).build() {
};
__name(_CreateResolverCommand, "CreateResolverCommand");
var CreateResolverCommand = _CreateResolverCommand;

// src/commands/CreateTypeCommand.ts



var _CreateTypeCommand = class _CreateTypeCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "CreateType", {}).n("AppSyncClient", "CreateTypeCommand").f(void 0, void 0).ser(se_CreateTypeCommand).de(de_CreateTypeCommand).build() {
};
__name(_CreateTypeCommand, "CreateTypeCommand");
var CreateTypeCommand = _CreateTypeCommand;

// src/commands/DeleteApiCacheCommand.ts



var _DeleteApiCacheCommand = class _DeleteApiCacheCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteApiCache", {}).n("AppSyncClient", "DeleteApiCacheCommand").f(void 0, void 0).ser(se_DeleteApiCacheCommand).de(de_DeleteApiCacheCommand).build() {
};
__name(_DeleteApiCacheCommand, "DeleteApiCacheCommand");
var DeleteApiCacheCommand = _DeleteApiCacheCommand;

// src/commands/DeleteApiKeyCommand.ts



var _DeleteApiKeyCommand = class _DeleteApiKeyCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteApiKey", {}).n("AppSyncClient", "DeleteApiKeyCommand").f(void 0, void 0).ser(se_DeleteApiKeyCommand).de(de_DeleteApiKeyCommand).build() {
};
__name(_DeleteApiKeyCommand, "DeleteApiKeyCommand");
var DeleteApiKeyCommand = _DeleteApiKeyCommand;

// src/commands/DeleteDataSourceCommand.ts



var _DeleteDataSourceCommand = class _DeleteDataSourceCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteDataSource", {}).n("AppSyncClient", "DeleteDataSourceCommand").f(void 0, void 0).ser(se_DeleteDataSourceCommand).de(de_DeleteDataSourceCommand).build() {
};
__name(_DeleteDataSourceCommand, "DeleteDataSourceCommand");
var DeleteDataSourceCommand = _DeleteDataSourceCommand;

// src/commands/DeleteDomainNameCommand.ts



var _DeleteDomainNameCommand = class _DeleteDomainNameCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteDomainName", {}).n("AppSyncClient", "DeleteDomainNameCommand").f(void 0, void 0).ser(se_DeleteDomainNameCommand).de(de_DeleteDomainNameCommand).build() {
};
__name(_DeleteDomainNameCommand, "DeleteDomainNameCommand");
var DeleteDomainNameCommand = _DeleteDomainNameCommand;

// src/commands/DeleteFunctionCommand.ts



var _DeleteFunctionCommand = class _DeleteFunctionCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteFunction", {}).n("AppSyncClient", "DeleteFunctionCommand").f(void 0, void 0).ser(se_DeleteFunctionCommand).de(de_DeleteFunctionCommand).build() {
};
__name(_DeleteFunctionCommand, "DeleteFunctionCommand");
var DeleteFunctionCommand = _DeleteFunctionCommand;

// src/commands/DeleteGraphqlApiCommand.ts



var _DeleteGraphqlApiCommand = class _DeleteGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteGraphqlApi", {}).n("AppSyncClient", "DeleteGraphqlApiCommand").f(void 0, void 0).ser(se_DeleteGraphqlApiCommand).de(de_DeleteGraphqlApiCommand).build() {
};
__name(_DeleteGraphqlApiCommand, "DeleteGraphqlApiCommand");
var DeleteGraphqlApiCommand = _DeleteGraphqlApiCommand;

// src/commands/DeleteResolverCommand.ts



var _DeleteResolverCommand = class _DeleteResolverCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteResolver", {}).n("AppSyncClient", "DeleteResolverCommand").f(void 0, void 0).ser(se_DeleteResolverCommand).de(de_DeleteResolverCommand).build() {
};
__name(_DeleteResolverCommand, "DeleteResolverCommand");
var DeleteResolverCommand = _DeleteResolverCommand;

// src/commands/DeleteTypeCommand.ts



var _DeleteTypeCommand = class _DeleteTypeCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DeleteType", {}).n("AppSyncClient", "DeleteTypeCommand").f(void 0, void 0).ser(se_DeleteTypeCommand).de(de_DeleteTypeCommand).build() {
};
__name(_DeleteTypeCommand, "DeleteTypeCommand");
var DeleteTypeCommand = _DeleteTypeCommand;

// src/commands/DisassociateApiCommand.ts



var _DisassociateApiCommand = class _DisassociateApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DisassociateApi", {}).n("AppSyncClient", "DisassociateApiCommand").f(void 0, void 0).ser(se_DisassociateApiCommand).de(de_DisassociateApiCommand).build() {
};
__name(_DisassociateApiCommand, "DisassociateApiCommand");
var DisassociateApiCommand = _DisassociateApiCommand;

// src/commands/DisassociateMergedGraphqlApiCommand.ts



var _DisassociateMergedGraphqlApiCommand = class _DisassociateMergedGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DisassociateMergedGraphqlApi", {}).n("AppSyncClient", "DisassociateMergedGraphqlApiCommand").f(void 0, void 0).ser(se_DisassociateMergedGraphqlApiCommand).de(de_DisassociateMergedGraphqlApiCommand).build() {
};
__name(_DisassociateMergedGraphqlApiCommand, "DisassociateMergedGraphqlApiCommand");
var DisassociateMergedGraphqlApiCommand = _DisassociateMergedGraphqlApiCommand;

// src/commands/DisassociateSourceGraphqlApiCommand.ts



var _DisassociateSourceGraphqlApiCommand = class _DisassociateSourceGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "DisassociateSourceGraphqlApi", {}).n("AppSyncClient", "DisassociateSourceGraphqlApiCommand").f(void 0, void 0).ser(se_DisassociateSourceGraphqlApiCommand).de(de_DisassociateSourceGraphqlApiCommand).build() {
};
__name(_DisassociateSourceGraphqlApiCommand, "DisassociateSourceGraphqlApiCommand");
var DisassociateSourceGraphqlApiCommand = _DisassociateSourceGraphqlApiCommand;

// src/commands/EvaluateCodeCommand.ts



var _EvaluateCodeCommand = class _EvaluateCodeCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "EvaluateCode", {}).n("AppSyncClient", "EvaluateCodeCommand").f(void 0, void 0).ser(se_EvaluateCodeCommand).de(de_EvaluateCodeCommand).build() {
};
__name(_EvaluateCodeCommand, "EvaluateCodeCommand");
var EvaluateCodeCommand = _EvaluateCodeCommand;

// src/commands/EvaluateMappingTemplateCommand.ts



var _EvaluateMappingTemplateCommand = class _EvaluateMappingTemplateCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "EvaluateMappingTemplate", {}).n("AppSyncClient", "EvaluateMappingTemplateCommand").f(void 0, void 0).ser(se_EvaluateMappingTemplateCommand).de(de_EvaluateMappingTemplateCommand).build() {
};
__name(_EvaluateMappingTemplateCommand, "EvaluateMappingTemplateCommand");
var EvaluateMappingTemplateCommand = _EvaluateMappingTemplateCommand;

// src/commands/FlushApiCacheCommand.ts



var _FlushApiCacheCommand = class _FlushApiCacheCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "FlushApiCache", {}).n("AppSyncClient", "FlushApiCacheCommand").f(void 0, void 0).ser(se_FlushApiCacheCommand).de(de_FlushApiCacheCommand).build() {
};
__name(_FlushApiCacheCommand, "FlushApiCacheCommand");
var FlushApiCacheCommand = _FlushApiCacheCommand;

// src/commands/GetApiAssociationCommand.ts



var _GetApiAssociationCommand = class _GetApiAssociationCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetApiAssociation", {}).n("AppSyncClient", "GetApiAssociationCommand").f(void 0, void 0).ser(se_GetApiAssociationCommand).de(de_GetApiAssociationCommand).build() {
};
__name(_GetApiAssociationCommand, "GetApiAssociationCommand");
var GetApiAssociationCommand = _GetApiAssociationCommand;

// src/commands/GetApiCacheCommand.ts



var _GetApiCacheCommand = class _GetApiCacheCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetApiCache", {}).n("AppSyncClient", "GetApiCacheCommand").f(void 0, void 0).ser(se_GetApiCacheCommand).de(de_GetApiCacheCommand).build() {
};
__name(_GetApiCacheCommand, "GetApiCacheCommand");
var GetApiCacheCommand = _GetApiCacheCommand;

// src/commands/GetDataSourceCommand.ts



var _GetDataSourceCommand = class _GetDataSourceCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetDataSource", {}).n("AppSyncClient", "GetDataSourceCommand").f(void 0, void 0).ser(se_GetDataSourceCommand).de(de_GetDataSourceCommand).build() {
};
__name(_GetDataSourceCommand, "GetDataSourceCommand");
var GetDataSourceCommand = _GetDataSourceCommand;

// src/commands/GetDataSourceIntrospectionCommand.ts



var _GetDataSourceIntrospectionCommand = class _GetDataSourceIntrospectionCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetDataSourceIntrospection", {}).n("AppSyncClient", "GetDataSourceIntrospectionCommand").f(void 0, void 0).ser(se_GetDataSourceIntrospectionCommand).de(de_GetDataSourceIntrospectionCommand).build() {
};
__name(_GetDataSourceIntrospectionCommand, "GetDataSourceIntrospectionCommand");
var GetDataSourceIntrospectionCommand = _GetDataSourceIntrospectionCommand;

// src/commands/GetDomainNameCommand.ts



var _GetDomainNameCommand = class _GetDomainNameCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetDomainName", {}).n("AppSyncClient", "GetDomainNameCommand").f(void 0, void 0).ser(se_GetDomainNameCommand).de(de_GetDomainNameCommand).build() {
};
__name(_GetDomainNameCommand, "GetDomainNameCommand");
var GetDomainNameCommand = _GetDomainNameCommand;

// src/commands/GetFunctionCommand.ts



var _GetFunctionCommand = class _GetFunctionCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetFunction", {}).n("AppSyncClient", "GetFunctionCommand").f(void 0, void 0).ser(se_GetFunctionCommand).de(de_GetFunctionCommand).build() {
};
__name(_GetFunctionCommand, "GetFunctionCommand");
var GetFunctionCommand = _GetFunctionCommand;

// src/commands/GetGraphqlApiCommand.ts



var _GetGraphqlApiCommand = class _GetGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetGraphqlApi", {}).n("AppSyncClient", "GetGraphqlApiCommand").f(void 0, void 0).ser(se_GetGraphqlApiCommand).de(de_GetGraphqlApiCommand).build() {
};
__name(_GetGraphqlApiCommand, "GetGraphqlApiCommand");
var GetGraphqlApiCommand = _GetGraphqlApiCommand;

// src/commands/GetGraphqlApiEnvironmentVariablesCommand.ts



var _GetGraphqlApiEnvironmentVariablesCommand = class _GetGraphqlApiEnvironmentVariablesCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetGraphqlApiEnvironmentVariables", {}).n("AppSyncClient", "GetGraphqlApiEnvironmentVariablesCommand").f(void 0, void 0).ser(se_GetGraphqlApiEnvironmentVariablesCommand).de(de_GetGraphqlApiEnvironmentVariablesCommand).build() {
};
__name(_GetGraphqlApiEnvironmentVariablesCommand, "GetGraphqlApiEnvironmentVariablesCommand");
var GetGraphqlApiEnvironmentVariablesCommand = _GetGraphqlApiEnvironmentVariablesCommand;

// src/commands/GetIntrospectionSchemaCommand.ts



var _GetIntrospectionSchemaCommand = class _GetIntrospectionSchemaCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetIntrospectionSchema", {}).n("AppSyncClient", "GetIntrospectionSchemaCommand").f(void 0, void 0).ser(se_GetIntrospectionSchemaCommand).de(de_GetIntrospectionSchemaCommand).build() {
};
__name(_GetIntrospectionSchemaCommand, "GetIntrospectionSchemaCommand");
var GetIntrospectionSchemaCommand = _GetIntrospectionSchemaCommand;

// src/commands/GetResolverCommand.ts



var _GetResolverCommand = class _GetResolverCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetResolver", {}).n("AppSyncClient", "GetResolverCommand").f(void 0, void 0).ser(se_GetResolverCommand).de(de_GetResolverCommand).build() {
};
__name(_GetResolverCommand, "GetResolverCommand");
var GetResolverCommand = _GetResolverCommand;

// src/commands/GetSchemaCreationStatusCommand.ts



var _GetSchemaCreationStatusCommand = class _GetSchemaCreationStatusCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetSchemaCreationStatus", {}).n("AppSyncClient", "GetSchemaCreationStatusCommand").f(void 0, void 0).ser(se_GetSchemaCreationStatusCommand).de(de_GetSchemaCreationStatusCommand).build() {
};
__name(_GetSchemaCreationStatusCommand, "GetSchemaCreationStatusCommand");
var GetSchemaCreationStatusCommand = _GetSchemaCreationStatusCommand;

// src/commands/GetSourceApiAssociationCommand.ts



var _GetSourceApiAssociationCommand = class _GetSourceApiAssociationCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetSourceApiAssociation", {}).n("AppSyncClient", "GetSourceApiAssociationCommand").f(void 0, void 0).ser(se_GetSourceApiAssociationCommand).de(de_GetSourceApiAssociationCommand).build() {
};
__name(_GetSourceApiAssociationCommand, "GetSourceApiAssociationCommand");
var GetSourceApiAssociationCommand = _GetSourceApiAssociationCommand;

// src/commands/GetTypeCommand.ts



var _GetTypeCommand = class _GetTypeCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "GetType", {}).n("AppSyncClient", "GetTypeCommand").f(void 0, void 0).ser(se_GetTypeCommand).de(de_GetTypeCommand).build() {
};
__name(_GetTypeCommand, "GetTypeCommand");
var GetTypeCommand = _GetTypeCommand;

// src/commands/ListApiKeysCommand.ts



var _ListApiKeysCommand = class _ListApiKeysCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListApiKeys", {}).n("AppSyncClient", "ListApiKeysCommand").f(void 0, void 0).ser(se_ListApiKeysCommand).de(de_ListApiKeysCommand).build() {
};
__name(_ListApiKeysCommand, "ListApiKeysCommand");
var ListApiKeysCommand = _ListApiKeysCommand;

// src/commands/ListDataSourcesCommand.ts



var _ListDataSourcesCommand = class _ListDataSourcesCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListDataSources", {}).n("AppSyncClient", "ListDataSourcesCommand").f(void 0, void 0).ser(se_ListDataSourcesCommand).de(de_ListDataSourcesCommand).build() {
};
__name(_ListDataSourcesCommand, "ListDataSourcesCommand");
var ListDataSourcesCommand = _ListDataSourcesCommand;

// src/commands/ListDomainNamesCommand.ts



var _ListDomainNamesCommand = class _ListDomainNamesCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListDomainNames", {}).n("AppSyncClient", "ListDomainNamesCommand").f(void 0, void 0).ser(se_ListDomainNamesCommand).de(de_ListDomainNamesCommand).build() {
};
__name(_ListDomainNamesCommand, "ListDomainNamesCommand");
var ListDomainNamesCommand = _ListDomainNamesCommand;

// src/commands/ListFunctionsCommand.ts



var _ListFunctionsCommand = class _ListFunctionsCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListFunctions", {}).n("AppSyncClient", "ListFunctionsCommand").f(void 0, void 0).ser(se_ListFunctionsCommand).de(de_ListFunctionsCommand).build() {
};
__name(_ListFunctionsCommand, "ListFunctionsCommand");
var ListFunctionsCommand = _ListFunctionsCommand;

// src/commands/ListGraphqlApisCommand.ts



var _ListGraphqlApisCommand = class _ListGraphqlApisCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListGraphqlApis", {}).n("AppSyncClient", "ListGraphqlApisCommand").f(void 0, void 0).ser(se_ListGraphqlApisCommand).de(de_ListGraphqlApisCommand).build() {
};
__name(_ListGraphqlApisCommand, "ListGraphqlApisCommand");
var ListGraphqlApisCommand = _ListGraphqlApisCommand;

// src/commands/ListResolversByFunctionCommand.ts



var _ListResolversByFunctionCommand = class _ListResolversByFunctionCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListResolversByFunction", {}).n("AppSyncClient", "ListResolversByFunctionCommand").f(void 0, void 0).ser(se_ListResolversByFunctionCommand).de(de_ListResolversByFunctionCommand).build() {
};
__name(_ListResolversByFunctionCommand, "ListResolversByFunctionCommand");
var ListResolversByFunctionCommand = _ListResolversByFunctionCommand;

// src/commands/ListResolversCommand.ts



var _ListResolversCommand = class _ListResolversCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListResolvers", {}).n("AppSyncClient", "ListResolversCommand").f(void 0, void 0).ser(se_ListResolversCommand).de(de_ListResolversCommand).build() {
};
__name(_ListResolversCommand, "ListResolversCommand");
var ListResolversCommand = _ListResolversCommand;

// src/commands/ListSourceApiAssociationsCommand.ts



var _ListSourceApiAssociationsCommand = class _ListSourceApiAssociationsCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListSourceApiAssociations", {}).n("AppSyncClient", "ListSourceApiAssociationsCommand").f(void 0, void 0).ser(se_ListSourceApiAssociationsCommand).de(de_ListSourceApiAssociationsCommand).build() {
};
__name(_ListSourceApiAssociationsCommand, "ListSourceApiAssociationsCommand");
var ListSourceApiAssociationsCommand = _ListSourceApiAssociationsCommand;

// src/commands/ListTagsForResourceCommand.ts



var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListTagsForResource", {}).n("AppSyncClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListTypesByAssociationCommand.ts



var _ListTypesByAssociationCommand = class _ListTypesByAssociationCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListTypesByAssociation", {}).n("AppSyncClient", "ListTypesByAssociationCommand").f(void 0, void 0).ser(se_ListTypesByAssociationCommand).de(de_ListTypesByAssociationCommand).build() {
};
__name(_ListTypesByAssociationCommand, "ListTypesByAssociationCommand");
var ListTypesByAssociationCommand = _ListTypesByAssociationCommand;

// src/commands/ListTypesCommand.ts



var _ListTypesCommand = class _ListTypesCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "ListTypes", {}).n("AppSyncClient", "ListTypesCommand").f(void 0, void 0).ser(se_ListTypesCommand).de(de_ListTypesCommand).build() {
};
__name(_ListTypesCommand, "ListTypesCommand");
var ListTypesCommand = _ListTypesCommand;

// src/commands/PutGraphqlApiEnvironmentVariablesCommand.ts



var _PutGraphqlApiEnvironmentVariablesCommand = class _PutGraphqlApiEnvironmentVariablesCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "PutGraphqlApiEnvironmentVariables", {}).n("AppSyncClient", "PutGraphqlApiEnvironmentVariablesCommand").f(void 0, void 0).ser(se_PutGraphqlApiEnvironmentVariablesCommand).de(de_PutGraphqlApiEnvironmentVariablesCommand).build() {
};
__name(_PutGraphqlApiEnvironmentVariablesCommand, "PutGraphqlApiEnvironmentVariablesCommand");
var PutGraphqlApiEnvironmentVariablesCommand = _PutGraphqlApiEnvironmentVariablesCommand;

// src/commands/StartDataSourceIntrospectionCommand.ts



var _StartDataSourceIntrospectionCommand = class _StartDataSourceIntrospectionCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "StartDataSourceIntrospection", {}).n("AppSyncClient", "StartDataSourceIntrospectionCommand").f(void 0, void 0).ser(se_StartDataSourceIntrospectionCommand).de(de_StartDataSourceIntrospectionCommand).build() {
};
__name(_StartDataSourceIntrospectionCommand, "StartDataSourceIntrospectionCommand");
var StartDataSourceIntrospectionCommand = _StartDataSourceIntrospectionCommand;

// src/commands/StartSchemaCreationCommand.ts



var _StartSchemaCreationCommand = class _StartSchemaCreationCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "StartSchemaCreation", {}).n("AppSyncClient", "StartSchemaCreationCommand").f(void 0, void 0).ser(se_StartSchemaCreationCommand).de(de_StartSchemaCreationCommand).build() {
};
__name(_StartSchemaCreationCommand, "StartSchemaCreationCommand");
var StartSchemaCreationCommand = _StartSchemaCreationCommand;

// src/commands/StartSchemaMergeCommand.ts



var _StartSchemaMergeCommand = class _StartSchemaMergeCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "StartSchemaMerge", {}).n("AppSyncClient", "StartSchemaMergeCommand").f(void 0, void 0).ser(se_StartSchemaMergeCommand).de(de_StartSchemaMergeCommand).build() {
};
__name(_StartSchemaMergeCommand, "StartSchemaMergeCommand");
var StartSchemaMergeCommand = _StartSchemaMergeCommand;

// src/commands/TagResourceCommand.ts



var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "TagResource", {}).n("AppSyncClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts



var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UntagResource", {}).n("AppSyncClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateApiCacheCommand.ts



var _UpdateApiCacheCommand = class _UpdateApiCacheCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateApiCache", {}).n("AppSyncClient", "UpdateApiCacheCommand").f(void 0, void 0).ser(se_UpdateApiCacheCommand).de(de_UpdateApiCacheCommand).build() {
};
__name(_UpdateApiCacheCommand, "UpdateApiCacheCommand");
var UpdateApiCacheCommand = _UpdateApiCacheCommand;

// src/commands/UpdateApiKeyCommand.ts



var _UpdateApiKeyCommand = class _UpdateApiKeyCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateApiKey", {}).n("AppSyncClient", "UpdateApiKeyCommand").f(void 0, void 0).ser(se_UpdateApiKeyCommand).de(de_UpdateApiKeyCommand).build() {
};
__name(_UpdateApiKeyCommand, "UpdateApiKeyCommand");
var UpdateApiKeyCommand = _UpdateApiKeyCommand;

// src/commands/UpdateDataSourceCommand.ts



var _UpdateDataSourceCommand = class _UpdateDataSourceCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateDataSource", {}).n("AppSyncClient", "UpdateDataSourceCommand").f(void 0, void 0).ser(se_UpdateDataSourceCommand).de(de_UpdateDataSourceCommand).build() {
};
__name(_UpdateDataSourceCommand, "UpdateDataSourceCommand");
var UpdateDataSourceCommand = _UpdateDataSourceCommand;

// src/commands/UpdateDomainNameCommand.ts



var _UpdateDomainNameCommand = class _UpdateDomainNameCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateDomainName", {}).n("AppSyncClient", "UpdateDomainNameCommand").f(void 0, void 0).ser(se_UpdateDomainNameCommand).de(de_UpdateDomainNameCommand).build() {
};
__name(_UpdateDomainNameCommand, "UpdateDomainNameCommand");
var UpdateDomainNameCommand = _UpdateDomainNameCommand;

// src/commands/UpdateFunctionCommand.ts



var _UpdateFunctionCommand = class _UpdateFunctionCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateFunction", {}).n("AppSyncClient", "UpdateFunctionCommand").f(void 0, void 0).ser(se_UpdateFunctionCommand).de(de_UpdateFunctionCommand).build() {
};
__name(_UpdateFunctionCommand, "UpdateFunctionCommand");
var UpdateFunctionCommand = _UpdateFunctionCommand;

// src/commands/UpdateGraphqlApiCommand.ts



var _UpdateGraphqlApiCommand = class _UpdateGraphqlApiCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateGraphqlApi", {}).n("AppSyncClient", "UpdateGraphqlApiCommand").f(void 0, void 0).ser(se_UpdateGraphqlApiCommand).de(de_UpdateGraphqlApiCommand).build() {
};
__name(_UpdateGraphqlApiCommand, "UpdateGraphqlApiCommand");
var UpdateGraphqlApiCommand = _UpdateGraphqlApiCommand;

// src/commands/UpdateResolverCommand.ts



var _UpdateResolverCommand = class _UpdateResolverCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateResolver", {}).n("AppSyncClient", "UpdateResolverCommand").f(void 0, void 0).ser(se_UpdateResolverCommand).de(de_UpdateResolverCommand).build() {
};
__name(_UpdateResolverCommand, "UpdateResolverCommand");
var UpdateResolverCommand = _UpdateResolverCommand;

// src/commands/UpdateSourceApiAssociationCommand.ts



var _UpdateSourceApiAssociationCommand = class _UpdateSourceApiAssociationCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateSourceApiAssociation", {}).n("AppSyncClient", "UpdateSourceApiAssociationCommand").f(void 0, void 0).ser(se_UpdateSourceApiAssociationCommand).de(de_UpdateSourceApiAssociationCommand).build() {
};
__name(_UpdateSourceApiAssociationCommand, "UpdateSourceApiAssociationCommand");
var UpdateSourceApiAssociationCommand = _UpdateSourceApiAssociationCommand;

// src/commands/UpdateTypeCommand.ts



var _UpdateTypeCommand = class _UpdateTypeCommand extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSDeepdishControlPlaneService", "UpdateType", {}).n("AppSyncClient", "UpdateTypeCommand").f(void 0, void 0).ser(se_UpdateTypeCommand).de(de_UpdateTypeCommand).build() {
};
__name(_UpdateTypeCommand, "UpdateTypeCommand");
var UpdateTypeCommand = _UpdateTypeCommand;

// src/AppSync.ts
var commands = {
  AssociateApiCommand,
  AssociateMergedGraphqlApiCommand,
  AssociateSourceGraphqlApiCommand,
  CreateApiCacheCommand,
  CreateApiKeyCommand,
  CreateDataSourceCommand,
  CreateDomainNameCommand,
  CreateFunctionCommand,
  CreateGraphqlApiCommand,
  CreateResolverCommand,
  CreateTypeCommand,
  DeleteApiCacheCommand,
  DeleteApiKeyCommand,
  DeleteDataSourceCommand,
  DeleteDomainNameCommand,
  DeleteFunctionCommand,
  DeleteGraphqlApiCommand,
  DeleteResolverCommand,
  DeleteTypeCommand,
  DisassociateApiCommand,
  DisassociateMergedGraphqlApiCommand,
  DisassociateSourceGraphqlApiCommand,
  EvaluateCodeCommand,
  EvaluateMappingTemplateCommand,
  FlushApiCacheCommand,
  GetApiAssociationCommand,
  GetApiCacheCommand,
  GetDataSourceCommand,
  GetDataSourceIntrospectionCommand,
  GetDomainNameCommand,
  GetFunctionCommand,
  GetGraphqlApiCommand,
  GetGraphqlApiEnvironmentVariablesCommand,
  GetIntrospectionSchemaCommand,
  GetResolverCommand,
  GetSchemaCreationStatusCommand,
  GetSourceApiAssociationCommand,
  GetTypeCommand,
  ListApiKeysCommand,
  ListDataSourcesCommand,
  ListDomainNamesCommand,
  ListFunctionsCommand,
  ListGraphqlApisCommand,
  ListResolversCommand,
  ListResolversByFunctionCommand,
  ListSourceApiAssociationsCommand,
  ListTagsForResourceCommand,
  ListTypesCommand,
  ListTypesByAssociationCommand,
  PutGraphqlApiEnvironmentVariablesCommand,
  StartDataSourceIntrospectionCommand,
  StartSchemaCreationCommand,
  StartSchemaMergeCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApiCacheCommand,
  UpdateApiKeyCommand,
  UpdateDataSourceCommand,
  UpdateDomainNameCommand,
  UpdateFunctionCommand,
  UpdateGraphqlApiCommand,
  UpdateResolverCommand,
  UpdateSourceApiAssociationCommand,
  UpdateTypeCommand
};
var _AppSync = class _AppSync extends AppSyncClient {
};
__name(_AppSync, "AppSync");
var AppSync = _AppSync;
(0, import_smithy_client.createAggregatedClient)(commands, AppSync);

// src/pagination/ListApiKeysPaginator.ts

var paginateListApiKeys = (0, import_core.createPaginator)(AppSyncClient, ListApiKeysCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDataSourcesPaginator.ts

var paginateListDataSources = (0, import_core.createPaginator)(AppSyncClient, ListDataSourcesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDomainNamesPaginator.ts

var paginateListDomainNames = (0, import_core.createPaginator)(AppSyncClient, ListDomainNamesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFunctionsPaginator.ts

var paginateListFunctions = (0, import_core.createPaginator)(AppSyncClient, ListFunctionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListGraphqlApisPaginator.ts

var paginateListGraphqlApis = (0, import_core.createPaginator)(AppSyncClient, ListGraphqlApisCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListResolversByFunctionPaginator.ts

var paginateListResolversByFunction = (0, import_core.createPaginator)(AppSyncClient, ListResolversByFunctionCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListResolversPaginator.ts

var paginateListResolvers = (0, import_core.createPaginator)(AppSyncClient, ListResolversCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSourceApiAssociationsPaginator.ts

var paginateListSourceApiAssociations = (0, import_core.createPaginator)(AppSyncClient, ListSourceApiAssociationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListTypesByAssociationPaginator.ts

var paginateListTypesByAssociation = (0, import_core.createPaginator)(AppSyncClient, ListTypesByAssociationCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListTypesPaginator.ts

var paginateListTypes = (0, import_core.createPaginator)(AppSyncClient, ListTypesCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  AppSyncServiceException,
  __Client,
  AppSyncClient,
  AppSync,
  $Command,
  AssociateApiCommand,
  AssociateMergedGraphqlApiCommand,
  AssociateSourceGraphqlApiCommand,
  CreateApiCacheCommand,
  CreateApiKeyCommand,
  CreateDataSourceCommand,
  CreateDomainNameCommand,
  CreateFunctionCommand,
  CreateGraphqlApiCommand,
  CreateResolverCommand,
  CreateTypeCommand,
  DeleteApiCacheCommand,
  DeleteApiKeyCommand,
  DeleteDataSourceCommand,
  DeleteDomainNameCommand,
  DeleteFunctionCommand,
  DeleteGraphqlApiCommand,
  DeleteResolverCommand,
  DeleteTypeCommand,
  DisassociateApiCommand,
  DisassociateMergedGraphqlApiCommand,
  DisassociateSourceGraphqlApiCommand,
  EvaluateCodeCommand,
  EvaluateMappingTemplateCommand,
  FlushApiCacheCommand,
  GetApiAssociationCommand,
  GetApiCacheCommand,
  GetDataSourceCommand,
  GetDataSourceIntrospectionCommand,
  GetDomainNameCommand,
  GetFunctionCommand,
  GetGraphqlApiCommand,
  GetGraphqlApiEnvironmentVariablesCommand,
  GetIntrospectionSchemaCommand,
  GetResolverCommand,
  GetSchemaCreationStatusCommand,
  GetSourceApiAssociationCommand,
  GetTypeCommand,
  ListApiKeysCommand,
  ListDataSourcesCommand,
  ListDomainNamesCommand,
  ListFunctionsCommand,
  ListGraphqlApisCommand,
  ListResolversByFunctionCommand,
  ListResolversCommand,
  ListSourceApiAssociationsCommand,
  ListTagsForResourceCommand,
  ListTypesByAssociationCommand,
  ListTypesCommand,
  PutGraphqlApiEnvironmentVariablesCommand,
  StartDataSourceIntrospectionCommand,
  StartSchemaCreationCommand,
  StartSchemaMergeCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApiCacheCommand,
  UpdateApiKeyCommand,
  UpdateDataSourceCommand,
  UpdateDomainNameCommand,
  UpdateFunctionCommand,
  UpdateGraphqlApiCommand,
  UpdateResolverCommand,
  UpdateSourceApiAssociationCommand,
  UpdateTypeCommand,
  paginateListApiKeys,
  paginateListDataSources,
  paginateListDomainNames,
  paginateListFunctions,
  paginateListGraphqlApis,
  paginateListResolversByFunction,
  paginateListResolvers,
  paginateListSourceApiAssociations,
  paginateListTypesByAssociation,
  paginateListTypes,
  AccessDeniedException,
  AuthenticationType,
  AssociationStatus,
  ApiCachingBehavior,
  CacheHealthMetricsConfig,
  ApiCacheStatus,
  ApiCacheType,
  ApiKeyLimitExceededException,
  ApiKeyValidityOutOfBoundsException,
  ApiLimitExceededException,
  RuntimeName,
  BadRequestReason,
  BadRequestException,
  InternalFailureException,
  NotFoundException,
  MergeType,
  SourceApiAssociationStatus,
  ConcurrentModificationException,
  LimitExceededException,
  UnauthorizedException,
  AuthorizationType,
  DataSourceLevelMetricsConfig,
  RelationalDatabaseSourceType,
  DataSourceType,
  ConflictDetectionType,
  ConflictHandlerType,
  GraphQLApiType,
  DataSourceLevelMetricsBehavior,
  OperationLevelMetricsConfig,
  ResolverLevelMetricsBehavior,
  GraphQLApiIntrospectionConfig,
  FieldLogLevel,
  DefaultAction,
  GraphQLApiVisibility,
  ResolverKind,
  ResolverLevelMetricsConfig,
  TypeDefinitionFormat,
  DataSourceIntrospectionStatus,
  OutputType,
  GraphQLSchemaException,
  SchemaStatus,
  Ownership
});

