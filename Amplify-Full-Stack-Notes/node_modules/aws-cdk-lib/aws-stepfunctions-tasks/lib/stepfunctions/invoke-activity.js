"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.StepFunctionsInvokeActivity=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var iam=()=>{var tmp=require("../../../aws-iam");return iam=()=>tmp,tmp},sfn=()=>{var tmp=require("../../../aws-stepfunctions");return sfn=()=>tmp,tmp},customer_managed_key_encryption_configuration_1=()=>{var tmp=require("../../../aws-stepfunctions/lib/customer-managed-key-encryption-configuration");return customer_managed_key_encryption_configuration_1=()=>tmp,tmp};class StepFunctionsInvokeActivity extends sfn().TaskStateBase{constructor(scope,id,props){super(scope,id,props),this.props=props;try{jsiiDeprecationWarnings().aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsInvokeActivityProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,StepFunctionsInvokeActivity),error}this.props.activity.encryptionConfiguration instanceof customer_managed_key_encryption_configuration_1().CustomerManagedEncryptionConfiguration&&(this.taskPolicies=this.createPolicyStatements(this.props.activity.encryptionConfiguration.kmsKey)),this.taskMetrics={metricDimensions:{ActivityArn:this.props.activity.activityArn},metricPrefixSingular:"Activity",metricPrefixPlural:"Activities"}}_renderTask(){return{Resource:this.props.activity.activityArn,Parameters:this.props.parameters?sfn().FieldUtils.renderObject(this.props.parameters):void 0}}createPolicyStatements(kmskey){return[new(iam()).PolicyStatement({actions:["kms:Decrypt","kms:GenerateDataKey"],resources:[`${kmskey.keyArn}`],conditions:{StringEquals:{"kms:EncryptionContext:aws:states:activityArn":this.props.activity.activityArn}}})]}}exports.StepFunctionsInvokeActivity=StepFunctionsInvokeActivity,_a=JSII_RTTI_SYMBOL_1,StepFunctionsInvokeActivity[_a]={fqn:"aws-cdk-lib.aws_stepfunctions_tasks.StepFunctionsInvokeActivity",version:"2.162.1"};
