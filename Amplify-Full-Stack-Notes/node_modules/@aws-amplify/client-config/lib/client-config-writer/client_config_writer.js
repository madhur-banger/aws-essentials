import _fsp from 'fs/promises';
import path from 'path';
import { ClientConfigFormat, } from '../client-config-types/client_config.js';
/**
 * A class that persists client config to disk.
 */
export class ClientConfigWriter {
    pathResolver;
    nameResolver;
    formatter;
    fsp;
    /**
     * Creates client config writer
     */
    constructor(pathResolver, nameResolver, formatter, fsp = _fsp) {
        this.pathResolver = pathResolver;
        this.nameResolver = nameResolver;
        this.formatter = formatter;
        this.fsp = fsp;
    }
    /**
     * Persists provided client config as json file to target path.
     */
    writeClientConfig = async (clientConfig, version, outDir, format = ClientConfigFormat.JSON) => {
        const targetPath = await this.pathResolver(this.nameResolver(version), outDir, format);
        const fileContent = this.formatter.format(clientConfig, format);
        await this.fsp.writeFile(targetPath, fileContent);
        return {
            filesWritten: [path.relative(process.cwd(), targetPath)],
        };
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50X2NvbmZpZ193cml0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xpZW50LWNvbmZpZy13cml0ZXIvY2xpZW50X2NvbmZpZ193cml0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxJQUFJLE1BQU0sYUFBYSxDQUFDO0FBQy9CLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLEVBR0wsa0JBQWtCLEdBR25CLE1BQU0seUNBQXlDLENBQUM7QUFhakQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sa0JBQWtCO0lBS1Y7SUFDQTtJQUNBO0lBQ0E7SUFQbkI7O09BRUc7SUFDSCxZQUNtQixZQUFzQyxFQUN0QyxZQUFzQyxFQUN0QyxTQUFnQyxFQUNoQyxNQUFNLElBQUk7UUFIVixpQkFBWSxHQUFaLFlBQVksQ0FBMEI7UUFDdEMsaUJBQVksR0FBWixZQUFZLENBQTBCO1FBQ3RDLGNBQVMsR0FBVCxTQUFTLENBQXVCO1FBQ2hDLFFBQUcsR0FBSCxHQUFHLENBQU87SUFDMUIsQ0FBQztJQUNKOztPQUVHO0lBQ0gsaUJBQWlCLEdBQUcsS0FBSyxFQUN2QixZQUEwQixFQUMxQixPQUE0QixFQUM1QixNQUFlLEVBQ2YsU0FBNkIsa0JBQWtCLENBQUMsSUFBSSxFQUNULEVBQUU7UUFDN0MsTUFBTSxVQUFVLEdBQUcsTUFBTSxJQUFJLENBQUMsWUFBWSxDQUN4QyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxFQUMxQixNQUFNLEVBQ04sTUFBTSxDQUNQLENBQUM7UUFDRixNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEUsTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFFbEQsT0FBTztZQUNMLFlBQVksRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQ3pELENBQUM7SUFDSixDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZnNwIGZyb20gJ2ZzL3Byb21pc2VzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHtcbiAgQ2xpZW50Q29uZmlnLFxuICBDbGllbnRDb25maWdGaWxlQmFzZU5hbWUsXG4gIENsaWVudENvbmZpZ0Zvcm1hdCxcbiAgQ2xpZW50Q29uZmlnVmVyc2lvbixcbiAgR2VuZXJhdGVDbGllbnRDb25maWdUb0ZpbGVSZXN1bHQsXG59IGZyb20gJy4uL2NsaWVudC1jb25maWctdHlwZXMvY2xpZW50X2NvbmZpZy5qcyc7XG5pbXBvcnQgeyBDbGllbnRDb25maWdGb3JtYXR0ZXIgfSBmcm9tICcuL2NsaWVudF9jb25maWdfZm9ybWF0dGVyLmpzJztcblxuZXhwb3J0IHR5cGUgQ2xpZW50Q29uZmlnUGF0aFJlc29sdmVyID0gKFxuICBmaWxlTmFtZTogQ2xpZW50Q29uZmlnRmlsZUJhc2VOYW1lLFxuICBvdXREaXI/OiBzdHJpbmcsXG4gIGZvcm1hdD86IENsaWVudENvbmZpZ0Zvcm1hdFxuKSA9PiBQcm9taXNlPHN0cmluZz47XG5cbmV4cG9ydCB0eXBlIENsaWVudENvbmZpZ05hbWVSZXNvbHZlciA9IChcbiAgdmVyc2lvbjogQ2xpZW50Q29uZmlnVmVyc2lvblxuKSA9PiBDbGllbnRDb25maWdGaWxlQmFzZU5hbWU7XG5cbi8qKlxuICogQSBjbGFzcyB0aGF0IHBlcnNpc3RzIGNsaWVudCBjb25maWcgdG8gZGlzay5cbiAqL1xuZXhwb3J0IGNsYXNzIENsaWVudENvbmZpZ1dyaXRlciB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGNsaWVudCBjb25maWcgd3JpdGVyXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IHBhdGhSZXNvbHZlcjogQ2xpZW50Q29uZmlnUGF0aFJlc29sdmVyLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgbmFtZVJlc29sdmVyOiBDbGllbnRDb25maWdOYW1lUmVzb2x2ZXIsXG4gICAgcHJpdmF0ZSByZWFkb25seSBmb3JtYXR0ZXI6IENsaWVudENvbmZpZ0Zvcm1hdHRlcixcbiAgICBwcml2YXRlIHJlYWRvbmx5IGZzcCA9IF9mc3BcbiAgKSB7fVxuICAvKipcbiAgICogUGVyc2lzdHMgcHJvdmlkZWQgY2xpZW50IGNvbmZpZyBhcyBqc29uIGZpbGUgdG8gdGFyZ2V0IHBhdGguXG4gICAqL1xuICB3cml0ZUNsaWVudENvbmZpZyA9IGFzeW5jIChcbiAgICBjbGllbnRDb25maWc6IENsaWVudENvbmZpZyxcbiAgICB2ZXJzaW9uOiBDbGllbnRDb25maWdWZXJzaW9uLFxuICAgIG91dERpcj86IHN0cmluZyxcbiAgICBmb3JtYXQ6IENsaWVudENvbmZpZ0Zvcm1hdCA9IENsaWVudENvbmZpZ0Zvcm1hdC5KU09OXG4gICk6IFByb21pc2U8R2VuZXJhdGVDbGllbnRDb25maWdUb0ZpbGVSZXN1bHQ+ID0+IHtcbiAgICBjb25zdCB0YXJnZXRQYXRoID0gYXdhaXQgdGhpcy5wYXRoUmVzb2x2ZXIoXG4gICAgICB0aGlzLm5hbWVSZXNvbHZlcih2ZXJzaW9uKSxcbiAgICAgIG91dERpcixcbiAgICAgIGZvcm1hdFxuICAgICk7XG4gICAgY29uc3QgZmlsZUNvbnRlbnQgPSB0aGlzLmZvcm1hdHRlci5mb3JtYXQoY2xpZW50Q29uZmlnLCBmb3JtYXQpO1xuICAgIGF3YWl0IHRoaXMuZnNwLndyaXRlRmlsZSh0YXJnZXRQYXRoLCBmaWxlQ29udGVudCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgZmlsZXNXcml0dGVuOiBbcGF0aC5yZWxhdGl2ZShwcm9jZXNzLmN3ZCgpLCB0YXJnZXRQYXRoKV0sXG4gICAgfTtcbiAgfTtcbn1cbiJdfQ==