import { SSM } from '@aws-sdk/client-ssm';
import { Secret, SecretClient, SecretIdentifier, SecretListItem } from './secret.js';
import { AppId, BackendIdentifier } from '@aws-amplify/plugin-types';
/**
 * This class implements Amplify Secret using SSM parameter store.
 */
export declare class SSMSecretClient implements SecretClient {
    private readonly ssmClient;
    /**
     * Creates a new instance of SSMSecret.
     */
    constructor(ssmClient: SSM);
    /**
     * Get a secret from SSM parameter store.
     */
    getSecret: (backendIdentifier: BackendIdentifier | AppId, secretIdentifier: SecretIdentifier) => Promise<Secret>;
    /**
     * List secrets from SSM parameter store.
     */
    listSecrets: (backendIdentifier: BackendIdentifier | AppId) => Promise<SecretListItem[]>;
    /**
     * Set a secret in SSM parameter store.
     */
    setSecret: (backendIdentifier: BackendIdentifier | AppId, secretName: string, secretValue: string) => Promise<SecretIdentifier>;
    /**
     * Remove a secret from SSM parameter store.
     */
    removeSecret: (backendIdentifier: BackendIdentifier | AppId, secretName: string) => Promise<void>;
}
//# sourceMappingURL=ssm_secret.d.ts.map