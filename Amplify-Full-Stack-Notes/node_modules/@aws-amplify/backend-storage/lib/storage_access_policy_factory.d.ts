import { IBucket } from 'aws-cdk-lib/aws-s3';
import { Policy } from 'aws-cdk-lib/aws-iam';
import { StorageAction, StoragePath } from './types.js';
import { InternalStorageAction } from './private_types.js';
export type Permission = {
    actions: StorageAction[];
    /**
     * An s3 prefix that defines the scope of the actions
     */
    resources: string[];
};
/**
 * Generates IAM policies scoped to a single bucket
 */
export declare class StorageAccessPolicyFactory {
    private readonly bucket;
    private readonly stack;
    /**
     * Instantiate with the bucket to generate policies for
     */
    constructor(bucket: IBucket);
    createPolicy: (permissions: Map<InternalStorageAction, {
        allow: Set<StoragePath>;
        deny: Set<StoragePath>;
    }>) => Policy;
    private getStatement;
}
//# sourceMappingURL=storage_access_policy_factory.d.ts.map