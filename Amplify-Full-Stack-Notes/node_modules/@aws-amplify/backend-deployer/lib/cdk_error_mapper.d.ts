import { AmplifyError } from '@aws-amplify/platform-core';
import { BackendDeployerOutputFormatter } from './types.js';
/**
 * Transforms CDK error messages to human readable ones
 */
export declare class CdkErrorMapper {
    private readonly formatter;
    private multiLineEolRegex;
    /**
     * Instantiate with a formatter that will be used for formatting CLI commands in error messages
     */
    constructor(formatter: BackendDeployerOutputFormatter);
    getAmplifyError: (error: Error) => AmplifyError<CDKDeploymentError | string>;
    private getKnownErrors;
}
export type CDKDeploymentError = 'AccessDeniedError' | 'BackendBuildError' | 'BackendSynthError' | 'BootstrapNotDetectedError' | 'CDKResolveAWSAccountError' | 'CDKVersionMismatchError' | 'CFNUpdateNotSupportedError' | 'CloudFormationDeploymentError' | 'FilePermissionsError' | 'MultipleSandboxInstancesError' | 'ESBuildError' | 'ExpiredTokenError' | 'FileConventionError' | 'FileConventionError' | 'ModuleNotFoundError' | 'SecretNotSetError' | 'SyntaxError';
//# sourceMappingURL=cdk_error_mapper.d.ts.map