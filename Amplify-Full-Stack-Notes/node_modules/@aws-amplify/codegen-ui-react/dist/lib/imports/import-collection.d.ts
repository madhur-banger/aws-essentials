import { ImportDeclaration } from 'typescript';
import { ComponentMetadata } from '@aws-amplify/codegen-ui';
import { ImportValue, ImportSource } from './import-mapping';
import { ReactRenderConfig } from '../react-render-config';
declare type ImportCollectionConfig = {
    rendererConfig?: ReactRenderConfig;
};
export declare class ImportCollection {
    #private;
    constructor(importConfig?: ImportCollectionConfig);
    rendererConfig: ReactRenderConfig | undefined;
    importedNames: Set<string>;
    importAlias: Map<string, Map<string, string>>;
    ingestComponentMetadata(componentMetadata: ComponentMetadata): void;
    private getOperationsPath;
    addMappedImport(...importValue: ImportValue[]): void;
    addGraphqlMutationImport(importName: string): string;
    addGraphqlQueryImport(importName: string): string;
    addGraphqlSubscriptionImport(importName: string): string;
    addModelImport(importName: string): string;
    addImport(packageName: string, importName: string): string;
    removeImportSource(packageImport: ImportSource): void;
    hasPackage(packageName: string): boolean;
    getMappedAlias(packageName: string, importName: string): string;
    getMappedModelAlias(importName: string): string;
    mergeCollections(otherCollection: ImportCollection): void;
    buildSampleSnippetImports(topComponentName: string): ImportDeclaration[];
    getAliasMap(): {
        model: {
            [modelName: string]: string;
        };
    };
    buildImportStatements(skipReactImport?: boolean): ImportDeclaration[];
}
export {};
