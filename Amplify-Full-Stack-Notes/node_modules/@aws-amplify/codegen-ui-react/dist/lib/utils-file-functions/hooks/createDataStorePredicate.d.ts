export declare const createDataStorePredicateString = "export const createDataStorePredicate = <Model extends PersistentModel>(\n  predicateObject: DataStorePredicateObject\n): RecursiveModelPredicateExtender<Model> => {\n  const {\n    and: groupAnd,\n    or: groupOr,\n    field,\n    operator,\n    operand,\n  } = predicateObject;\n\n  if (Array.isArray(groupAnd)) {\n    const predicates = groupAnd.map((condition) =>\n      createDataStorePredicate<Model>(condition)\n    );\n\n    return (p: RecursiveModelPredicate<Model>) =>\n      p.and((model) => predicates.map((predicate) => predicate(model)));\n  }\n\n  if (Array.isArray(groupOr)) {\n    const predicates = groupOr.map((condition) =>\n      createDataStorePredicate<Model>(condition)\n    );\n\n    return (p: RecursiveModelPredicate<Model>) =>\n      p.or((model) => predicates.map((predicate) => predicate(model)));\n  }\n\n  return (p: RecursiveModelPredicate<Model>) => {\n    if (\n      !!field &&\n      !!operator &&\n      p?.[field]?.[operator]\n    ) {\n      return (p[field][operator] as Function)(\n        operand\n      ) as RecursiveModelPredicate<Model>;\n    }\n\n    return p;\n  };\n};";
