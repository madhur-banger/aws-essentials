export declare const useNavigateActionString = "export const useNavigateAction = (options: UseNavigateActionOptions) => {\n  const { type, url, anchor, target } = options;\n  const run = React.useMemo(() => {\n    switch (type) {\n      case 'url':\n        return () => {\n          window.open(url, target || '_self', 'noopener noreferrer');\n        };\n      case 'anchor':\n        return () => {\n          window.location.hash = anchor ?? '';\n        };\n      case 'reload':\n        return () => {\n          window.location.reload();\n        };\n      default:\n        return () => {\n          // eslint-disable-next-line no-console\n          console.warn('Please provide a valid navigate type. Available types are \"url\", \"anchor\" and \"reload\".');\n        };\n    }\n  }, [anchor, target, type, url]);\n\n  const navigateAction = () => {\n    Hub.dispatch(\n      UI_CHANNEL,\n      {\n        event: ACTION_NAVIGATE_STARTED,\n        data: options,\n      },\n      EVENT_ACTION_CORE_NAVIGATE,\n      AMPLIFY_SYMBOL,\n    );\n    run();\n    Hub.dispatch(\n      UI_CHANNEL,\n      {\n        event: ACTION_NAVIGATE_FINISHED,\n        data: options,\n      },\n      EVENT_ACTION_CORE_NAVIGATE,\n      AMPLIFY_SYMBOL,\n    );\n  };\n\n  return navigateAction;\n};";
