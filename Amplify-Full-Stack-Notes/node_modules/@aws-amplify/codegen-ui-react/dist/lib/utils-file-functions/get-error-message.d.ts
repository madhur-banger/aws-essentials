declare type ErrorWithMessage = {
    message: string;
};
export declare const isErrorWithMessage: (error: unknown) => error is ErrorWithMessage;
export declare const toErrorWithMessage: (maybeError: unknown) => ErrorWithMessage;
export declare const getErrorMessage: (error: unknown) => string;
export declare const getErrorMessageString = "export const isErrorWithMessage = (error: unknown): error is ErrorWithMessage => {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'message' in error &&\n    typeof (error as Record<string, unknown>).message === 'string'\n  );\n};\nexport const toErrorWithMessage = (maybeError: unknown): ErrorWithMessage => {\n  if (isErrorWithMessage(maybeError)) return maybeError;\n  try {\n    return new Error(JSON.stringify(maybeError));\n  } catch {\n    return new Error(String(maybeError));\n  }\n};\nexport const getErrorMessage = (error: unknown): string => {\n  return toErrorWithMessage(error).message;\n};";
export {};
