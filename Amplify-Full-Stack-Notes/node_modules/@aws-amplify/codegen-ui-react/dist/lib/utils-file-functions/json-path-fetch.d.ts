/**
 * does not support array types within objects as it's currently not supported
 *
 * ref: https://stackoverflow.com/questions/45942118/lodash-return-array-of-values-if-the-path-is-valid
 *
 * @param input object input
 * @param path dot notation path for the provided input
 * @param accumlator array
 * @returns returns value at the end of object
 */
export declare const fetchByPath: <T extends Record<string, any>>(input: T, path: string, accumlator?: any[]) => any;
export declare const fetchByPathString = "export const fetchByPath = \n<T extends Record<string, any>>(input: T, path: string, accumlator: any[] = []) => {\n  const currentPath = path.split('.');\n  const head = currentPath.shift();\n  if (input && head && input[head] !== undefined) {\n    if (!currentPath.length) {\n      accumlator.push(input[head]);\n    } else {\n      fetchByPath(input[head], currentPath.join('.'), accumlator);\n    }\n  }\n  return accumlator[0];\n};";
