import { EscapeHatchProps } from './override-types';
/**
 * This helper method is used to merge
 * variants with overrides
 * @internal
 * @param variants
 * @param overrides
 * @returns merged variants with overrides
 */
export declare const mergeVariantsAndOverrides: (variants: EscapeHatchProps, overrides: EscapeHatchProps) => EscapeHatchProps;
export declare const mergeVariantsAndOverridesString = "export const mergeVariantsAndOverrides = (\n  variants: EscapeHatchProps,\n  overrides: EscapeHatchProps\n): EscapeHatchProps => {\n  if (!variants && !overrides) {\n    return null;\n  }\n  if (!overrides) {\n    return variants;\n  }\n  if (!variants) {\n    return overrides;\n  }\n  const overrideKeys = new Set(Object.keys(overrides));\n  const sharedKeys = Object.keys(variants).filter((variantKey) =>\n    overrideKeys.has(variantKey)\n  );\n  const merged = Object.fromEntries(\n    sharedKeys.map((sharedKey) => [\n      sharedKey,\n      { ...variants[sharedKey], ...overrides[sharedKey] },\n    ])\n  );\n  return {\n    ...variants,\n    ...overrides,\n    ...merged,\n  };\n};";
