import { EscapeHatchProps } from './override-types';
/**
 * This method is used to parse through all of the overrides and
 * only pass the relevant child overrides for a given component.
 * @internal
 * @param overrides escape hatch props
 * @param elementHierarchy
 * @returns overrides only for specified element
 */
export declare const findChildOverrides: (overrides: EscapeHatchProps | null | undefined, elementHierarchy: string) => EscapeHatchProps | null;
export declare const findChildOverridesString = "export const findChildOverrides = (\n  overrides: EscapeHatchProps | null | undefined,\n  elementHierarchy: string\n): EscapeHatchProps | null => {\n  if (!overrides) {\n    return null;\n  }\n\n  const filteredOverrides = Object.entries(overrides).filter((m) =>\n    m[0].startsWith(elementHierarchy)\n  );\n\n  return Object.assign(\n    {},\n    ...Array.from(filteredOverrides, ([k, v]) => ({\n      [k.replace(elementHierarchy, '')]: v,\n    }))\n  ) as EscapeHatchProps;\n};";
