"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAmplifyJSAPIImport = exports.getAmplifyJSVersionToRender = exports.getLatestAmplifyJSV6RenderingEnabled = exports.isAmplifyJSV6RenderingEnabled = void 0;
/*
  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 */
const gte_1 = __importDefault(require("semver/functions/gte"));
const valid_1 = __importDefault(require("semver/functions/valid"));
const coerce_1 = __importDefault(require("semver/functions/coerce"));
const constants_1 = require("../utils/constants");
const imports_1 = require("../imports");
function isAmplifyJSV6RenderingEnabled() {
    return true;
}
exports.isAmplifyJSV6RenderingEnabled = isAmplifyJSV6RenderingEnabled;
function getLatestAmplifyJSV6RenderingEnabled(isAmplifyJSV6Enabled = isAmplifyJSV6RenderingEnabled()) {
    if (isAmplifyJSV6Enabled) {
        return constants_1.AMPLIFY_JS_V6;
    }
    return constants_1.AMPLIFY_JS_V5;
}
exports.getLatestAmplifyJSV6RenderingEnabled = getLatestAmplifyJSV6RenderingEnabled;
function getAmplifyJSVersionToRender(dependencies = {}, { isAmplifyJSV6Enabled } = {
    isAmplifyJSV6Enabled: isAmplifyJSV6RenderingEnabled(),
}) {
    const awsAmplifyVersion = dependencies['aws-amplify'];
    // semver will error on a 'latest' value so do this first
    if (awsAmplifyVersion === 'latest') {
        return getLatestAmplifyJSV6RenderingEnabled(isAmplifyJSV6Enabled);
    }
    // Allows to use tagged releases
    // e.g. semver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7'
    const sanitizedVersion = (0, valid_1.default)((0, coerce_1.default)(awsAmplifyVersion));
    if (sanitizedVersion) {
        // check if >= 6
        if ((0, gte_1.default)(sanitizedVersion, constants_1.AMPLIFY_JS_V6)) {
            return constants_1.AMPLIFY_JS_V6;
        }
    }
    // If there isn't a version for aws-amplify in the project
    // then this is an older version of the project not running latest
    // cli, so default to 5
    // If there is a version and it's 5 return 5
    // If the version is 6 but v6 isn't enabled yet, return 5
    return constants_1.AMPLIFY_JS_V5;
}
exports.getAmplifyJSVersionToRender = getAmplifyJSVersionToRender;
function getAmplifyJSAPIImport(renderConfigDependencies = {}) {
    if (getAmplifyJSVersionToRender(renderConfigDependencies) === constants_1.AMPLIFY_JS_V6) {
        return imports_1.ImportValue.GENERATE_CLIENT;
    }
    return imports_1.ImportValue.API;
}
exports.getAmplifyJSAPIImport = getAmplifyJSAPIImport;
//# sourceMappingURL=amplify-js-versioning.js.map