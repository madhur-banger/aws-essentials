"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateFormatUtil = void 0;
/*
  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 */
const typescript_1 = __importStar(require("typescript"));
const generateFormatUtil = () => [
    typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
        typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('monthToShortMon'), undefined, typescript_1.factory.createTypeLiteralNode([
            typescript_1.factory.createIndexSignature(undefined, undefined, [
                typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('mon'), undefined, typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), undefined),
            ], typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword)),
        ]), typescript_1.factory.createObjectLiteralExpression([
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('1'), typescript_1.factory.createStringLiteral('Jan')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('2'), typescript_1.factory.createStringLiteral('Feb')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('3'), typescript_1.factory.createStringLiteral('Mar')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('4'), typescript_1.factory.createStringLiteral('Apr')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('5'), typescript_1.factory.createStringLiteral('May')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('6'), typescript_1.factory.createStringLiteral('Jun')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('7'), typescript_1.factory.createStringLiteral('Jul')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('8'), typescript_1.factory.createStringLiteral('Aug')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('9'), typescript_1.factory.createStringLiteral('Sep')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('10'), typescript_1.factory.createStringLiteral('Oct')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('11'), typescript_1.factory.createStringLiteral('Nov')),
            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createStringLiteral('12'), typescript_1.factory.createStringLiteral('Dec')),
        ], true)),
    ], typescript_1.default.NodeFlags.Const)),
    typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
        typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('invalidDateStr'), undefined, undefined, typescript_1.factory.createStringLiteral('Invalid Date')),
    ], typescript_1.default.NodeFlags.Const)),
    typescript_1.factory.createTypeAliasDeclaration(undefined, undefined, typescript_1.factory.createIdentifier('DateFormatType'), undefined, typescript_1.factory.createTypeLiteralNode([
        typescript_1.factory.createPropertySignature(undefined, typescript_1.factory.createIdentifier('type'), undefined, typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('DateFormat'))),
        typescript_1.factory.createPropertySignature(undefined, typescript_1.factory.createIdentifier('format'), undefined, typescript_1.factory.createIndexedAccessTypeNode(typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('DateFormat'), undefined), typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('dateFormat')))),
    ])),
    typescript_1.factory.createTypeAliasDeclaration(undefined, undefined, typescript_1.factory.createIdentifier('DateTimeFormatType'), undefined, typescript_1.factory.createTypeLiteralNode([
        typescript_1.factory.createPropertySignature(undefined, typescript_1.factory.createIdentifier('type'), undefined, typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('DateTimeFormat'))),
        typescript_1.factory.createPropertySignature(undefined, typescript_1.factory.createIdentifier('format'), undefined, typescript_1.factory.createIndexedAccessTypeNode(typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('DateTimeFormat'), undefined), typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('dateTimeFormat')))),
    ])),
    typescript_1.factory.createTypeAliasDeclaration(undefined, undefined, typescript_1.factory.createIdentifier('TimeFormatType'), undefined, typescript_1.factory.createTypeLiteralNode([
        typescript_1.factory.createPropertySignature(undefined, typescript_1.factory.createIdentifier('type'), undefined, typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('TimeFormat'))),
        typescript_1.factory.createPropertySignature(undefined, typescript_1.factory.createIdentifier('format'), undefined, typescript_1.factory.createIndexedAccessTypeNode(typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('TimeFormat'), undefined), typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('timeFormat')))),
    ])),
    typescript_1.factory.createTypeAliasDeclaration(undefined, undefined, typescript_1.factory.createIdentifier('FormatInputType'), undefined, typescript_1.factory.createUnionTypeNode([
        typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('DateFormatType'), undefined),
        typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('DateTimeFormatType'), undefined),
        typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('TimeFormatType'), undefined),
    ])),
    typescript_1.factory.createFunctionDeclaration(undefined, [typescript_1.factory.createModifier(typescript_1.default.SyntaxKind.ExportKeyword)], undefined, typescript_1.factory.createIdentifier('formatDate'), undefined, [
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('date'), undefined, typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), undefined),
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('dateFormat'), undefined, typescript_1.factory.createIndexedAccessTypeNode(typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('DateFormat'), undefined), typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('dateFormat'))), undefined),
    ], typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), typescript_1.factory.createBlock([
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('date'), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createIdentifier('undefined')), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.BarBarToken), typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('date'), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createNull())), typescript_1.factory.createBlock([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('date'))], true), undefined),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('validDate'), undefined, undefined, typescript_1.factory.createNewExpression(typescript_1.factory.createIdentifier('Date'), undefined, [
                typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('Date'), typescript_1.factory.createIdentifier('parse')), undefined, [typescript_1.factory.createIdentifier('date')]),
            ])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validDate'), typescript_1.factory.createIdentifier('toString')), undefined, []), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createIdentifier('invalidDateStr')), typescript_1.factory.createBlock([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('date'))], true), undefined),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('splitDate'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('date'), typescript_1.factory.createIdentifier('split')), undefined, [typescript_1.factory.createRegularExpressionLiteral(`/-|\\+|Z/`)])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('year'), undefined, undefined, typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitDate'), typescript_1.factory.createNumericLiteral('0'))),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('month'), undefined, undefined, typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitDate'), typescript_1.factory.createNumericLiteral('1'))),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('day'), undefined, undefined, typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitDate'), typescript_1.factory.createNumericLiteral('2'))),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('truncatedMonth'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('month'), typescript_1.factory.createIdentifier('replace')), undefined, [typescript_1.factory.createRegularExpressionLiteral('/^0+/'), typescript_1.factory.createStringLiteral('')])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createSwitchStatement(typescript_1.factory.createIdentifier('dateFormat'), typescript_1.factory.createCaseBlock([
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('locale'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validDate'), typescript_1.factory.createIdentifier('toLocaleDateString')), undefined, [])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('YYYY.MM.DD'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createTemplateExpression(typescript_1.factory.createTemplateHead('', ''), [
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('year'), typescript_1.factory.createTemplateMiddle('.', '.')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('month'), typescript_1.factory.createTemplateMiddle('.', '.')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('day'), typescript_1.factory.createTemplateTail('', '')),
                ])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('DD.MM.YYYY'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createTemplateExpression(typescript_1.factory.createTemplateHead('', ''), [
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('day'), typescript_1.factory.createTemplateMiddle('.', '.')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('month'), typescript_1.factory.createTemplateMiddle('.', '.')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('year'), typescript_1.factory.createTemplateTail('', '')),
                ])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('MM/DD/YYYY'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createTemplateExpression(typescript_1.factory.createTemplateHead('', ''), [
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('month'), typescript_1.factory.createTemplateMiddle('/', '/')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('day'), typescript_1.factory.createTemplateMiddle('/', '/')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('year'), typescript_1.factory.createTemplateTail('', '')),
                ])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('Mmm DD, YYYY'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createTemplateExpression(typescript_1.factory.createTemplateHead('', ''), [
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('monthToShortMon'), typescript_1.factory.createIdentifier('truncatedMonth')), typescript_1.factory.createTemplateMiddle(' ', ' ')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('day'), typescript_1.factory.createTemplateMiddle(', ', ', ')),
                    typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('year'), typescript_1.factory.createTemplateTail('', '')),
                ])),
            ]),
            typescript_1.factory.createDefaultClause([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('date'))]),
        ])),
    ], true)),
    typescript_1.factory.createFunctionDeclaration(undefined, [typescript_1.factory.createModifier(typescript_1.default.SyntaxKind.ExportKeyword)], undefined, typescript_1.factory.createIdentifier('formatTime'), undefined, [
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('time'), undefined, typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), undefined),
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('timeFormat'), undefined, typescript_1.factory.createIndexedAccessTypeNode(typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('TimeFormat'), undefined), typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('timeFormat'))), undefined),
    ], typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), typescript_1.factory.createBlock([
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('time'), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createIdentifier('undefined')), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.BarBarToken), typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('time'), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createNull())), typescript_1.factory.createBlock([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('time'))], true), undefined),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('splitTime'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('time'), typescript_1.factory.createIdentifier('split')), undefined, [typescript_1.factory.createRegularExpressionLiteral('/:|Z/')])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('splitTime'), typescript_1.factory.createIdentifier('length')), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.LessThanToken), typescript_1.factory.createNumericLiteral('3')), typescript_1.factory.createBlock([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('time'))], true), undefined),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('validTime'), undefined, undefined, typescript_1.factory.createNewExpression(typescript_1.factory.createIdentifier('Date'), undefined, [])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validTime'), typescript_1.factory.createIdentifier('setHours')), undefined, [
            typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('Number'), typescript_1.factory.createIdentifier('parseInt')), undefined, [
                typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitTime'), typescript_1.factory.createNumericLiteral('0')),
                typescript_1.factory.createNumericLiteral('10'),
            ]),
        ])),
        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validTime'), typescript_1.factory.createIdentifier('setMinutes')), undefined, [
            typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('Number'), typescript_1.factory.createIdentifier('parseInt')), undefined, [
                typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitTime'), typescript_1.factory.createNumericLiteral('1')),
                typescript_1.factory.createNumericLiteral('10'),
            ]),
        ])),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('splitSeconds'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitTime'), typescript_1.factory.createNumericLiteral('2')), typescript_1.factory.createIdentifier('split')), undefined, [typescript_1.factory.createStringLiteral('.')])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validTime'), typescript_1.factory.createIdentifier('setSeconds')), undefined, [
            typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('Number'), typescript_1.factory.createIdentifier('parseInt')), undefined, [
                typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitSeconds'), typescript_1.factory.createNumericLiteral('0')),
                typescript_1.factory.createNumericLiteral('10'),
            ]),
            typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('Number'), typescript_1.factory.createIdentifier('parseInt')), undefined, [
                typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('splitSeconds'), typescript_1.factory.createNumericLiteral('1')),
                typescript_1.factory.createNumericLiteral('10'),
            ]),
        ])),
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validTime'), typescript_1.factory.createIdentifier('toString')), undefined, []), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createIdentifier('invalidDateStr')), typescript_1.factory.createBlock([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('time'))], true), undefined),
        typescript_1.factory.createSwitchStatement(typescript_1.factory.createIdentifier('timeFormat'), typescript_1.factory.createCaseBlock([
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('locale'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validTime'), typescript_1.factory.createIdentifier('toLocaleTimeString')), undefined, [])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('hours24'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validTime'), typescript_1.factory.createIdentifier('toLocaleTimeString')), undefined, [typescript_1.factory.createStringLiteral('en-gb')])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('hours12'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('validTime'), typescript_1.factory.createIdentifier('toLocaleTimeString')), undefined, [typescript_1.factory.createStringLiteral('en-us')])),
            ]),
            typescript_1.factory.createDefaultClause([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('time'))]),
        ])),
    ], true)),
    typescript_1.factory.createFunctionDeclaration(undefined, [typescript_1.factory.createModifier(typescript_1.default.SyntaxKind.ExportKeyword)], undefined, typescript_1.factory.createIdentifier('formatDateTime'), undefined, [
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('dateTimeStr'), undefined, typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), undefined),
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('dateTimeFormat'), undefined, typescript_1.factory.createIndexedAccessTypeNode(typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('DateTimeFormat'), undefined), typescript_1.factory.createLiteralTypeNode(typescript_1.factory.createStringLiteral('dateTimeFormat'))), undefined),
    ], typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), typescript_1.factory.createBlock([
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('dateTimeStr'), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createIdentifier('undefined')), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.BarBarToken), typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('dateTimeStr'), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createNull())), typescript_1.factory.createBlock([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('dateTimeStr'))], true), undefined),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('dateTime'), undefined, undefined, typescript_1.factory.createConditionalExpression(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createRegularExpressionLiteral('/^d+$/'), typescript_1.factory.createIdentifier('test')), undefined, [typescript_1.factory.createIdentifier('dateTimeStr')]), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.QuestionToken), typescript_1.factory.createNewExpression(typescript_1.factory.createIdentifier('Date'), undefined, [
                typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('Number'), typescript_1.factory.createIdentifier('parseInt')), undefined, [typescript_1.factory.createIdentifier('dateTimeStr'), typescript_1.factory.createNumericLiteral('10')]),
            ]), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.ColonToken), typescript_1.factory.createNewExpression(typescript_1.factory.createIdentifier('Date'), undefined, [
                typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('Date'), typescript_1.factory.createIdentifier('parse')), undefined, [typescript_1.factory.createIdentifier('dateTimeStr')]),
            ]))),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('dateTime'), typescript_1.factory.createIdentifier('toString')), undefined, []), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createIdentifier('invalidDateStr')), typescript_1.factory.createBlock([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('dateTimeStr'))], true), undefined),
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('dateTimeFormat'), typescript_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createStringLiteral('locale')), typescript_1.factory.createBlock([
            typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('dateTime'), typescript_1.factory.createIdentifier('toLocaleString')), undefined, [])),
        ], true), undefined),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('dateAndTime'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('dateTime'), typescript_1.factory.createIdentifier('toISOString')), undefined, []), typescript_1.factory.createIdentifier('split')), undefined, [typescript_1.factory.createStringLiteral('T')])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('date'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('formatDate'), undefined, [
                typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('dateAndTime'), typescript_1.factory.createNumericLiteral('0')),
                typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('dateTimeFormat'), typescript_1.factory.createIdentifier('dateFormat')),
            ])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('time'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('formatTime'), undefined, [
                typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('dateAndTime'), typescript_1.factory.createNumericLiteral('1')),
                typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('dateTimeFormat'), typescript_1.factory.createIdentifier('timeFormat')),
            ])),
        ], typescript_1.default.NodeFlags.Const)),
        typescript_1.factory.createReturnStatement(typescript_1.factory.createTemplateExpression(typescript_1.factory.createTemplateHead('', ''), [
            typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('date'), typescript_1.factory.createTemplateMiddle(' - ', ' - ')),
            typescript_1.factory.createTemplateSpan(typescript_1.factory.createIdentifier('time'), typescript_1.factory.createTemplateTail('', '')),
        ])),
    ], true)),
    typescript_1.factory.createFunctionDeclaration(undefined, [typescript_1.factory.createModifier(typescript_1.default.SyntaxKind.ExportKeyword)], undefined, typescript_1.factory.createIdentifier('formatter'), undefined, [
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('value'), undefined, typescript_1.factory.createKeywordTypeNode(typescript_1.default.SyntaxKind.StringKeyword), undefined),
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('formatterInput'), undefined, typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('FormatInputType'), undefined), undefined),
    ], undefined, typescript_1.factory.createBlock([
        typescript_1.factory.createSwitchStatement(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('formatterInput'), typescript_1.factory.createIdentifier('type')), typescript_1.factory.createCaseBlock([
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('DateFormat'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('formatDate'), undefined, [
                    typescript_1.factory.createIdentifier('value'),
                    typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('formatterInput'), typescript_1.factory.createIdentifier('format')),
                ])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('DateTimeFormat'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('formatDateTime'), undefined, [
                    typescript_1.factory.createIdentifier('value'),
                    typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('formatterInput'), typescript_1.factory.createIdentifier('format')),
                ])),
            ]),
            typescript_1.factory.createCaseClause(typescript_1.factory.createStringLiteral('TimeFormat'), [
                typescript_1.factory.createReturnStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('formatTime'), undefined, [
                    typescript_1.factory.createIdentifier('value'),
                    typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('formatterInput'), typescript_1.factory.createIdentifier('format')),
                ])),
            ]),
            typescript_1.factory.createDefaultClause([typescript_1.factory.createReturnStatement(typescript_1.factory.createIdentifier('value'))]),
        ])),
    ], true)),
];
exports.generateFormatUtil = generateFormatUtil;
//# sourceMappingURL=string-formatter.js.map