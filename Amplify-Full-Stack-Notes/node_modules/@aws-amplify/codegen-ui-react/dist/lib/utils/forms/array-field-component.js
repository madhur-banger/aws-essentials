"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateArrayFieldComponent = void 0;
/*
  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 */
const typescript_1 = require("typescript");
const generate_react_hooks_1 = require("../generate-react-hooks");
const generateArrayFieldComponent = () => {
    const errorMessagePropName = 'errorMessage';
    const errorStylesVariableName = 'errorStyles';
    const iconPath = 'M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z';
    const labelElementIdentifier = 'labelElement';
    const arraySection = 'arraySection';
    const bodyBlock = [
        // const labelElement = <Text>{label}</Text>
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier(labelElementIdentifier), undefined, undefined, typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('Text'), undefined, typescript_1.factory.createJsxAttributes([])), [typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier('label'))], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('Text')))),
        ], typescript_1.NodeFlags.Const)),
        /**
          const {
            tokens: {
              components: {
                fieldmessages: { error: errorStyles },
              },
            },
          } = useTheme();
         */
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createObjectBindingPattern([
                typescript_1.factory.createBindingElement(undefined, typescript_1.factory.createIdentifier('tokens'), typescript_1.factory.createObjectBindingPattern([
                    typescript_1.factory.createBindingElement(undefined, typescript_1.factory.createIdentifier('components'), typescript_1.factory.createObjectBindingPattern([
                        typescript_1.factory.createBindingElement(undefined, typescript_1.factory.createIdentifier('fieldmessages'), typescript_1.factory.createObjectBindingPattern([
                            typescript_1.factory.createBindingElement(undefined, typescript_1.factory.createIdentifier('error'), typescript_1.factory.createIdentifier(errorStylesVariableName), undefined),
                        ]), undefined),
                    ]), undefined),
                ]), undefined),
            ]), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('useTheme'), undefined, [])),
        ], typescript_1.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createArrayBindingPattern([
                typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('selectedBadgeIndex'), undefined),
                typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('setSelectedBadgeIndex'), undefined),
            ]), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('useState')), undefined, [])),
        ], typescript_1.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createArrayBindingPattern([
                typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('isEditing'), undefined),
                typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('setIsEditing'), undefined),
            ]), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('useState')), undefined, [])),
        ], typescript_1.NodeFlags.Const)),
        (0, generate_react_hooks_1.addUseEffectWrapper)([
            typescript_1.factory.createIfStatement(typescript_1.factory.createIdentifier('isEditing'), typescript_1.factory.createBlock([
                typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallChain(typescript_1.factory.createPropertyAccessChain(typescript_1.factory.createPropertyAccessChain(typescript_1.factory.createIdentifier('inputFieldRef'), typescript_1.factory.createToken(typescript_1.SyntaxKind.QuestionDotToken), typescript_1.factory.createIdentifier('current')), typescript_1.factory.createToken(typescript_1.SyntaxKind.QuestionDotToken), typescript_1.factory.createIdentifier('focus')), undefined, undefined, [])),
            ], true), undefined),
        ], ['isEditing']),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('removeItem'), undefined, undefined, typescript_1.factory.createArrowFunction([typescript_1.factory.createModifier(typescript_1.SyntaxKind.AsyncKeyword)], undefined, [
                typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('removeIndex'), undefined, undefined),
            ], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBlock([
                typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
                    typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('newItems'), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('items'), typescript_1.factory.createIdentifier('filter')), undefined, [
                        typescript_1.factory.createArrowFunction(undefined, undefined, [
                            typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('value'), undefined, undefined),
                            typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('index'), undefined, undefined),
                        ], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('index'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.factory.createIdentifier('removeIndex'))),
                    ])),
                ], typescript_1.NodeFlags.Const)),
                typescript_1.factory.createExpressionStatement(typescript_1.factory.createAwaitExpression(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('onChange'), undefined, [
                    typescript_1.factory.createIdentifier('newItems'),
                ]))),
                typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setSelectedBadgeIndex'), undefined, [
                    typescript_1.factory.createIdentifier('undefined'),
                ])),
            ], true))),
        ], typescript_1.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('addItem'), undefined, undefined, typescript_1.factory.createArrowFunction([typescript_1.factory.createModifier(typescript_1.SyntaxKind.AsyncKeyword)], undefined, [], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBlock([
                typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
                    typescript_1.factory.createVariableDeclaration(typescript_1.factory.createObjectBindingPattern([
                        typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('hasError'), undefined),
                    ]), undefined, undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('runValidationTasks'), undefined, [])),
                ], typescript_1.NodeFlags.Const)),
                typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('currentFieldValue'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.factory.createIdentifier('undefined')), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('currentFieldValue'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.factory.createNull())), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('currentFieldValue'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.factory.createStringLiteral(''))), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createPrefixUnaryExpression(typescript_1.SyntaxKind.ExclamationToken, typescript_1.factory.createIdentifier('hasError'))), typescript_1.factory.createBlock([
                    typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
                        typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier('newItems'), undefined, undefined, typescript_1.factory.createArrayLiteralExpression([typescript_1.factory.createSpreadElement(typescript_1.factory.createIdentifier('items'))], false)),
                    ], typescript_1.NodeFlags.Const)),
                    typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('selectedBadgeIndex'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.factory.createIdentifier('undefined')), typescript_1.factory.createBlock([
                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('newItems'), typescript_1.factory.createIdentifier('selectedBadgeIndex')), typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsToken), typescript_1.factory.createIdentifier('currentFieldValue'))),
                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setSelectedBadgeIndex'), undefined, [typescript_1.factory.createIdentifier('undefined')])),
                    ], true), typescript_1.factory.createBlock([
                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('newItems'), typescript_1.factory.createIdentifier('push')), undefined, [typescript_1.factory.createIdentifier('currentFieldValue')])),
                    ], true)),
                    typescript_1.factory.createExpressionStatement(typescript_1.factory.createAwaitExpression(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('onChange'), undefined, [
                        typescript_1.factory.createIdentifier('newItems'),
                    ]))),
                    typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setIsEditing'), undefined, [
                        typescript_1.factory.createFalse(),
                    ])),
                ], true), undefined),
            ], true))),
        ], typescript_1.NodeFlags.Const)),
        typescript_1.factory.createVariableStatement(undefined, typescript_1.factory.createVariableDeclarationList([
            typescript_1.factory.createVariableDeclaration(typescript_1.factory.createIdentifier(arraySection), undefined, undefined, typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('Fragment')), undefined, typescript_1.factory.createJsxAttributes([])), [
                typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createBinaryExpression(typescript_1.factory.createPrefixUnaryExpression(typescript_1.SyntaxKind.ExclamationToken, typescript_1.factory.createPrefixUnaryExpression(typescript_1.SyntaxKind.ExclamationToken, typescript_1.factory.createPropertyAccessChain(typescript_1.factory.createIdentifier('items'), typescript_1.factory.createToken(typescript_1.SyntaxKind.QuestionDotToken), typescript_1.factory.createIdentifier('length')))), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('ScrollView'), undefined, typescript_1.factory.createJsxAttributes([
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('height'), typescript_1.factory.createStringLiteral('inherit')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('width'), typescript_1.factory.createStringLiteral('inherit')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('maxHeight'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createStringLiteral('7rem'))),
                ])), [
                    typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('items'), typescript_1.factory.createIdentifier('map')), undefined, [
                        typescript_1.factory.createArrowFunction(undefined, undefined, [
                            typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('value'), undefined, undefined),
                            typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('index'), undefined, undefined),
                        ], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBlock([
                            typescript_1.factory.createReturnStatement(typescript_1.factory.createParenthesizedExpression(typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('Badge'), undefined, typescript_1.factory.createJsxAttributes([
                                typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('key'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier('index'))),
                                typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('style'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createObjectLiteralExpression([
                                    typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('cursor'), typescript_1.factory.createStringLiteral('pointer')),
                                    typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('alignItems'), typescript_1.factory.createStringLiteral('center')),
                                    typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('marginRight'), typescript_1.factory.createNumericLiteral('3')),
                                    typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('marginTop'), typescript_1.factory.createNumericLiteral('3')),
                                    typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('backgroundColor'), typescript_1.factory.createConditionalExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('index'), typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.factory.createIdentifier('selectedBadgeIndex')), typescript_1.factory.createToken(typescript_1.SyntaxKind.QuestionToken), typescript_1.factory.createStringLiteral('#B8CEF9'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ColonToken), typescript_1.factory.createStringLiteral(''))),
                                ], true))),
                                typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('onClick'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createArrowFunction(undefined, undefined, [], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBlock([
                                    typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setSelectedBadgeIndex'), undefined, [typescript_1.factory.createIdentifier('index')])),
                                    typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setFieldValue'), undefined, [
                                        typescript_1.factory.createElementAccessExpression(typescript_1.factory.createIdentifier('items'), typescript_1.factory.createIdentifier('index')),
                                    ])),
                                    typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setIsEditing'), undefined, [typescript_1.factory.createTrue()])),
                                ], true)))),
                            ])), [
                                // { getBadgeText ? getBadgeText(value) : value.toString() }
                                typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createConditionalExpression(typescript_1.factory.createIdentifier('getBadgeText'), typescript_1.factory.createToken(typescript_1.SyntaxKind.QuestionToken), typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('getBadgeText'), undefined, [typescript_1.factory.createIdentifier('value')]), typescript_1.factory.createToken(typescript_1.SyntaxKind.ColonToken), typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('value'), typescript_1.factory.createIdentifier('toString')), undefined, []))),
                                typescript_1.factory.createJsxSelfClosingElement(typescript_1.factory.createIdentifier('Icon'), undefined, typescript_1.factory.createJsxAttributes([
                                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('style'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createObjectLiteralExpression([
                                        typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('cursor'), typescript_1.factory.createStringLiteral('pointer')),
                                        typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('paddingLeft'), typescript_1.factory.createNumericLiteral('3')),
                                        typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('width'), typescript_1.factory.createNumericLiteral('20')),
                                        typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('height'), typescript_1.factory.createNumericLiteral('20')),
                                    ], true))),
                                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('viewBox'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createObjectLiteralExpression([
                                        typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('width'), typescript_1.factory.createNumericLiteral('20')),
                                        typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('height'), typescript_1.factory.createNumericLiteral('20')),
                                    ], false))),
                                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('paths'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createArrayLiteralExpression([
                                        typescript_1.factory.createObjectLiteralExpression([
                                            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('d'), typescript_1.factory.createStringLiteral(iconPath)),
                                            typescript_1.factory.createPropertyAssignment(typescript_1.factory.createIdentifier('stroke'), typescript_1.factory.createStringLiteral('black')),
                                        ], true),
                                    ], true))),
                                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('ariaLabel'), typescript_1.factory.createStringLiteral('button')),
                                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('onClick'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createArrowFunction(undefined, undefined, [
                                        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('event'), undefined, undefined),
                                    ], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBlock([
                                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('event'), typescript_1.factory.createIdentifier('stopPropagation')), undefined, [])),
                                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('removeItem'), undefined, [typescript_1.factory.createIdentifier('index')])),
                                    ], true)))),
                                ])),
                            ], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('Badge'))))),
                        ], true)),
                    ])),
                ], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('ScrollView'))))),
                typescript_1.factory.createJsxSelfClosingElement(typescript_1.factory.createIdentifier('Divider'), undefined, typescript_1.factory.createJsxAttributes([
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('orientation'), typescript_1.factory.createStringLiteral('horizontal')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('marginTop'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createNumericLiteral('5'))),
                ])),
            ], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('Fragment'))))),
        ], typescript_1.NodeFlags.Const)),
        /**
            if (lengthLimit !== undefined && items.length >= lengthLimit && !isEditing) {
             return <>{labelElement}{arraySection}</>;
            }
         */
        typescript_1.factory.createIfStatement(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('lengthLimit'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.factory.createIdentifier('undefined')), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createBinaryExpression(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('items'), typescript_1.factory.createIdentifier('length')), typescript_1.factory.createToken(typescript_1.SyntaxKind.GreaterThanEqualsToken), typescript_1.factory.createIdentifier('lengthLimit'))), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createPrefixUnaryExpression(typescript_1.SyntaxKind.ExclamationToken, typescript_1.factory.createIdentifier('isEditing'))), typescript_1.factory.createBlock([
            typescript_1.factory.createReturnStatement(typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('Fragment')), undefined, typescript_1.factory.createJsxAttributes([])), [
                typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier(labelElementIdentifier)),
                typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier(arraySection)),
            ], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('Fragment'))))),
        ], true), undefined),
        typescript_1.factory.createReturnStatement(typescript_1.factory.createParenthesizedExpression(typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('Fragment')), undefined, typescript_1.factory.createJsxAttributes([])), [
            // {labelElement}
            typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier(labelElementIdentifier)),
            typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('isEditing'), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createIdentifier('children'))),
            typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createConditionalExpression(typescript_1.factory.createPrefixUnaryExpression(typescript_1.SyntaxKind.ExclamationToken, typescript_1.factory.createIdentifier('isEditing')), typescript_1.factory.createToken(typescript_1.SyntaxKind.QuestionToken), typescript_1.factory.createParenthesizedExpression(typescript_1.factory.createJsxFragment(typescript_1.factory.createJsxOpeningFragment(), [
                typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('Button'), undefined, typescript_1.factory.createJsxAttributes([
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('onClick'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createArrowFunction(undefined, undefined, [], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBlock([
                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setIsEditing'), undefined, [typescript_1.factory.createTrue()])),
                    ], true)))),
                ])), [typescript_1.factory.createJsxText('Add item', false)], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('Button'))),
                /**
                  {errorMessage && hasError && (
                    <Text color={errorStyles.color} fontSize={errorStyles.fontSize}>
                      {errorMessage}
                    </Text>
                  )}
                */
                typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createBinaryExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier(errorMessagePropName), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createIdentifier('hasError')), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createParenthesizedExpression(typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('Text'), undefined, typescript_1.factory.createJsxAttributes([
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('color'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier(errorStylesVariableName), typescript_1.factory.createIdentifier('color')))),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('fontSize'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier(errorStylesVariableName), typescript_1.factory.createIdentifier('fontSize')))),
                ])), [typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier(errorMessagePropName))], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('Text')))))),
            ], typescript_1.factory.createJsxJsxClosingFragment())), typescript_1.factory.createToken(typescript_1.SyntaxKind.ColonToken), typescript_1.factory.createParenthesizedExpression(typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('Flex'), undefined, typescript_1.factory.createJsxAttributes([
                typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('justifyContent'), typescript_1.factory.createStringLiteral('flex-end')),
            ])), [
                typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createBinaryExpression(typescript_1.factory.createParenthesizedExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('currentFieldValue'), typescript_1.factory.createToken(typescript_1.SyntaxKind.BarBarToken), typescript_1.factory.createIdentifier('isEditing'))), typescript_1.factory.createToken(typescript_1.SyntaxKind.AmpersandAmpersandToken), typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('Button'), undefined, typescript_1.factory.createJsxAttributes([
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('children'), typescript_1.factory.createStringLiteral('Cancel')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('type'), typescript_1.factory.createStringLiteral('button')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('size'), typescript_1.factory.createStringLiteral('small')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('onClick'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createArrowFunction(undefined, undefined, [], undefined, typescript_1.factory.createToken(typescript_1.SyntaxKind.EqualsGreaterThanToken), typescript_1.factory.createBlock([
                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setFieldValue'), undefined, [typescript_1.factory.createIdentifier('defaultFieldValue')])),
                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setIsEditing'), undefined, [typescript_1.factory.createFalse()])),
                        typescript_1.factory.createExpressionStatement(typescript_1.factory.createCallExpression(typescript_1.factory.createIdentifier('setSelectedBadgeIndex'), undefined, [typescript_1.factory.createIdentifier('undefined')])),
                    ], true)))),
                ])), [], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('Button'))))),
                typescript_1.factory.createJsxElement(typescript_1.factory.createJsxOpeningElement(typescript_1.factory.createIdentifier('Button'), undefined, typescript_1.factory.createJsxAttributes([
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('size'), typescript_1.factory.createStringLiteral('small')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('variation'), typescript_1.factory.createStringLiteral('link')),
                    typescript_1.factory.createJsxAttribute(typescript_1.factory.createIdentifier('onClick'), typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier('addItem'))),
                ])), [
                    typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createConditionalExpression(typescript_1.factory.createBinaryExpression(typescript_1.factory.createIdentifier('selectedBadgeIndex'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.factory.createIdentifier('undefined')), typescript_1.factory.createToken(typescript_1.SyntaxKind.QuestionToken), typescript_1.factory.createStringLiteral('Save'), typescript_1.factory.createToken(typescript_1.SyntaxKind.ColonToken), typescript_1.factory.createStringLiteral('Add'))),
                ], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('Button'))),
            ], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createIdentifier('Flex')))))),
            // {arraySection}
            typescript_1.factory.createJsxExpression(undefined, typescript_1.factory.createIdentifier(arraySection)),
        ], typescript_1.factory.createJsxClosingElement(typescript_1.factory.createPropertyAccessExpression(typescript_1.factory.createIdentifier('React'), typescript_1.factory.createIdentifier('Fragment')))))),
    ];
    return typescript_1.factory.createFunctionDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('ArrayField'), undefined, [
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createObjectBindingPattern([
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('items'), typescript_1.factory.createArrayLiteralExpression([], false)),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('onChange'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('label'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('inputFieldRef'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('children'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('hasError'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('setFieldValue'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('currentFieldValue'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('defaultFieldValue'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('lengthLimit'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('getBadgeText'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier('runValidationTasks'), undefined),
            typescript_1.factory.createBindingElement(undefined, undefined, typescript_1.factory.createIdentifier(errorMessagePropName), undefined),
        ]), undefined, undefined, undefined),
    ], undefined, typescript_1.factory.createBlock(bodyBlock, true));
};
exports.generateArrayFieldComponent = generateArrayFieldComponent;
//# sourceMappingURL=array-field-component.js.map