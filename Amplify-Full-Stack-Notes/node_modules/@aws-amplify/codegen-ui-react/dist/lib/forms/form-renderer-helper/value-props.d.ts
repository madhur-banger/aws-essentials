import { FieldConfigMetadata, StudioDataSourceType, StudioFormActionType } from '@aws-amplify/codegen-ui';
import { Identifier, JsxAttribute } from 'typescript';
export declare const ControlledComponents: string[];
/**
 * given the component returns true if the component is a controlled component
 *
 * @param componentType
 * @returns
 */
export declare const isControlledComponent: (componentType: string) => boolean;
export declare const getConvertedValueAttribute: (dataType: string, studioFormComponentType: string) => ((valueIdentifier: Identifier) => import("typescript").BinaryExpression) | undefined;
/**
 *
 * @param stateName name of the state name to render for the default value
 * @param { dataType } the dataType
 * @returns
 */
export declare const renderDefaultValueAttribute: (stateName: string, { dataType, studioFormComponentType }: FieldConfigMetadata, componentType: string) => JsxAttribute;
export declare const renderValueAttribute: ({ fieldConfig, componentName, currentValueIdentifier, }: {
    fieldConfig: FieldConfigMetadata;
    componentName: string;
    currentValueIdentifier?: Identifier | undefined;
}) => JsxAttribute | undefined;
/**
 * returns resetFunctionCheck Expression if a create form is datastore enabled
 *
 * @param studioForm {StudioForm}
 * @returns
 */
export declare const resetFunctionCheck: ({ dataSourceType, formActionType, }: {
    dataSourceType: StudioDataSourceType;
    formActionType: StudioFormActionType;
}) => import("typescript").IfStatement[];
