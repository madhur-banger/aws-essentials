import { ColumnInfo, StudioView, TableDefinition, ViewMetadata } from '@aws-amplify/codegen-ui';
import { Identifier, JsxAttributes, JsxChild, JsxElement, JsxExpression, JsxOpeningElement, ObjectLiteralExpression } from 'typescript';
import { ImportCollection } from './imports';
export declare class ReactTableRenderer {
    private requiredUIReactImports;
    protected viewDefinition: TableDefinition;
    protected viewComponent: StudioView;
    protected viewMetadata: ViewMetadata;
    constructor(view: StudioView, definition: TableDefinition, metadata: ViewMetadata, imports: ImportCollection);
    createOpeningTableElement(): JsxOpeningElement;
    createTableRow(children: JsxChild[], attributes: JsxAttributes): JsxElement;
    createTableHeadRow(): JsxChild;
    createTableHeadElement(): JsxElement;
    createTableHeadElementBlock(): JsxExpression;
    createRowOnClickCBAttr(): JsxAttributes;
    generateFormatLiteralExpression(field: string): ObjectLiteralExpression | Identifier;
    createFieldAccessExpression(identifier: string, field: string): import("typescript").PropertyAccessChain;
    createFormatArg(field: string): ObjectLiteralExpression | undefined;
    createFormatCallOrPropAccess(field: string): import("typescript").CallExpression | import("typescript").PropertyAccessChain;
    createTableBodyCellFromColumn(column: ColumnInfo): JsxElement;
    createTableBodyRow(): JsxElement;
    createTableBodyElement(): JsxChild;
    renderElement(): JsxElement;
}
