/**
 * Formats various inputs into single string.
 */
export declare class Format {
    private readonly packageManagerRunnerName;
    /**
     * Initialize with a package manager runner name. Defaults to attempting to load a value derived from environment variables.
     */
    constructor(packageManagerRunnerName?: string);
    normalizeAmpxCommand: (command: string) => string;
    error: (error: string | Error | unknown) => string;
    note: (message: string) => string;
    command: (command: string) => string;
    highlight: (command: string) => string;
    success: (message: string) => string;
    sectionHeader: (header: string) => string;
    bold: (message: string) => string;
    dim: (message: string) => string;
    link: (link: string) => string;
    list: (lines: string[]) => string;
    indent: (message: string) => string;
    record: (record: Record<string, string | number | Date>) => string;
    color: (message: string, colorName: ColorName) => string;
}
export declare const colorNames: readonly ["Green", "Yellow", "Blue", "Magenta", "Cyan"];
export type ColorName = (typeof colorNames)[number];
export declare const format: Format;
//# sourceMappingURL=format.d.ts.map