import { LogLevel } from '../printer/printer.js';
import { execa as _execa } from 'execa';
import { printer } from '../printer.js';
/**
 * Abstracts the execution of a command and pipes outputs/errors to `Printer.debug`
 */
export const executeWithDebugLogger = (cwd, executable, args, execa = _execa, options) => {
    try {
        const childProcess = execa(executable, args, {
            stdin: 'inherit',
            cwd,
            ...options,
        });
        childProcess?.stdout?.on('data', (data) => printer.log(data, LogLevel.DEBUG));
        childProcess?.stderr?.on('data', (data) => printer.log(data, LogLevel.DEBUG));
        return childProcess;
    }
    catch {
        throw new Error(`\`${executable}${args ? ' ' + args.join(' ') : ''}\` did not exit successfully. Rerun with --debug for more information.`);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhlY3V0ZV93aXRoX2RlYnVnZ2VyX2xvZ2dlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYWNrYWdlLW1hbmFnZXItY29udHJvbGxlci9leGVjdXRlX3dpdGhfZGVidWdnZXJfbG9nZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRCxPQUFPLEVBQWdCLEtBQUssSUFBSSxNQUFNLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLENBQ3BDLEdBQVcsRUFDWCxVQUFrQixFQUNsQixJQUF5QixFQUN6QixLQUFLLEdBQUcsTUFBTSxFQUNkLE9BQXlCLEVBQ3pCLEVBQUU7SUFDRixJQUFJO1FBQ0YsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUU7WUFDM0MsS0FBSyxFQUFFLFNBQVM7WUFDaEIsR0FBRztZQUNILEdBQUcsT0FBTztTQUNYLENBQUMsQ0FBQztRQUVILFlBQVksRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQVksRUFBRSxFQUFFLENBQ2hELE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FDbEMsQ0FBQztRQUNGLFlBQVksRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQVksRUFBRSxFQUFFLENBQ2hELE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FDbEMsQ0FBQztRQUVGLE9BQU8sWUFBWSxDQUFDO0tBQ3JCO0lBQUMsTUFBTTtRQUNOLE1BQU0sSUFBSSxLQUFLLENBQ2IsS0FBSyxVQUFVLEdBQ2IsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDaEMsd0VBQXdFLENBQ3pFLENBQUM7S0FDSDtBQUNILENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvZ0xldmVsIH0gZnJvbSAnLi4vcHJpbnRlci9wcmludGVyLmpzJztcbmltcG9ydCB7IHR5cGUgT3B0aW9ucywgZXhlY2EgYXMgX2V4ZWNhIH0gZnJvbSAnZXhlY2EnO1xuaW1wb3J0IHsgcHJpbnRlciB9IGZyb20gJy4uL3ByaW50ZXIuanMnO1xuXG4vKipcbiAqIEFic3RyYWN0cyB0aGUgZXhlY3V0aW9uIG9mIGEgY29tbWFuZCBhbmQgcGlwZXMgb3V0cHV0cy9lcnJvcnMgdG8gYFByaW50ZXIuZGVidWdgXG4gKi9cbmV4cG9ydCBjb25zdCBleGVjdXRlV2l0aERlYnVnTG9nZ2VyID0gKFxuICBjd2Q6IHN0cmluZyxcbiAgZXhlY3V0YWJsZTogc3RyaW5nLFxuICBhcmdzPzogUmVhZG9ubHk8c3RyaW5nW10+LFxuICBleGVjYSA9IF9leGVjYSxcbiAgb3B0aW9ucz86IE9wdGlvbnM8J3V0ZjgnPlxuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgY2hpbGRQcm9jZXNzID0gZXhlY2EoZXhlY3V0YWJsZSwgYXJncywge1xuICAgICAgc3RkaW46ICdpbmhlcml0JyxcbiAgICAgIGN3ZCxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgfSk7XG5cbiAgICBjaGlsZFByb2Nlc3M/LnN0ZG91dD8ub24oJ2RhdGEnLCAoZGF0YTogc3RyaW5nKSA9PlxuICAgICAgcHJpbnRlci5sb2coZGF0YSwgTG9nTGV2ZWwuREVCVUcpXG4gICAgKTtcbiAgICBjaGlsZFByb2Nlc3M/LnN0ZGVycj8ub24oJ2RhdGEnLCAoZGF0YTogc3RyaW5nKSA9PlxuICAgICAgcHJpbnRlci5sb2coZGF0YSwgTG9nTGV2ZWwuREVCVUcpXG4gICAgKTtcblxuICAgIHJldHVybiBjaGlsZFByb2Nlc3M7XG4gIH0gY2F0Y2gge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBcXGAke2V4ZWN1dGFibGV9JHtcbiAgICAgICAgYXJncyA/ICcgJyArIGFyZ3Muam9pbignICcpIDogJydcbiAgICAgIH1cXGAgZGlkIG5vdCBleGl0IHN1Y2Nlc3NmdWxseS4gUmVydW4gd2l0aCAtLWRlYnVnIGZvciBtb3JlIGluZm9ybWF0aW9uLmBcbiAgICApO1xuICB9XG59O1xuIl19