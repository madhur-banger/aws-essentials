import { existsSync as _existsSync } from 'fs';
import _fsp from 'fs/promises';
import { execa as _execa } from 'execa';
import * as _path from 'path';
import { executeWithDebugLogger as _executeWithDebugLogger } from './execute_with_debugger_logger.js';
import { PackageManagerControllerBase } from './package_manager_controller_base.js';
/**
 * NpmPackageManagerController is an abstraction around npm commands that are needed to initialize a project and install dependencies
 */
export class NpmPackageManagerController extends PackageManagerControllerBase {
    cwd;
    fsp;
    path;
    execa;
    executeWithDebugLogger;
    existsSync;
    /**
     * constructor
     */
    constructor(cwd, fsp = _fsp, path = _path, execa = _execa, executeWithDebugLogger = _executeWithDebugLogger, existsSync = _existsSync) {
        super(cwd, 'npm', ['init', '--yes'], 'install', fsp, path, execa, executeWithDebugLogger, existsSync);
        this.cwd = cwd;
        this.fsp = fsp;
        this.path = path;
        this.execa = execa;
        this.executeWithDebugLogger = executeWithDebugLogger;
        this.existsSync = existsSync;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnBtX3BhY2thZ2VfbWFuYWdlcl9jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BhY2thZ2UtbWFuYWdlci1jb250cm9sbGVyL25wbV9wYWNrYWdlX21hbmFnZXJfY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxJQUFJLFdBQVcsRUFBRSxNQUFNLElBQUksQ0FBQztBQUMvQyxPQUFPLElBQUksTUFBTSxhQUFhLENBQUM7QUFDL0IsT0FBTyxFQUFFLEtBQUssSUFBSSxNQUFNLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDeEMsT0FBTyxLQUFLLEtBQUssTUFBTSxNQUFNLENBQUM7QUFDOUIsT0FBTyxFQUFFLHNCQUFzQixJQUFJLHVCQUF1QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdEcsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFcEY7O0dBRUc7QUFDSCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsNEJBQTRCO0lBS3REO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQVRyQjs7T0FFRztJQUNILFlBQ3FCLEdBQVcsRUFDWCxNQUFNLElBQUksRUFDVixPQUFPLEtBQUssRUFDWixRQUFRLE1BQU0sRUFDZCx5QkFBeUIsdUJBQXVCLEVBQ2hELGFBQWEsV0FBVztRQUUzQyxLQUFLLENBQ0gsR0FBRyxFQUNILEtBQUssRUFDTCxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsRUFDakIsU0FBUyxFQUNULEdBQUcsRUFDSCxJQUFJLEVBQ0osS0FBSyxFQUNMLHNCQUFzQixFQUN0QixVQUFVLENBQ1gsQ0FBQztRQWpCaUIsUUFBRyxHQUFILEdBQUcsQ0FBUTtRQUNYLFFBQUcsR0FBSCxHQUFHLENBQU87UUFDVixTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osVUFBSyxHQUFMLEtBQUssQ0FBUztRQUNkLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBMEI7UUFDaEQsZUFBVSxHQUFWLFVBQVUsQ0FBYztJQWE3QyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleGlzdHNTeW5jIGFzIF9leGlzdHNTeW5jIH0gZnJvbSAnZnMnO1xuaW1wb3J0IF9mc3AgZnJvbSAnZnMvcHJvbWlzZXMnO1xuaW1wb3J0IHsgZXhlY2EgYXMgX2V4ZWNhIH0gZnJvbSAnZXhlY2EnO1xuaW1wb3J0ICogYXMgX3BhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBleGVjdXRlV2l0aERlYnVnTG9nZ2VyIGFzIF9leGVjdXRlV2l0aERlYnVnTG9nZ2VyIH0gZnJvbSAnLi9leGVjdXRlX3dpdGhfZGVidWdnZXJfbG9nZ2VyLmpzJztcbmltcG9ydCB7IFBhY2thZ2VNYW5hZ2VyQ29udHJvbGxlckJhc2UgfSBmcm9tICcuL3BhY2thZ2VfbWFuYWdlcl9jb250cm9sbGVyX2Jhc2UuanMnO1xuXG4vKipcbiAqIE5wbVBhY2thZ2VNYW5hZ2VyQ29udHJvbGxlciBpcyBhbiBhYnN0cmFjdGlvbiBhcm91bmQgbnBtIGNvbW1hbmRzIHRoYXQgYXJlIG5lZWRlZCB0byBpbml0aWFsaXplIGEgcHJvamVjdCBhbmQgaW5zdGFsbCBkZXBlbmRlbmNpZXNcbiAqL1xuZXhwb3J0IGNsYXNzIE5wbVBhY2thZ2VNYW5hZ2VyQ29udHJvbGxlciBleHRlbmRzIFBhY2thZ2VNYW5hZ2VyQ29udHJvbGxlckJhc2Uge1xuICAvKipcbiAgICogY29uc3RydWN0b3JcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCByZWFkb25seSBjd2Q6IHN0cmluZyxcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZnNwID0gX2ZzcCxcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgcGF0aCA9IF9wYXRoLFxuICAgIHByb3RlY3RlZCByZWFkb25seSBleGVjYSA9IF9leGVjYSxcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZXhlY3V0ZVdpdGhEZWJ1Z0xvZ2dlciA9IF9leGVjdXRlV2l0aERlYnVnTG9nZ2VyLFxuICAgIHByb3RlY3RlZCByZWFkb25seSBleGlzdHNTeW5jID0gX2V4aXN0c1N5bmNcbiAgKSB7XG4gICAgc3VwZXIoXG4gICAgICBjd2QsXG4gICAgICAnbnBtJyxcbiAgICAgIFsnaW5pdCcsICctLXllcyddLFxuICAgICAgJ2luc3RhbGwnLFxuICAgICAgZnNwLFxuICAgICAgcGF0aCxcbiAgICAgIGV4ZWNhLFxuICAgICAgZXhlY3V0ZVdpdGhEZWJ1Z0xvZ2dlcixcbiAgICAgIGV4aXN0c1N5bmNcbiAgICApO1xuICB9XG59XG4iXX0=