import { ConstructFactoryGetInstanceProps, SsmEnvironmentEntry } from '@aws-amplify/plugin-types';
import { AuthAccessDefinition } from './types.js';
import { UserPoolAccessPolicyFactory } from './userpool_access_policy_factory.js';
/**
 * Middleman between creating bucket policies and attaching those policies to corresponding roles
 */
export declare class AuthAccessPolicyArbiter {
    private readonly accessDefinition;
    private readonly getInstanceProps;
    private readonly ssmEnvironmentEntries;
    private readonly userPoolAccessPolicyFactory;
    /**
     * Instantiate with context from the auth factory
     */
    constructor(accessDefinition: AuthAccessDefinition[], getInstanceProps: ConstructFactoryGetInstanceProps, ssmEnvironmentEntries: SsmEnvironmentEntry[], userPoolAccessPolicyFactory: UserPoolAccessPolicyFactory);
    /**
     * Responsible for creating policies corresponding to the definition,
     * then invoking the corresponding ResourceAccessAcceptor to accept the policies
     */
    arbitratePolicies: () => void;
    acceptResourceAccess: (accessDefinition: AuthAccessDefinition) => void;
}
/**
 *
 */
export declare class AuthAccessPolicyArbiterFactory {
    getInstance: (accessDefinition: AuthAccessDefinition[], getInstanceProps: ConstructFactoryGetInstanceProps, ssmEnvironmentEntries: SsmEnvironmentEntry[], userpoolAccessPolicyFactory: UserPoolAccessPolicyFactory) => AuthAccessPolicyArbiter;
}
//# sourceMappingURL=auth_access_policy_arbiter.d.ts.map