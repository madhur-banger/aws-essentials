import { IUserPool } from 'aws-cdk-lib/aws-cognito';
import { IRole } from 'aws-cdk-lib/aws-iam';
import { AuthorizationModes as CDKAuthorizationModes } from '@aws-amplify/data-construct';
import { AuthorizationModes } from './types.js';
import { AuthResources, ConstructFactoryGetInstanceProps, ResourceProvider } from '@aws-amplify/plugin-types';
export type ProvidedAuthConfig = {
    userPool: IUserPool;
    authenticatedUserRole: IRole;
    unauthenticatedUserRole: IRole;
    identityPoolId: string;
};
/**
 * Function instance provider which uses the
 */
export declare const buildConstructFactoryProvidedAuthConfig: (authResourceProvider: ResourceProvider<AuthResources> | undefined) => ProvidedAuthConfig | undefined;
/**
 * Convert to CDK AuthorizationModes.
 */
export declare const convertAuthorizationModesToCDK: (getInstanceProps: ConstructFactoryGetInstanceProps, authResources: ProvidedAuthConfig | undefined, authModes: AuthorizationModes | undefined) => CDKAuthorizationModes;
/**
 * Return whether or not the api will use default API_KEY auth due to absence of auth resources and input auth-modes.
 * @param authResources the generated auth resources in the system
 * @param authModes the provided auth modes
 * @returns a boolean indicating whether or not default api key auth will be used.
 */
export declare const isUsingDefaultApiKeyAuth: (authResources: ProvidedAuthConfig | undefined, authModes: AuthorizationModes | undefined) => boolean;
//# sourceMappingURL=convert_authorization_modes.d.ts.map