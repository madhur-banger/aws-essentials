import * as path from 'path';
import { format } from '@aws-amplify/cli-core';
import { AmplifyUserError } from '@aws-amplify/platform-core';
import { EOL } from 'os';
const expectedCommandName = 'ampx';
/**
 * Verify that the command name is `ampx`.
 * In the next MV, we should remove the "amplify" bin entry entirely and then this validation will no longer be needed
 */
export const verifyCommandName = () => {
    const commandName = path.parse(process.argv[1]).name;
    if (commandName === expectedCommandName) {
        return;
    }
    let command = process.argv.slice(2).join(' ');
    if (command.length === 0) {
        command = '<command>';
    }
    throw new AmplifyUserError('InvalidCommandError', {
        message: `The Amplify Gen 2 CLI has been renamed to ${format.command(expectedCommandName)}`,
        resolution: `Rerun using the ${format.command(expectedCommandName)} command name:${EOL}${EOL}${format.normalizeAmpxCommand(command)}${EOL}`,
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyaWZ5X2NvbW1hbmRfbmFtZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy92ZXJpZnlfY29tbWFuZF9uYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBQzdCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sSUFBSSxDQUFDO0FBRXpCLE1BQU0sbUJBQW1CLEdBQUcsTUFBTSxDQUFDO0FBRW5DOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsRUFBRTtJQUNwQyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDckQsSUFBSSxXQUFXLEtBQUssbUJBQW1CLEVBQUU7UUFDdkMsT0FBTztLQUNSO0lBQ0QsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlDLElBQUksT0FBTyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDeEIsT0FBTyxHQUFHLFdBQVcsQ0FBQztLQUN2QjtJQUNELE1BQU0sSUFBSSxnQkFBZ0IsQ0FBQyxxQkFBcUIsRUFBRTtRQUNoRCxPQUFPLEVBQUUsNkNBQTZDLE1BQU0sQ0FBQyxPQUFPLENBQ2xFLG1CQUFtQixDQUNwQixFQUFFO1FBQ0gsVUFBVSxFQUFFLG1CQUFtQixNQUFNLENBQUMsT0FBTyxDQUMzQyxtQkFBbUIsQ0FDcEIsaUJBQWlCLEdBQUcsR0FBRyxHQUFHLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsRUFBRTtLQUMzRSxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2NsaS1jb3JlJztcbmltcG9ydCB7IEFtcGxpZnlVc2VyRXJyb3IgfSBmcm9tICdAYXdzLWFtcGxpZnkvcGxhdGZvcm0tY29yZSc7XG5pbXBvcnQgeyBFT0wgfSBmcm9tICdvcyc7XG5cbmNvbnN0IGV4cGVjdGVkQ29tbWFuZE5hbWUgPSAnYW1weCc7XG5cbi8qKlxuICogVmVyaWZ5IHRoYXQgdGhlIGNvbW1hbmQgbmFtZSBpcyBgYW1weGAuXG4gKiBJbiB0aGUgbmV4dCBNViwgd2Ugc2hvdWxkIHJlbW92ZSB0aGUgXCJhbXBsaWZ5XCIgYmluIGVudHJ5IGVudGlyZWx5IGFuZCB0aGVuIHRoaXMgdmFsaWRhdGlvbiB3aWxsIG5vIGxvbmdlciBiZSBuZWVkZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHZlcmlmeUNvbW1hbmROYW1lID0gKCkgPT4ge1xuICBjb25zdCBjb21tYW5kTmFtZSA9IHBhdGgucGFyc2UocHJvY2Vzcy5hcmd2WzFdKS5uYW1lO1xuICBpZiAoY29tbWFuZE5hbWUgPT09IGV4cGVjdGVkQ29tbWFuZE5hbWUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgbGV0IGNvbW1hbmQgPSBwcm9jZXNzLmFyZ3Yuc2xpY2UoMikuam9pbignICcpO1xuICBpZiAoY29tbWFuZC5sZW5ndGggPT09IDApIHtcbiAgICBjb21tYW5kID0gJzxjb21tYW5kPic7XG4gIH1cbiAgdGhyb3cgbmV3IEFtcGxpZnlVc2VyRXJyb3IoJ0ludmFsaWRDb21tYW5kRXJyb3InLCB7XG4gICAgbWVzc2FnZTogYFRoZSBBbXBsaWZ5IEdlbiAyIENMSSBoYXMgYmVlbiByZW5hbWVkIHRvICR7Zm9ybWF0LmNvbW1hbmQoXG4gICAgICBleHBlY3RlZENvbW1hbmROYW1lXG4gICAgKX1gLFxuICAgIHJlc29sdXRpb246IGBSZXJ1biB1c2luZyB0aGUgJHtmb3JtYXQuY29tbWFuZChcbiAgICAgIGV4cGVjdGVkQ29tbWFuZE5hbWVcbiAgICApfSBjb21tYW5kIG5hbWU6JHtFT0x9JHtFT0x9JHtmb3JtYXQubm9ybWFsaXplQW1weENvbW1hbmQoY29tbWFuZCl9JHtFT0x9YCxcbiAgfSk7XG59O1xuIl19