import { DeployedBackendIdentifier } from '@aws-amplify/deployed-backend-client';
import { NamespaceResolver } from './local_namespace_resolver.js';
import { BackendIdentifier } from '@aws-amplify/plugin-types';
export type BackendIdentifierParameters = {
    stack?: string;
    appId?: string;
    branch?: string;
};
export type BackendIdentifierResolver = {
    resolveDeployedBackendIdentifier: (args: BackendIdentifierParameters) => Promise<DeployedBackendIdentifier | undefined>;
    resolveBackendIdentifier: (args: BackendIdentifierParameters) => Promise<BackendIdentifier | undefined>;
};
/**
 * Translates args to BackendIdentifier.
 * Throws if translation can't be made (this should never happen if command validation works correctly).
 */
export declare class AppBackendIdentifierResolver implements BackendIdentifierResolver {
    private readonly namespaceResolver;
    /**
     * Instantiates BackendIdentifierResolver
     */
    constructor(namespaceResolver: NamespaceResolver);
    resolveDeployedBackendIdentifier: (args: BackendIdentifierParameters) => Promise<DeployedBackendIdentifier | undefined>;
    resolveBackendIdentifier: (args: BackendIdentifierParameters) => Promise<BackendIdentifier | undefined>;
}
//# sourceMappingURL=backend_identifier_resolver.d.ts.map