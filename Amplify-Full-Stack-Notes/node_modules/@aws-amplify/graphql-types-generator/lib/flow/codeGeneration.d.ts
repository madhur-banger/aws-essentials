export function generateSource(context: any): string;
export function typeDeclarationForGraphQLType(generator: any, type: any): void;
export function interfaceVariablesDeclarationForOperation(generator: any, { operationName, operationType, variables, fields, fragmentsReferenced, source }: {
    operationName: any;
    operationType: any;
    variables: any;
    fields: any;
    fragmentsReferenced: any;
    source: any;
}): null | undefined;
export function typeDeclarationForOperation(generator: any, { operationName, operationType, variables, fields, fragmentSpreads, fragmentsReferenced, source }: {
    operationName: any;
    operationType: any;
    variables: any;
    fields: any;
    fragmentSpreads: any;
    fragmentsReferenced: any;
    source: any;
}): void;
export function typeDeclarationForFragment(generator: any, fragment: any): void;
export function propertiesFromFields(context: any, fields: any): any;
export function propertyFromField(context: any, field: any): {
    typeName: any;
    fields: any;
    isComposite: boolean;
    fragmentSpreads: any;
    inlineFragments: any;
    fieldType: any;
    isArray: boolean;
    isNullable: boolean;
    isArrayElementNullable: boolean | null;
    fieldName: any;
    propertyName: any;
    description: any;
} | {
    typeName: any;
    isComposite: boolean;
    fieldType: any;
    isNullable: boolean;
    fieldName: any;
    propertyName: any;
    description: any;
};
export function propertyDeclarations(generator: any, properties: any, isOptional: any): void;
