import { TransformerContextProvider, TransformerPrepareStepContextProvider, TransformerTransformSchemaStepContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { DataSourceBasedDirectiveTransformer } from '../data-source-based-directive-transformer';
import { HasOneDirectiveConfiguration } from '../types';
export declare class HasOneDirectiveSQLTransformer implements DataSourceBasedDirectiveTransformer<HasOneDirectiveConfiguration> {
    dbType: import("@aws-amplify/graphql-transformer-interfaces").ModelDataSourceStrategySqlDbType;
    prepare: (context: TransformerPrepareStepContextProvider, config: HasOneDirectiveConfiguration) => void;
    transformSchema: (context: TransformerTransformSchemaStepContextProvider, config: HasOneDirectiveConfiguration) => void;
    generateResolvers: (context: TransformerContextProvider, config: HasOneDirectiveConfiguration) => void;
    validate: (context: TransformerContextProvider, config: HasOneDirectiveConfiguration) => void;
}
//# sourceMappingURL=has-one-directive-sql-transformer.d.ts.map