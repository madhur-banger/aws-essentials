import { TransformerContextProvider, TransformerPrepareStepContextProvider, ModelDataSourceStrategyDbType, TransformerTransformSchemaStepContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { BelongsToDirectiveConfiguration, HasManyDirectiveConfiguration, HasOneDirectiveConfiguration } from './types';
export type RelationalDirectiveConfiguration = HasOneDirectiveConfiguration | HasManyDirectiveConfiguration | BelongsToDirectiveConfiguration;
export interface DataSourceBasedDirectiveTransformer<Config extends RelationalDirectiveConfiguration> {
    dbType: ModelDataSourceStrategyDbType;
    prepare: (context: TransformerPrepareStepContextProvider, config: Config) => void;
    transformSchema: (context: TransformerTransformSchemaStepContextProvider, config: Config) => void;
    generateResolvers: (context: TransformerContextProvider, config: Config) => void;
    validate: (context: TransformerContextProvider, config: Config) => void;
}
//# sourceMappingURL=data-source-based-directive-transformer.d.ts.map