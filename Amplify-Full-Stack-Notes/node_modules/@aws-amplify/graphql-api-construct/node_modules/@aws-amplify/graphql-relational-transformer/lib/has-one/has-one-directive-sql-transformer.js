"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HasOneDirectiveSQLTransformer = void 0;
const graphql_transformer_core_1 = require("@aws-amplify/graphql-transformer-core");
const resolvers_1 = require("../resolvers");
const utils_1 = require("../utils");
const generator_factory_1 = require("../resolver/generator-factory");
class HasOneDirectiveSQLTransformer {
    constructor() {
        this.dbType = graphql_transformer_core_1.POSTGRES_DB_TYPE || graphql_transformer_core_1.MYSQL_DB_TYPE;
        this.prepare = (context, config) => {
            var _a, _b;
            const modelName = config.object.name.value;
            (0, resolvers_1.setFieldMappingResolverReference)(context, (_b = (_a = config.relatedType) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.value, modelName, config.field.name.value, true);
        };
        this.transformSchema = (context, config) => {
            (0, utils_1.validateParentReferencesFields)(config, context);
        };
        this.generateResolvers = (context, config) => {
            const generator = (0, generator_factory_1.getGenerator)(this.dbType);
            generator.makeHasOneGetItemConnectionWithKeyResolver(config, context);
        };
        this.validate = (context, config) => {
            (0, utils_1.ensureReferencesArray)(config);
            config.referenceNodes = (0, utils_1.getReferencesNodes)(config, context);
            (0, utils_1.validateReferencesRelationalFieldNullability)(config);
            (0, utils_1.validateReferencesBidirectionality)(config);
        };
    }
}
exports.HasOneDirectiveSQLTransformer = HasOneDirectiveSQLTransformer;
//# sourceMappingURL=has-one-directive-sql-transformer.js.map