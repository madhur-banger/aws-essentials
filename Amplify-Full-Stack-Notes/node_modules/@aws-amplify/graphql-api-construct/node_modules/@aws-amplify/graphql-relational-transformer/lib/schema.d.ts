import { TransformerContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { FieldDefinitionNode, ObjectTypeDefinitionNode, ObjectTypeExtensionNode } from 'graphql';
import { WritableDraft } from 'immer/dist/types/types-external';
import { BelongsToDirectiveConfiguration, HasManyDirectiveConfiguration, HasOneDirectiveConfiguration, ManyToManyDirectiveConfiguration, ObjectDefinition } from './types';
export declare const extendTypeWithConnection: (config: HasManyDirectiveConfiguration, ctx: TransformerContextProvider) => void;
export declare const ensureHasOneConnectionField: (config: HasOneDirectiveConfiguration | BelongsToDirectiveConfiguration, ctx: TransformerContextProvider) => void;
export declare const ensureBelongsToConnectionField: (config: BelongsToDirectiveConfiguration, ctx: TransformerContextProvider) => void;
export declare const ensureHasManyConnectionField: (config: HasManyDirectiveConfiguration | ManyToManyDirectiveConfiguration, ctx: TransformerContextProvider) => void;
export declare const getPartitionKeyField: (ctx: TransformerContextProvider, object: ObjectTypeDefinitionNode) => FieldDefinitionNode;
export declare const getPartitionKeyFieldNoContext: (object: ObjectTypeDefinitionNode | ObjectTypeExtensionNode) => FieldDefinitionNode;
export declare const getSortKeyFields: (ctx: TransformerContextProvider, object: ObjectTypeDefinitionNode) => FieldDefinitionNode[];
export declare const getSortKeyFieldsNoContext: (object: ObjectTypeDefinitionNode | ObjectTypeExtensionNode) => FieldDefinitionNode[];
export declare const addFieldsToDefinition: (object: WritableDraft<ObjectDefinition>, fields: FieldDefinitionNode[]) => void;
export declare const convertSortKeyFieldsToSortKeyConnectionFields: (sortKeyFields: FieldDefinitionNode[], object: ObjectDefinition, connectingField: FieldDefinitionNode) => FieldDefinitionNode[];
//# sourceMappingURL=schema.d.ts.map