import { TransformerContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { Expression } from 'graphql-mapping-template';
import { BelongsToDirectiveConfiguration, HasManyDirectiveConfiguration, HasOneDirectiveConfiguration } from '../types';
import { RelationalResolverGenerator } from './generator';
export declare class RDSRelationalResolverGenerator extends RelationalResolverGenerator {
    makeHasManyGetItemsConnectionWithKeyResolver: (config: HasManyDirectiveConfiguration, ctx: TransformerContextProvider) => void;
    generateHasManyLambdaRequestTemplate: (tableName: string, operation: string, operationName: string, joinCondition: Expression[], ctx: TransformerContextProvider) => string;
    generateHasOneLambdaRequestTemplate: (tableName: string, operation: string, operationName: string, joinCondition: Expression[], relatedTypePrimaryKeys: string[], ctx: TransformerContextProvider) => string;
    generateSingleItemConnectionLambdaResponseMappingTemplate: () => string;
    generateListConnectionLambdaResponseMappingTemplate: () => string;
    makeHasOneGetItemConnectionWithKeyResolver: (config: HasOneDirectiveConfiguration | BelongsToDirectiveConfiguration, ctx: TransformerContextProvider) => void;
    makeBelongsToGetItemConnectionWithKeyResolver: (config: BelongsToDirectiveConfiguration, ctx: TransformerContextProvider) => void;
    constructFieldMappingInput: () => Expression;
    constructRelationalFieldAuthFilterStatement: (keyName: string) => Expression;
}
//# sourceMappingURL=rds-generator.d.ts.map