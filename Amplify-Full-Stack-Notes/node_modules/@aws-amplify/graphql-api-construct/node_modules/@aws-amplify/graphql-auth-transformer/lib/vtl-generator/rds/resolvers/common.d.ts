import { Expression } from 'graphql-mapping-template';
import { FieldDefinitionNode } from 'graphql';
import { RoleDefinition } from '../../../utils';
export declare const generateDefaultRDSExpression: (iamAccessEnabled: boolean) => string;
export declare const generateAuthRulesFromRoles: (roles: Array<RoleDefinition>, fields: Readonly<FieldDefinitionNode[]>, hasIdentityPoolId: boolean, hideAllowedFields?: boolean) => Expression[];
export declare const validateAuthResult: () => Expression;
export declare const constructAuthFilter: () => Expression;
export declare const constructAuthorizedInputStatement: (keyName: string) => Expression;
export declare const generatePostAuthExpressionForField: (sandboxEnabled: boolean, genericIamAccessEnabled: boolean) => string;
export declare const emptyPayload: import("graphql-mapping-template").ToJsonNode;
export declare const setDeniedFieldFlag: (operation: string, subscriptionsEnabled: boolean) => string;
export declare const generateFieldResolverForOwner: (entity: string) => string;
export declare const generateIAMAccessCheck: (enableIamAccess: boolean, expression: Expression) => Expression;
//# sourceMappingURL=common.d.ts.map