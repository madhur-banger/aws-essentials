import { TransformerPluginBase } from '@aws-amplify/graphql-transformer-core';
import { TransformerContextProvider, TransformerSchemaVisitStepContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { DirectiveNode, ObjectTypeDefinitionNode, InterfaceTypeDefinitionNode, FieldDefinitionNode } from 'graphql';
export declare class SqlTransformer extends TransformerPluginBase {
    private sqlDirectiveFields;
    constructor();
    field: (parent: ObjectTypeDefinitionNode | InterfaceTypeDefinitionNode, definition: FieldDefinitionNode, directive: DirectiveNode, ctx: TransformerSchemaVisitStepContextProvider) => void;
    generateResolvers: (context: TransformerContextProvider) => void;
}
export declare const generateSqlLambdaRequestTemplate: (statement: string, operation: string, operationName: string) => string;
export declare const generateSqlLambdaResponseMappingTemplate: () => string;
//# sourceMappingURL=graphql-sql-transformer.d.ts.map