import { TransformerResolverProvider, FieldMapEntry, ReadonlyArray } from '@aws-amplify/graphql-transformer-interfaces';
import { LambdaDataSource } from 'aws-cdk-lib/aws-appsync';
type AttachInputMappingSlotParams = {
    resolver: TransformerResolverProvider;
    resolverTypeName: string;
    resolverFieldName: string;
    fieldMap: ReadonlyArray<FieldMapEntry>;
};
export declare const attachInputMappingSlot: ({ resolver, resolverTypeName, resolverFieldName, fieldMap }: AttachInputMappingSlotParams) => void;
export declare const attachFieldMappingSlot: ({ resolver, resolverTypeName, resolverFieldName, fieldMap }: AttachInputMappingSlotParams) => void;
type AttachResponseMappingSlotParams = {
    slotName: 'postDataLoad' | 'postUpdate';
    resolver: TransformerResolverProvider;
    resolverFieldName: string;
    resolverTypeName: string;
    fieldMap: ReadonlyArray<FieldMapEntry>;
    isList: boolean;
};
export declare const attachResponseMappingSlot: ({ slotName, resolver, resolverFieldName, resolverTypeName, fieldMap, isList, }: AttachResponseMappingSlotParams) => void;
type AttachFilterConditionInputMappingSlotParams = {
    slotName: 'preUpdate' | 'preDataLoad';
    resolver: TransformerResolverProvider;
    resolverTypeName: string;
    resolverFieldName: string;
    fieldMap: ReadonlyArray<FieldMapEntry>;
    dataSource: LambdaDataSource;
};
export declare const attachFilterAndConditionInputMappingSlot: ({ slotName, resolver, resolverTypeName, resolverFieldName, fieldMap, dataSource, }: AttachFilterConditionInputMappingSlotParams) => void;
export {};
//# sourceMappingURL=field-mapping-resolvers.d.ts.map