import { TransformerPreProcessContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { ObjectTypeDefinitionNode, DirectiveNode, DocumentNode, ObjectTypeExtensionNode, FieldDefinitionNode } from 'graphql';
import { TransformerSchemaVisitStepContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
export declare const setTypeMappingInSchema: (context: TransformerPreProcessContextProvider, directiveName: string) => void;
export declare const updateTypeMapping: (modelName: string, mappedName: string, updateFunction: (newTypeName: string, originalTypeName: string) => void) => void;
export declare const shouldBeAppliedToModel: (definition: ObjectTypeDefinitionNode | ObjectTypeExtensionNode, directiveName: string) => void;
export declare const getMappedName: (definition: ObjectTypeDefinitionNode | ObjectTypeExtensionNode, directive: DirectiveNode, directiveName: string, inputDocument: DocumentNode) => string;
export declare const getMappedFieldName: (parent: ObjectTypeDefinitionNode | ObjectTypeExtensionNode, definition: FieldDefinitionNode, directive: DirectiveNode, directiveName: string) => string;
export declare const updateFieldMapping: (modelName: string, fieldName: string, mappedName: string, context: TransformerSchemaVisitStepContextProvider) => void;
//# sourceMappingURL=graphql-name-mapping.d.ts.map