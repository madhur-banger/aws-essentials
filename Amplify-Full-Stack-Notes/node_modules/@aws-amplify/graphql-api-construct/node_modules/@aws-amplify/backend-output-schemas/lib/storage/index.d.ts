import { z } from 'zod';
export declare const versionedStorageOutputSchema: z.ZodDiscriminatedUnion<"version", [z.ZodObject<{
    version: z.ZodLiteral<"1">;
    payload: z.ZodObject<{
        bucketName: z.ZodString;
        storageRegion: z.ZodString;
        buckets: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        bucketName: string;
        storageRegion: string;
        buckets?: string | undefined;
    }, {
        bucketName: string;
        storageRegion: string;
        buckets?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    version: "1";
    payload: {
        bucketName: string;
        storageRegion: string;
        buckets?: string | undefined;
    };
}, {
    version: "1";
    payload: {
        bucketName: string;
        storageRegion: string;
        buckets?: string | undefined;
    };
}>]>;
export type StorageOutput = z.infer<typeof versionedStorageOutputSchema>;
//# sourceMappingURL=index.d.ts.map