import { z } from 'zod';
export declare const AwsAppsyncAuthenticationZodEnum: z.ZodEnum<["API_KEY", "AWS_LAMBDA", "AWS_IAM", "OPENID_CONNECT", "AMAZON_COGNITO_USER_POOLS"]>;
export type AwsAppsyncAuthenticationType = z.infer<typeof AwsAppsyncAuthenticationZodEnum>;
export declare const graphqlOutputSchema: z.ZodObject<{
    version: z.ZodLiteral<"1">;
    payload: z.ZodObject<{
        awsAppsyncRegion: z.ZodString;
        awsAppsyncApiEndpoint: z.ZodString;
        awsAppsyncAuthenticationType: z.ZodEnum<["API_KEY", "AWS_LAMBDA", "AWS_IAM", "OPENID_CONNECT", "AMAZON_COGNITO_USER_POOLS"]>;
        awsAppsyncAdditionalAuthenticationTypes: z.ZodOptional<z.ZodString>;
        awsAppsyncConflictResolutionMode: z.ZodOptional<z.ZodString>;
        awsAppsyncApiKey: z.ZodOptional<z.ZodString>;
        awsAppsyncApiId: z.ZodString;
        amplifyApiModelSchemaS3Uri: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        awsAppsyncRegion: string;
        awsAppsyncApiEndpoint: string;
        awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
        awsAppsyncApiId: string;
        amplifyApiModelSchemaS3Uri: string;
        awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
        awsAppsyncConflictResolutionMode?: string | undefined;
        awsAppsyncApiKey?: string | undefined;
    }, {
        awsAppsyncRegion: string;
        awsAppsyncApiEndpoint: string;
        awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
        awsAppsyncApiId: string;
        amplifyApiModelSchemaS3Uri: string;
        awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
        awsAppsyncConflictResolutionMode?: string | undefined;
        awsAppsyncApiKey?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    version: "1";
    payload: {
        awsAppsyncRegion: string;
        awsAppsyncApiEndpoint: string;
        awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
        awsAppsyncApiId: string;
        amplifyApiModelSchemaS3Uri: string;
        awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
        awsAppsyncConflictResolutionMode?: string | undefined;
        awsAppsyncApiKey?: string | undefined;
    };
}, {
    version: "1";
    payload: {
        awsAppsyncRegion: string;
        awsAppsyncApiEndpoint: string;
        awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
        awsAppsyncApiId: string;
        amplifyApiModelSchemaS3Uri: string;
        awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
        awsAppsyncConflictResolutionMode?: string | undefined;
        awsAppsyncApiKey?: string | undefined;
    };
}>;
//# sourceMappingURL=v1.d.ts.map