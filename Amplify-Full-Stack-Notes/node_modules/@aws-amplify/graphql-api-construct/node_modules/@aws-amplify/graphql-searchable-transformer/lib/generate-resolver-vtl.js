"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.responseTemplate = exports.generateAddAggregateValues = exports.requestTemplate = exports.postAuthMappingTemplate = void 0;
const graphql_mapping_template_1 = require("graphql-mapping-template");
const graphql_transformer_common_1 = require("graphql-transformer-common");
const authFilter = (0, graphql_mapping_template_1.ref)('ctx.stash.authFilter');
const API_KEY = 'API Key Authorization';
const IAM_AUTH_TYPE = 'IAM Authorization';
const allowedAggFieldsList = 'allowedAggFields';
const postAuthMappingTemplate = (isSandboxModeEnabled, genericIamAccessEnabled, fields) => {
    const expressions = [];
    const ifAuthorizedExpression = (0, graphql_mapping_template_1.compoundExpression)([
        (0, graphql_mapping_template_1.qref)((0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('ctx.stash.put'), (0, graphql_mapping_template_1.str)(allowedAggFieldsList), (0, graphql_mapping_template_1.raw)(JSON.stringify(fields)))),
        (0, graphql_mapping_template_1.ret)((0, graphql_mapping_template_1.toJson)((0, graphql_mapping_template_1.obj)({}))),
    ]);
    if (isSandboxModeEnabled) {
        expressions.push((0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.equals)((0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('util.authType')), (0, graphql_mapping_template_1.str)(API_KEY)), ifAuthorizedExpression));
    }
    if (genericIamAccessEnabled) {
        const isNonCognitoIAMPrincipal = (0, graphql_mapping_template_1.and)([
            (0, graphql_mapping_template_1.equals)((0, graphql_mapping_template_1.ref)('util.authType()'), (0, graphql_mapping_template_1.str)(IAM_AUTH_TYPE)),
            (0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('util.isNull'), (0, graphql_mapping_template_1.ref)('ctx.identity.cognitoIdentityPoolId')),
            (0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('util.isNull'), (0, graphql_mapping_template_1.ref)('ctx.identity.cognitoIdentityId')),
        ]);
        expressions.push((0, graphql_mapping_template_1.iff)(isNonCognitoIAMPrincipal, ifAuthorizedExpression));
    }
    expressions.push((0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('util.unauthorized')));
    return (0, graphql_mapping_template_1.printBlock)(`Sandbox Mode ${isSandboxModeEnabled ? 'Enabled' : 'Disabled'}, IAM Access ${genericIamAccessEnabled ? 'Enabled' : 'Disabled'}`)((0, graphql_mapping_template_1.compoundExpression)([(0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.not)((0, graphql_mapping_template_1.ref)('ctx.stash.get("hasAuth")')), (0, graphql_mapping_template_1.compoundExpression)(expressions)), (0, graphql_mapping_template_1.toJson)((0, graphql_mapping_template_1.obj)({}))]));
};
exports.postAuthMappingTemplate = postAuthMappingTemplate;
const getSourceMapper = (includeVersion) => {
    if (includeVersion) {
        return [
            (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('row'), (0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('entry.get'), (0, graphql_mapping_template_1.str)('_source'))),
            (0, graphql_mapping_template_1.qref)('$row.put("_version", $entry.get("_version"))'),
            (0, graphql_mapping_template_1.qref)('$es_items.add($row)'),
        ];
    }
    return [(0, graphql_mapping_template_1.qref)('$es_items.add($entry.get("_source"))')];
};
const requestTemplate = (primaryKey, nonKeywordFields, includeVersion = false, indexName, keyFields = []) => (0, graphql_mapping_template_1.print)((0, graphql_mapping_template_1.compoundExpression)([
    graphql_transformer_common_1.setArgs,
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('indexPath'), (0, graphql_mapping_template_1.str)(`/${indexName.toLowerCase()}/_search`)),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('allowedAggFields'), (0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('util.defaultIfNull'), (0, graphql_mapping_template_1.ref)('ctx.stash.allowedAggFields'), (0, graphql_mapping_template_1.list)([]))),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggFieldsFilterMap'), (0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('util.defaultIfNull'), (0, graphql_mapping_template_1.ref)('ctx.stash.aggFieldsFilterMap'), (0, graphql_mapping_template_1.obj)({}))),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('nonKeywordFields'), (0, graphql_mapping_template_1.list)(nonKeywordFields)),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('keyFields'), (0, graphql_mapping_template_1.list)(keyFields)),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortValues'), (0, graphql_mapping_template_1.list)([])),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortFields'), (0, graphql_mapping_template_1.list)([])),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggregateValues'), (0, graphql_mapping_template_1.obj)({})),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('primaryKey'), (0, graphql_mapping_template_1.str)(primaryKey)),
    (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.not)((0, graphql_mapping_template_1.ref)('util.isNullOrEmpty($args.sort)')), (0, graphql_mapping_template_1.compoundExpression)([
        (0, graphql_mapping_template_1.forEach)((0, graphql_mapping_template_1.ref)('sortItem'), (0, graphql_mapping_template_1.ref)('args.sort'), [
            (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('util.isNullOrEmpty($sortItem.field)'), (0, graphql_mapping_template_1.qref)('$sortFields.add($primaryKey)'), (0, graphql_mapping_template_1.qref)('$sortFields.add($sortItem.field)')),
            (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('util.isNullOrEmpty($sortItem.field)'), (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('nonKeywordFields.contains($primaryKey)'), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortField'), (0, graphql_mapping_template_1.ref)('util.toJson($primaryKey)')), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortField'), (0, graphql_mapping_template_1.ref)('util.toJson("${primaryKey}.keyword")'))), (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('nonKeywordFields.contains($sortItem.field)'), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortField'), (0, graphql_mapping_template_1.ref)('util.toJson($sortItem.field)')), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortField'), (0, graphql_mapping_template_1.ref)('util.toJson("${sortItem.field}.keyword")')))),
            (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('util.isNullOrEmpty($sortItem.direction)'), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortDirection'), (0, graphql_mapping_template_1.ref)('util.toJson({"order": "desc"})')), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortDirection'), (0, graphql_mapping_template_1.ref)('util.toJson({"order": $sortItem.direction})'))),
            (0, graphql_mapping_template_1.qref)('$sortValues.add("{$sortField: $sortDirection}")'),
        ]),
    ])),
    (0, graphql_mapping_template_1.forEach)((0, graphql_mapping_template_1.ref)('keyItem'), (0, graphql_mapping_template_1.ref)('keyFields'), [
        (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.not)((0, graphql_mapping_template_1.ref)('sortFields.contains($keyItem)')), (0, graphql_mapping_template_1.compoundExpression)([
            (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('nonKeywordFields.contains($keyItem)'), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortField'), (0, graphql_mapping_template_1.ref)('util.toJson($keyItem)')), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortField'), (0, graphql_mapping_template_1.ref)('util.toJson("${keyItem}.keyword")'))),
            (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('sortDirection'), (0, graphql_mapping_template_1.ref)('util.toJson({"order": "desc"})')),
            (0, graphql_mapping_template_1.qref)('$sortValues.add("{$sortField: $sortDirection}")'),
        ])),
    ]),
    (0, graphql_mapping_template_1.forEach)((0, graphql_mapping_template_1.ref)('aggItem'), (0, graphql_mapping_template_1.ref)('args.aggregates'), [
        (0, graphql_mapping_template_1.raw)('#if( $allowedAggFields.contains($aggItem.field) )\n' +
            '    #set( $aggFilter = { "match_all": {} } )\n' +
            '  #elseif( $aggFieldsFilterMap.containsKey($aggItem.field) )\n' +
            '    #set( $aggFilter = { "bool": { "should": $aggFieldsFilterMap.get($aggItem.field) } } )\n' +
            '  #else\n' +
            '    $util.error("Unauthorized to run aggregation on field: ${aggItem.field}", "Unauthorized")\n' +
            '  #end'),
        (0, exports.generateAddAggregateValues)(),
    ]),
    (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.not)((0, graphql_mapping_template_1.isNullOrEmpty)(authFilter)), (0, graphql_mapping_template_1.compoundExpression)([
        (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('filter'), authFilter),
        (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.not)((0, graphql_mapping_template_1.isNullOrEmpty)((0, graphql_mapping_template_1.ref)('args.filter'))), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('filter'), (0, graphql_mapping_template_1.obj)({
            bool: (0, graphql_mapping_template_1.obj)({
                must: (0, graphql_mapping_template_1.list)([(0, graphql_mapping_template_1.ref)('ctx.stash.authFilter'), (0, graphql_mapping_template_1.ref)('util.parseJson($util.transform.toElasticsearchQueryDSL($args.filter))')]),
            }),
        }))),
    ]), (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.not)((0, graphql_mapping_template_1.isNullOrEmpty)((0, graphql_mapping_template_1.ref)('args.filter'))), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('filter'), (0, graphql_mapping_template_1.ref)('util.parseJson($util.transform.toElasticsearchQueryDSL($args.filter))')))),
    (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.isNullOrEmpty)((0, graphql_mapping_template_1.ref)('filter')), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('filter'), (0, graphql_mapping_template_1.obj)({ match_all: (0, graphql_mapping_template_1.obj)({}) }))),
    graphql_mapping_template_1.SearchableMappingTemplate.searchTemplate({
        path: (0, graphql_mapping_template_1.str)('$indexPath'),
        size: (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('args.limit'), (0, graphql_mapping_template_1.ref)('args.limit'), (0, graphql_mapping_template_1.int)(graphql_transformer_common_1.ResourceConstants.DEFAULT_SEARCHABLE_PAGE_LIMIT), true),
        search_after: (0, graphql_mapping_template_1.ref)('util.base64Decode($args.nextToken)'),
        from: (0, graphql_mapping_template_1.ref)('args.from'),
        version: (0, graphql_mapping_template_1.bool)(includeVersion),
        query: (0, graphql_mapping_template_1.methodCall)((0, graphql_mapping_template_1.ref)('util.toJson'), (0, graphql_mapping_template_1.ref)('filter')),
        sort: (0, graphql_mapping_template_1.ref)('sortValues'),
        aggs: (0, graphql_mapping_template_1.ref)('util.toJson($aggregateValues)'),
    }),
]));
exports.requestTemplate = requestTemplate;
const generateAddAggregateValues = () => {
    return (0, graphql_mapping_template_1.compoundExpression)([
        (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggregateValue'), (0, graphql_mapping_template_1.obj)({})),
        (0, graphql_mapping_template_1.qref)('$aggregateValue.put("filter", $aggFilter)'),
        (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggsValue'), (0, graphql_mapping_template_1.obj)({})),
        (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggItemType'), (0, graphql_mapping_template_1.obj)({})),
        (0, graphql_mapping_template_1.ifElse)((0, graphql_mapping_template_1.ref)('nonKeywordFields.contains($aggItem.field)'), (0, graphql_mapping_template_1.qref)('$aggItemType.put("$aggItem.type", { "field": "$aggItem.field" })'), (0, graphql_mapping_template_1.qref)('$aggItemType.put("$aggItem.type", { "field": "${aggItem.field}.keyword" })')),
        (0, graphql_mapping_template_1.qref)('$aggsValue.put("$aggItem.name", $aggItemType)'),
        (0, graphql_mapping_template_1.qref)('$aggregateValue.put("aggs", $aggsValue)'),
        (0, graphql_mapping_template_1.qref)('$aggregateValues.put("$aggItem.name", $aggregateValue)'),
    ]);
};
exports.generateAddAggregateValues = generateAddAggregateValues;
const responseTemplate = (includeVersion = false) => (0, graphql_mapping_template_1.print)((0, graphql_mapping_template_1.compoundExpression)([
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('es_items'), (0, graphql_mapping_template_1.list)([])),
    (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggregateValues'), (0, graphql_mapping_template_1.list)([])),
    (0, graphql_mapping_template_1.forEach)((0, graphql_mapping_template_1.ref)('entry'), (0, graphql_mapping_template_1.ref)('context.result.hits.hits'), [
        (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.raw)('!$foreach.hasNext'), (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('nextToken'), (0, graphql_mapping_template_1.ref)('util.base64Encode($util.toJson($entry.sort))'))),
        ...getSourceMapper(includeVersion),
    ]),
    (0, graphql_mapping_template_1.forEach)((0, graphql_mapping_template_1.ref)('aggItem'), (0, graphql_mapping_template_1.ref)('context.result.aggregations.keySet()'), [
        (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggResult'), (0, graphql_mapping_template_1.obj)({})),
        (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('aggResultValue'), (0, graphql_mapping_template_1.obj)({})),
        (0, graphql_mapping_template_1.set)((0, graphql_mapping_template_1.ref)('currentAggItem'), (0, graphql_mapping_template_1.ref)('ctx.result.aggregations.get($aggItem)')),
        (0, graphql_mapping_template_1.qref)('$aggResult.put("name", $aggItem)'),
        (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.raw)('!$util.isNullOrEmpty($currentAggItem)'), (0, graphql_mapping_template_1.compoundExpression)([
            (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.raw)('!$util.isNullOrEmpty($currentAggItem.get($aggItem).buckets)'), (0, graphql_mapping_template_1.compoundExpression)([
                (0, graphql_mapping_template_1.qref)('$aggResultValue.put("__typename", "SearchableAggregateBucketResult")'),
                (0, graphql_mapping_template_1.qref)('$aggResultValue.put("buckets", $currentAggItem.get($aggItem).buckets)'),
            ])),
            (0, graphql_mapping_template_1.iff)((0, graphql_mapping_template_1.raw)('!$util.isNullOrEmpty($currentAggItem.get($aggItem).value)'), (0, graphql_mapping_template_1.compoundExpression)([
                (0, graphql_mapping_template_1.qref)('$aggResultValue.put("__typename", "SearchableAggregateScalarResult")'),
                (0, graphql_mapping_template_1.qref)('$aggResultValue.put("value", $currentAggItem.get($aggItem).value)'),
            ])),
        ])),
        (0, graphql_mapping_template_1.qref)('$aggResult.put("result", $aggResultValue)'),
        (0, graphql_mapping_template_1.qref)('$aggregateValues.add($aggResult)'),
    ]),
    (0, graphql_mapping_template_1.toJson)((0, graphql_mapping_template_1.obj)({
        items: (0, graphql_mapping_template_1.ref)('es_items'),
        total: (0, graphql_mapping_template_1.ref)('ctx.result.hits.total.value'),
        nextToken: (0, graphql_mapping_template_1.ref)('nextToken'),
        aggregateItems: (0, graphql_mapping_template_1.ref)('aggregateValues'),
    })),
]));
exports.responseTemplate = responseTemplate;
//# sourceMappingURL=generate-resolver-vtl.js.map