import { TransformerContextProvider, TransformerPrepareStepContextProvider, TransformerTransformSchemaStepContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { DataSourceBasedDirectiveTransformer } from '../data-source-based-directive-transformer';
import { HasManyDirectiveConfiguration } from '../types';
export declare class HasManyDirectiveDDBFieldsTransformer implements DataSourceBasedDirectiveTransformer<HasManyDirectiveConfiguration> {
    dbType: import("@aws-amplify/graphql-transformer-interfaces").ModelDataSourceStrategyDbType;
    prepare: (context: TransformerPrepareStepContextProvider, config: HasManyDirectiveConfiguration) => void;
    transformSchema: (context: TransformerTransformSchemaStepContextProvider, config: HasManyDirectiveConfiguration) => void;
    generateResolvers: (context: TransformerContextProvider, config: HasManyDirectiveConfiguration) => void;
    validate: (context: TransformerContextProvider, config: HasManyDirectiveConfiguration) => void;
}
//# sourceMappingURL=has-many-directive-ddb-fields-transformer.d.ts.map