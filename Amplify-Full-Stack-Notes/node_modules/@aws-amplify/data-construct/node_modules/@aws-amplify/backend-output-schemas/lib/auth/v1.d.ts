import { z } from 'zod';
export declare const authOutputSchema: z.ZodObject<{
    version: z.ZodLiteral<"1">;
    payload: z.ZodObject<{
        authRegion: z.ZodString;
        userPoolId: z.ZodString;
        webClientId: z.ZodString;
        identityPoolId: z.ZodString;
        allowUnauthenticatedIdentities: z.ZodOptional<z.ZodString>;
        usernameAttributes: z.ZodOptional<z.ZodString>;
        signupAttributes: z.ZodOptional<z.ZodString>;
        passwordPolicyMinLength: z.ZodOptional<z.ZodString>;
        passwordPolicyRequirements: z.ZodOptional<z.ZodString>;
        mfaConfiguration: z.ZodOptional<z.ZodString>;
        mfaTypes: z.ZodOptional<z.ZodString>;
        verificationMechanisms: z.ZodOptional<z.ZodString>;
        socialProviders: z.ZodOptional<z.ZodString>;
        oauthCognitoDomain: z.ZodOptional<z.ZodString>;
        oauthScope: z.ZodOptional<z.ZodString>;
        oauthRedirectSignIn: z.ZodOptional<z.ZodString>;
        oauthRedirectSignOut: z.ZodOptional<z.ZodString>;
        oauthClientId: z.ZodOptional<z.ZodString>;
        oauthResponseType: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        authRegion: string;
        userPoolId: string;
        webClientId: string;
        identityPoolId: string;
        allowUnauthenticatedIdentities?: string | undefined;
        usernameAttributes?: string | undefined;
        signupAttributes?: string | undefined;
        passwordPolicyMinLength?: string | undefined;
        passwordPolicyRequirements?: string | undefined;
        mfaConfiguration?: string | undefined;
        mfaTypes?: string | undefined;
        verificationMechanisms?: string | undefined;
        socialProviders?: string | undefined;
        oauthCognitoDomain?: string | undefined;
        oauthScope?: string | undefined;
        oauthRedirectSignIn?: string | undefined;
        oauthRedirectSignOut?: string | undefined;
        oauthClientId?: string | undefined;
        oauthResponseType?: string | undefined;
    }, {
        authRegion: string;
        userPoolId: string;
        webClientId: string;
        identityPoolId: string;
        allowUnauthenticatedIdentities?: string | undefined;
        usernameAttributes?: string | undefined;
        signupAttributes?: string | undefined;
        passwordPolicyMinLength?: string | undefined;
        passwordPolicyRequirements?: string | undefined;
        mfaConfiguration?: string | undefined;
        mfaTypes?: string | undefined;
        verificationMechanisms?: string | undefined;
        socialProviders?: string | undefined;
        oauthCognitoDomain?: string | undefined;
        oauthScope?: string | undefined;
        oauthRedirectSignIn?: string | undefined;
        oauthRedirectSignOut?: string | undefined;
        oauthClientId?: string | undefined;
        oauthResponseType?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    version: "1";
    payload: {
        authRegion: string;
        userPoolId: string;
        webClientId: string;
        identityPoolId: string;
        allowUnauthenticatedIdentities?: string | undefined;
        usernameAttributes?: string | undefined;
        signupAttributes?: string | undefined;
        passwordPolicyMinLength?: string | undefined;
        passwordPolicyRequirements?: string | undefined;
        mfaConfiguration?: string | undefined;
        mfaTypes?: string | undefined;
        verificationMechanisms?: string | undefined;
        socialProviders?: string | undefined;
        oauthCognitoDomain?: string | undefined;
        oauthScope?: string | undefined;
        oauthRedirectSignIn?: string | undefined;
        oauthRedirectSignOut?: string | undefined;
        oauthClientId?: string | undefined;
        oauthResponseType?: string | undefined;
    };
}, {
    version: "1";
    payload: {
        authRegion: string;
        userPoolId: string;
        webClientId: string;
        identityPoolId: string;
        allowUnauthenticatedIdentities?: string | undefined;
        usernameAttributes?: string | undefined;
        signupAttributes?: string | undefined;
        passwordPolicyMinLength?: string | undefined;
        passwordPolicyRequirements?: string | undefined;
        mfaConfiguration?: string | undefined;
        mfaTypes?: string | undefined;
        verificationMechanisms?: string | undefined;
        socialProviders?: string | undefined;
        oauthCognitoDomain?: string | undefined;
        oauthScope?: string | undefined;
        oauthRedirectSignIn?: string | undefined;
        oauthRedirectSignOut?: string | undefined;
        oauthClientId?: string | undefined;
        oauthResponseType?: string | undefined;
    };
}>;
//# sourceMappingURL=v1.d.ts.map