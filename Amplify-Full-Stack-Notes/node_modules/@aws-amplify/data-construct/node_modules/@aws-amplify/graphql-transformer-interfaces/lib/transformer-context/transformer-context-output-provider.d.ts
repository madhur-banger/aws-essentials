import { TypeDefinitionNode, SchemaDefinitionNode, ObjectTypeDefinitionNode, TypeSystemDefinitionNode, FieldDefinitionNode, ObjectTypeExtensionNode, InputObjectTypeExtensionNode, InterfaceTypeExtensionNode, UnionTypeExtensionNode, EnumTypeExtensionNode, InputObjectTypeDefinitionNode, EnumTypeDefinitionNode, UnionTypeDefinitionNode } from 'graphql';
export interface TransformerContextOutputProvider {
    getTypeDefinitionsOfKind: (kind: string) => TypeDefinitionNode[];
    putSchema: (obj: SchemaDefinitionNode) => void;
    getSchema: () => SchemaDefinitionNode;
    getQueryTypeName: () => string | undefined;
    getQuery(): ObjectTypeDefinitionNode | undefined;
    getMutationTypeName(): string | undefined;
    getMutation(): ObjectTypeDefinitionNode | undefined;
    getSubscriptionTypeName(): string | undefined;
    getSubscription(): ObjectTypeDefinitionNode | undefined;
    addType(obj: TypeDefinitionNode): void;
    putType(obj: TypeDefinitionNode): void;
    getType(name: string): TypeSystemDefinitionNode | undefined;
    hasType(name: string): boolean;
    addObject(obj: ObjectTypeDefinitionNode): void;
    updateObject(obj: ObjectTypeDefinitionNode): void;
    getObject(name: string): ObjectTypeDefinitionNode | undefined;
    addUnion(obj: UnionTypeDefinitionNode): void;
    addQueryFields(fields: FieldDefinitionNode[]): void;
    addMutationFields(fields: FieldDefinitionNode[]): void;
    addSubscriptionFields(fields: FieldDefinitionNode[]): void;
    addObjectExtension(obj: ObjectTypeExtensionNode): void;
    addInputExtension(obj: InputObjectTypeExtensionNode): void;
    addInterfaceExtension(obj: InterfaceTypeExtensionNode): void;
    addUnionExtension(obj: UnionTypeExtensionNode): void;
    addEnumExtension(obj: EnumTypeExtensionNode): void;
    addInput(inp: InputObjectTypeDefinitionNode): void;
    updateInput(obj: InputObjectTypeDefinitionNode): void;
    getInput(name: string): InputObjectTypeDefinitionNode | undefined;
    addEnum(en: EnumTypeDefinitionNode): void;
}
//# sourceMappingURL=transformer-context-output-provider.d.ts.map