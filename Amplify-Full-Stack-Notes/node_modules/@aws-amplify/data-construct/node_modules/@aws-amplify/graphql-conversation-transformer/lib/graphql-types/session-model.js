"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createConversationModel = void 0;
const graphql_directives_1 = require("@aws-amplify/graphql-directives");
const graphql_1 = require("graphql");
const graphql_transformer_common_1 = require("graphql-transformer-common");
const createConversationModel = (conversationModelName, messageModelName, referenceFieldName) => {
    const conversationAuthDirective = createSessionAuthDirective();
    const conversationModelDirective = createSessionModelDirective();
    const conversationHasManyMessagesDirective = createSessionModelMessagesFieldHasManyDirective(referenceFieldName);
    const conversationMessagesField = createSessionModelMessagesField(conversationHasManyMessagesDirective, messageModelName);
    const conversationModel = makeConversationSessionModel(conversationModelName, conversationMessagesField, [
        conversationAuthDirective,
        conversationModelDirective,
    ]);
    return {
        conversationAuthDirective,
        conversationModelDirective,
        conversationHasManyMessagesDirective,
        conversationMessagesField,
        conversationModel,
    };
};
exports.createConversationModel = createConversationModel;
const createSessionAuthDirective = () => {
    const rules = (0, graphql_transformer_common_1.makeArgument)('rules', {
        kind: graphql_1.Kind.LIST,
        values: [
            {
                kind: graphql_1.Kind.OBJECT,
                fields: [
                    {
                        kind: graphql_1.Kind.OBJECT_FIELD,
                        name: { kind: graphql_1.Kind.NAME, value: 'allow' },
                        value: { kind: graphql_1.Kind.ENUM, value: 'owner' },
                    },
                    {
                        kind: graphql_1.Kind.OBJECT_FIELD,
                        name: { kind: graphql_1.Kind.NAME, value: 'ownerField' },
                        value: { kind: graphql_1.Kind.STRING, value: 'owner' },
                    },
                ],
            },
        ],
    });
    return (0, graphql_transformer_common_1.makeDirective)('auth', [rules]);
};
const createSessionModelDirective = () => {
    const subscriptionsOffValue = {
        kind: graphql_1.Kind.OBJECT,
        fields: [
            {
                kind: graphql_1.Kind.OBJECT_FIELD,
                name: { kind: graphql_1.Kind.NAME, value: 'level' },
                value: { kind: graphql_1.Kind.ENUM, value: 'off' },
            },
        ],
    };
    return (0, graphql_transformer_common_1.makeDirective)('model', [
        (0, graphql_transformer_common_1.makeArgument)('subscriptions', subscriptionsOffValue),
        (0, graphql_transformer_common_1.makeArgument)('mutations', (0, graphql_transformer_common_1.makeValueNode)({ update: null })),
    ]);
};
const createSessionModelMessagesFieldHasManyDirective = (fieldName) => {
    const referencesArg = (0, graphql_transformer_common_1.makeArgument)('references', (0, graphql_transformer_common_1.makeValueNode)(fieldName));
    return (0, graphql_transformer_common_1.makeDirective)(graphql_directives_1.HasManyDirective.name, [referencesArg]);
};
const createSessionModelMessagesField = (hasManyDirective, typeName) => {
    return (0, graphql_transformer_common_1.makeField)('messages', [], (0, graphql_transformer_common_1.makeListType)((0, graphql_transformer_common_1.makeNamedType)(typeName)), [hasManyDirective]);
};
const makeConversationSessionModel = (modelName, messagesField, typeLevelDirectives) => {
    const id = (0, graphql_transformer_common_1.makeField)('id', [], (0, graphql_transformer_common_1.wrapNonNull)((0, graphql_transformer_common_1.makeNamedType)('ID')));
    const name = (0, graphql_transformer_common_1.makeField)('name', [], (0, graphql_transformer_common_1.makeNamedType)('String'));
    const metadata = (0, graphql_transformer_common_1.makeField)('metadata', [], (0, graphql_transformer_common_1.makeNamedType)('AWSJSON'));
    return {
        ...(0, graphql_transformer_common_1.blankObject)(modelName),
        fields: [id, name, metadata, messagesField],
        directives: typeLevelDirectives,
    };
};
//# sourceMappingURL=session-model.js.map