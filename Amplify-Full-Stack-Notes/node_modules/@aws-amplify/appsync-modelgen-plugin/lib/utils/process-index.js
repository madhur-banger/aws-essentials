"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateDefaultIndexName = exports.processIndex = void 0;
const fieldUtils_1 = require("./fieldUtils");
const pluralize_1 = __importDefault(require("pluralize"));
const stringUtils_1 = require("./stringUtils");
const processIndex = (model) => {
    const indexMap = model.fields.reduce((acc, field) => {
        const indexDirectives = (0, fieldUtils_1.getDirectives)(field)('index');
        if (!indexDirectives) {
            return acc;
        }
        return { ...acc, [field.name]: indexDirectives };
    }, {});
    const keyList = [];
    Object.entries(indexMap).forEach(([fieldName, directives]) => {
        directives.forEach(directive => {
            var _a, _b, _c;
            keyList.push({
                name: 'key',
                arguments: {
                    name: (_a = directive.arguments.name) !== null && _a !== void 0 ? _a : (0, exports.generateDefaultIndexName)(model.name, [fieldName].concat((_b = directive.arguments.sortKeyFields) !== null && _b !== void 0 ? _b : [])),
                    queryField: directive.arguments.queryField,
                    fields: [fieldName].concat((_c = directive.arguments.sortKeyFields) !== null && _c !== void 0 ? _c : []),
                },
            });
        });
    });
    const existingIndexNames = model.directives
        .filter(directive => directive.name === 'key' && !!directive.arguments.name)
        .map(directive => directive.arguments.name);
    const deDupedKeyList = keyList.filter(key => !existingIndexNames.includes(key.arguments.name));
    model.directives.push(...deDupedKeyList);
};
exports.processIndex = processIndex;
const generateDefaultIndexName = (modelName, fieldNames) => {
    return `${(0, stringUtils_1.toLower)((0, pluralize_1.default)(modelName))}By${fieldNames.map(stringUtils_1.toUpper).join('And')}`;
};
exports.generateDefaultIndexName = generateDefaultIndexName;
//# sourceMappingURL=process-index.js.map