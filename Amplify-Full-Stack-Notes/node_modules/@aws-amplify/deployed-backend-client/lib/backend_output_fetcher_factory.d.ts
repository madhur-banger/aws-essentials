import { AmplifyClient } from '@aws-sdk/client-amplify';
import { CloudFormationClient } from '@aws-sdk/client-cloudformation';
import { DeployedBackendIdentifier } from './deployed_backend_identifier.js';
import { AppNameAndBranchBackendIdentifier } from './stack-name-resolvers/app_name_and_branch_main_stack_name_resolver.js';
import { StackIdentifier } from './stack-name-resolvers/passthrough_main_stack_name_resolver.js';
import { StackMetadataBackendOutputRetrievalStrategy } from './stack_metadata_output_retrieval_strategy.js';
import { BackendIdentifier } from '@aws-amplify/plugin-types';
/**
 * Asserts that a BackendIdentifier is a BackendIdentifier
 */
export declare const isBackendIdentifier: (backendIdentifier: DeployedBackendIdentifier) => backendIdentifier is BackendIdentifier;
/**
 * Asserts that a BackendIdentifier is a AppNameAndBranchBackendIdentifier
 */
export declare const isAppNameAndBranchIdentifier: (backendIdentifier: DeployedBackendIdentifier) => backendIdentifier is AppNameAndBranchBackendIdentifier;
/**
 * Asserts that a BackendIdentifier is a StackIdentifier
 */
export declare const isStackIdentifier: (backendIdentifier: DeployedBackendIdentifier) => backendIdentifier is StackIdentifier;
/**
 * Constructs an OutputRetrievalStrategy depending on the type of StackIdentifier
 */
export declare class BackendOutputFetcherFactory {
    private cfnClient;
    private amplifyClient;
    /**
     * Instantiates the factory
     */
    constructor(cfnClient: CloudFormationClient, amplifyClient: AmplifyClient);
    getStrategy: (backendIdentifier: DeployedBackendIdentifier) => StackMetadataBackendOutputRetrievalStrategy;
}
//# sourceMappingURL=backend_output_fetcher_factory.d.ts.map