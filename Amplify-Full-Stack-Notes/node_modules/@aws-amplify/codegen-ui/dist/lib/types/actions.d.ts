import { StudioComponentProperty, StateStudioComponentProperty } from './properties';
export declare type StateReference = StateStudioComponentProperty | MutationActionSetStateParameter;
export declare type MutationAction = {
    action: 'Amplify.Mutation';
    parameters: {
        state: MutationActionSetStateParameter;
    };
};
export declare type MutationActionSetStateParameter = {
    componentName: string;
    property: string;
    set: StudioComponentProperty;
};
export declare type ActionStudioComponentEvent = NavigationAction | AuthSignOutAction | DataStoreCreateItemAction | DataStoreUpdateItemAction | DataStoreDeleteItemAction | MutationAction;
export declare type NavigationAction = {
    action: 'Amplify.Navigation';
    parameters: {
        type: StudioComponentProperty;
        url?: StudioComponentProperty;
        anchor?: StudioComponentProperty;
        target?: StudioComponentProperty;
    };
};
export declare type AuthSignOutAction = {
    action: 'Amplify.AuthSignOut';
    parameters: {
        global: StudioComponentProperty;
    };
};
export declare type DataStoreCreateItemAction = {
    action: 'Amplify.DataStoreCreateItemAction';
    parameters: {
        model: string;
        fields: {
            [propertyName: string]: StudioComponentProperty;
        };
    };
};
export declare type DataStoreUpdateItemAction = {
    action: 'Amplify.DataStoreUpdateItemAction';
    parameters: {
        model: string;
        id: StudioComponentProperty;
        fields: {
            [propertyName: string]: StudioComponentProperty;
        };
    };
};
export declare type DataStoreDeleteItemAction = {
    action: 'Amplify.DataStoreDeleteItemAction';
    parameters: {
        model: string;
        id: StudioComponentProperty;
    };
};
//# sourceMappingURL=actions.d.ts.map