import { FormStyleConfig, LabelDecorator } from './style';
import { FormDefinitionElement, FormDefinitionButtonElement } from './form-definition-element';
import { StudioGenericFieldConfig } from './fields';
import { DataFieldDataType, GenericDataRelationshipType } from '../data';
export declare type ExtendedStudioGenericFieldConfig = StudioGenericFieldConfig & {
    dataType?: DataFieldDataType;
    relationship?: GenericDataRelationshipType;
};
export declare type ModelFieldsConfigs = {
    [key: string]: ExtendedStudioGenericFieldConfig;
};
export declare type ButtonConfig = {
    buttonConfigs: {
        submit?: FormDefinitionButtonElement;
        cancel?: FormDefinitionButtonElement;
        clear?: FormDefinitionButtonElement;
    };
    position: string;
    buttonMatrix: string[][];
};
export declare type FormDefinition = {
    form: {
        layoutStyle: {
            horizontalGap: FormStyleConfig;
            verticalGap: FormStyleConfig;
            outerPadding: FormStyleConfig;
        };
        labelDecorator?: LabelDecorator;
    };
    elements: {
        [element: string]: FormDefinitionElement;
    };
    buttons: ButtonConfig;
    elementMatrix: string[][];
    inputFields?: string[];
};
export declare type FieldTypeMapKeys = 'ID' | 'String' | 'Int' | 'Float' | 'AWSDate' | 'AWSTime' | 'AWSDateTime' | 'AWSTimestamp' | 'AWSEmail' | 'AWSURL' | 'AWSIPAddress' | 'Boolean' | 'AWSJSON' | 'AWSPhone' | 'Enum' | 'Relationship' | 'NonModel';
//# sourceMappingURL=form-definition.d.ts.map