import { DataFieldDataType, GenericDataRelationshipType } from '../data';
import { FieldValidationConfiguration } from './form-validation';
import { StudioFormValueMappings } from './input-config';
declare type FormDefinitionInputElementCommon = {
    dataType?: DataFieldDataType;
    validations?: (FieldValidationConfiguration & {
        immutable?: true;
    })[];
    isArray?: boolean;
    relationship?: GenericDataRelationshipType;
};
export declare type FormDefinitionTextFieldElement = {
    componentType: 'TextField';
    props: {
        label: string;
        descriptiveText?: string;
        isRequired?: boolean;
        isReadOnly?: boolean;
        placeholder?: string;
        type?: string;
    };
    studioFormComponentType: 'TextField' | 'NumberField' | 'DateField' | 'TimeField' | 'DateTimeField' | 'IPAddressField' | 'URLField' | 'EmailField' | 'PhoneNumberField';
};
export declare type FormDefinitionAutocompleteElement = {
    componentType: 'Autocomplete';
    props: {
        label: string;
        descriptiveText?: string;
        isRequired?: boolean;
        isReadOnly?: boolean;
        placeholder?: string;
        defaultValue?: string;
    };
    valueMappings: StudioFormValueMappings;
};
export declare type FormDefinitionSwitchFieldElement = {
    componentType: 'SwitchField';
    props: {
        label: string;
        defaultChecked?: boolean;
        isDisabled?: boolean;
    };
};
export declare type FormDefinitionPhoneNumberFieldElement = {
    componentType: 'PhoneNumberField';
    props: {
        label: string;
        defaultCountryCode: string;
        isRequired?: boolean;
        isReadOnly?: boolean;
        descriptiveText?: string;
        placeholder?: string;
        defaultValue?: string;
    };
};
export declare type FormDefinitionSelectFieldElement = {
    componentType: 'SelectField';
    props: {
        label: string;
        descriptiveText?: string;
        placeholder?: string;
        isDisabled?: boolean;
    };
    valueMappings: StudioFormValueMappings;
    defaultValue?: string;
};
export declare type FormDefinitionTextAreaFieldElement = {
    componentType: 'TextAreaField';
    props: {
        label: string;
        descriptiveText?: string;
        isRequired?: boolean;
        isReadOnly?: boolean;
        placeholder?: string;
        defaultValue?: string;
    };
    studioFormComponentType: 'JSONField' | 'TextAreaField';
};
export declare type FormDefinitionSliderFieldElement = {
    componentType: 'SliderField';
    props: {
        label: string;
        min?: number;
        max?: number;
        step?: number;
        defaultValue?: number;
        isDisabled?: boolean;
        descriptiveText?: string;
        isRequired?: boolean;
    };
};
export declare type FormDefinitionStepperFieldElement = {
    componentType: 'StepperField';
    props: {
        label: string;
        min?: number;
        max?: number;
        step?: number;
        isReadOnly?: boolean;
        defaultValue?: number;
        descriptiveText?: string;
        isRequired?: boolean;
    };
};
export declare type FormDefinitionStorageFieldElement = {
    componentType: 'StorageField';
    props: {
        label: string;
        descriptiveText?: string;
        isRequired?: boolean;
        isReadOnly?: boolean;
        defaultValue?: string;
        accessLevel: StorageAccessLevel;
        acceptedFileTypes: string[];
        showThumbnails?: boolean;
        isResumable?: boolean;
        maxFileCount?: number;
        maxSize?: number;
    };
};
export declare type FormDefinitionToggleButtonElement = {
    componentType: 'ToggleButton';
    props: {
        children?: string;
        isDisabled?: boolean;
        defaultPressed?: boolean;
    };
};
export declare type FormDefinitionCheckboxFieldElement = {
    componentType: 'CheckboxField';
    props: {
        label: string;
        value: string;
        name: string;
        isDisabled?: boolean;
    };
};
export declare type FormDefinitionRadioGroupFieldElement = {
    componentType: 'RadioGroupField';
    props: {
        label: string;
        name: string;
        isReadOnly?: boolean;
        defaultValue?: string;
        descriptiveText?: string;
        isRequired?: boolean;
    };
    valueMappings: StudioFormValueMappings;
};
export declare type FormDefinitionPasswordFieldElement = {
    componentType: 'PasswordField';
    props: {
        label: string;
        descriptiveText?: string;
        isRequired?: boolean;
        isReadOnly?: boolean;
        placeholder?: string;
        defaultValue?: string;
    };
};
export declare type FormDefinitionButtonElement = {
    name: string;
    componentType: 'Button';
    props: {
        variation?: string;
        children: string;
        type?: string;
    };
};
export declare type FormDefinitionInputElement = (FormDefinitionTextFieldElement | FormDefinitionSwitchFieldElement | FormDefinitionPhoneNumberFieldElement | FormDefinitionSelectFieldElement | FormDefinitionTextAreaFieldElement | FormDefinitionSliderFieldElement | FormDefinitionStepperFieldElement | FormDefinitionToggleButtonElement | FormDefinitionCheckboxFieldElement | FormDefinitionRadioGroupFieldElement | FormDefinitionPasswordFieldElement | FormDefinitionAutocompleteElement | FormDefinitionStorageFieldElement) & FormDefinitionInputElementCommon;
export declare type FormDefinitionHeadingElement = {
    componentType: 'Heading';
    props: {
        level?: number;
        children?: string;
    };
};
export declare type FormDefinitionTextElement = {
    componentType: 'Text';
    props: {
        children?: string;
    };
};
export declare type FormDefinitionDividerElement = {
    componentType: 'Divider';
    props: {
        orientation?: 'horizontal' | 'vertical';
    };
};
export declare type FormDefinitionSectionalElement = FormDefinitionHeadingElement | FormDefinitionTextElement | FormDefinitionDividerElement;
export declare type FormDefinitionElement = FormDefinitionInputElement | FormDefinitionSectionalElement | FormDefinitionButtonElement;
export declare type StorageAccessLevel = 'public' | 'protected' | 'private';
export {};
//# sourceMappingURL=form-definition-element.d.ts.map