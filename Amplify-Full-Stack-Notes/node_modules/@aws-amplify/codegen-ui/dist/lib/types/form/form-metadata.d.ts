import { DataFieldDataType, GenericDataRelationshipType } from '../data';
import { FieldValidationConfiguration } from './form-validation';
import { StudioFormValueMappings } from './input-config';
import { FormStyleConfig, LabelDecorator, StudioFormStyle } from './style';
/**
 * Form Action type definition
 */
export declare type StudioFormActionType = 'create' | 'update';
export declare type StudioDataSourceType = 'DataStore' | 'Custom';
/**
 * Data type definition for StudioForm
 */
export declare type StudioFormDataType = {
    dataSourceType: StudioDataSourceType;
    dataTypeName: string;
};
export declare type FieldConfigMetadata = {
    validationRules: FieldValidationConfiguration[];
    dataType?: DataFieldDataType;
    relationship?: GenericDataRelationshipType;
    sanitizedFieldName?: string;
    isArray?: boolean;
    componentType: string;
    studioFormComponentType?: string;
    valueMappings?: StudioFormValueMappings;
};
export declare type FormMetadata = {
    id?: string;
    formActionType: StudioFormActionType;
    dataType: StudioFormDataType;
    name: string;
    fieldConfigs: Record<string, FieldConfigMetadata>;
    layoutConfigs: Record<keyof Omit<StudioFormStyle, 'labelDecorator'>, FormStyleConfig>;
    labelDecorator?: LabelDecorator;
};
//# sourceMappingURL=form-metadata.d.ts.map