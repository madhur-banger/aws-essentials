import { FrameworkOutputManager } from './framework-output-manager';
import { StudioTemplateRenderer } from './studio-template-renderer';
import { RenderTextComponentResponse } from './render-component-response';
/**
 * This class is used to wrap the created of renderers due to each renderer
 * only being used for one component.
 */
export declare class StudioTemplateRendererFactory<TSource, TStudioType, TOutputManager extends FrameworkOutputManager<TSource>, TRenderOutput extends RenderTextComponentResponse, TRenderer extends StudioTemplateRenderer<TSource, TStudioType, TOutputManager, TRenderOutput>> {
    private renderer;
    constructor(renderer: (component: TStudioType) => TRenderer);
    buildRenderer(component: TStudioType): TRenderer;
}
//# sourceMappingURL=template-renderer-factory.d.ts.map