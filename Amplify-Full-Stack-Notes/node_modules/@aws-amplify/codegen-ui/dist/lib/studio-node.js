"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StudioNode = void 0;
class StudioNode {
    constructor(component, parent) {
        this.component = component;
        this.parent = parent;
    }
    isRoot() {
        return this.parent === undefined;
    }
    getComponentPathToRoot() {
        if (this.parent !== undefined) {
            return [this].concat(this.parent.getComponentPathToRoot());
        }
        return [this];
    }
    /**
     * Return true if any ancestor node of the current node has type `componentType`.
     */
    hasAncestorOfType(componentType) {
        const ancestorComponentTypes = this.getComponentPathToRoot().map((node) => node.component.componentType);
        // We don't want to check if the current node has type, so shift that element out.
        ancestorComponentTypes.shift();
        return ancestorComponentTypes.some((ancestorComponentType) => ancestorComponentType === componentType);
    }
}
exports.StudioNode = StudioNode;
//# sourceMappingURL=studio-node.js.map