"use strict";
/*
  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapElements = void 0;
const form_field_1 = require("./form-field");
const sectional_element_1 = require("./sectional-element");
const errors_1 = require("../../errors");
/**
 * Impure function that maps element to the form definition
 */
function mapElements({ formDefinition, modelFieldsConfigs, form, }) {
    formDefinition.elementMatrix.forEach((row) => {
        row.forEach((elementName) => {
            if (form.fields[elementName]) {
                (0, form_field_1.mapFormFieldConfig)({ name: elementName, config: form.fields[elementName] }, formDefinition, modelFieldsConfigs);
            }
            else if (modelFieldsConfigs[elementName]) {
                (0, form_field_1.mapFormFieldConfig)({ name: elementName, config: modelFieldsConfigs[elementName] }, formDefinition, {});
            }
            else if (form.sectionalElements[elementName]) {
                (0, sectional_element_1.mapSectionalElement)({ name: elementName, config: form.sectionalElements[elementName] }, formDefinition);
            }
            else {
                throw new errors_1.InternalError(`${elementName} could not be found`);
            }
        });
    });
}
exports.mapElements = mapElements;
//# sourceMappingURL=map-element.js.map