/**
 * Lambda runtime environment variables and their descriptions.
 * See https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime
 */
export const staticEnvironmentVariables = {
    // reserved environment variables
    _HANDLER: 'The handler location configured on the function.',
    _X_AMZN_TRACE_ID: 'The X-Ray tracing header. This environment variable changes with each invocation.',
    AWS_DEFAULT_REGION: 'The default AWS Region where the Lambda function is executed.',
    AWS_REGION: 'The AWS Region where the Lambda function is executed. If defined, this value overrides the AWS_DEFAULT_REGION.',
    AWS_EXECUTION_ENV: 'The runtime identifier, prefixed by AWS_Lambda_ (for example, AWS_Lambda_java8).',
    AWS_LAMBDA_FUNCTION_NAME: 'The name of the function.',
    AWS_LAMBDA_FUNCTION_MEMORY_SIZE: 'The amount of memory available to the function in MB.',
    AWS_LAMBDA_FUNCTION_VERSION: 'The version of the function being executed.',
    AWS_LAMBDA_INITIALIZATION_TYPE: 'The initialization type of the function, which is on-demand, provisioned-concurrency, or snap-start.',
    AWS_LAMBDA_LOG_GROUP_NAME: 'The name of the Amazon CloudWatch Logs group for the function.',
    AWS_LAMBDA_LOG_STREAM_NAME: 'The name of the Amazon CloudWatch Logs stream for the function.',
    AWS_ACCESS_KEY: `AWS access key.`,
    AWS_ACCESS_KEY_ID: `AWS access key ID.`,
    AWS_SECRET_ACCESS_KEY: `AWS secret access key.`,
    AWS_SESSION_TOKEN: `AWS Session token.`,
    AWS_LAMBDA_RUNTIME_API: 'The host and port of the runtime API.',
    LAMBDA_TASK_ROOT: 'The path to your Lambda function code.',
    LAMBDA_RUNTIME_DIR: 'The path to runtime libraries.',
    // unreserved environment variables
    LANG: 'The locale of the runtime.',
    PATH: 'The execution path.',
    LD_LIBRARY_PATH: 'The system library path.',
    NODE_PATH: 'The Node.js library path.',
    AWS_XRAY_CONTEXT_MISSING: 'For X-Ray tracing, Lambda sets this to LOG_ERROR to avoid throwing runtime errors from the X-Ray SDK.',
    AWS_XRAY_DAEMON_ADDRESS: 'For X-Ray tracing, the IP address and port of the X-Ray daemon.',
    TZ: `The environment's time zone.`,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljX2Vudl90eXBlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9zdGF0aWNfZW52X3R5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLDBCQUEwQixHQUEyQjtJQUNoRSxpQ0FBaUM7SUFDakMsUUFBUSxFQUFFLGtEQUFrRDtJQUM1RCxnQkFBZ0IsRUFDZCxtRkFBbUY7SUFDckYsa0JBQWtCLEVBQ2hCLCtEQUErRDtJQUNqRSxVQUFVLEVBQ1IsZ0hBQWdIO0lBQ2xILGlCQUFpQixFQUNmLGtGQUFrRjtJQUNwRix3QkFBd0IsRUFBRSwyQkFBMkI7SUFDckQsK0JBQStCLEVBQzdCLHVEQUF1RDtJQUN6RCwyQkFBMkIsRUFBRSw2Q0FBNkM7SUFDMUUsOEJBQThCLEVBQzVCLHNHQUFzRztJQUN4Ryx5QkFBeUIsRUFDdkIsZ0VBQWdFO0lBQ2xFLDBCQUEwQixFQUN4QixpRUFBaUU7SUFDbkUsY0FBYyxFQUFFLGlCQUFpQjtJQUNqQyxpQkFBaUIsRUFBRSxvQkFBb0I7SUFDdkMscUJBQXFCLEVBQUUsd0JBQXdCO0lBQy9DLGlCQUFpQixFQUFFLG9CQUFvQjtJQUN2QyxzQkFBc0IsRUFBRSx1Q0FBdUM7SUFDL0QsZ0JBQWdCLEVBQUUsd0NBQXdDO0lBQzFELGtCQUFrQixFQUFFLGdDQUFnQztJQUNwRCxtQ0FBbUM7SUFDbkMsSUFBSSxFQUFFLDRCQUE0QjtJQUNsQyxJQUFJLEVBQUUscUJBQXFCO0lBQzNCLGVBQWUsRUFBRSwwQkFBMEI7SUFDM0MsU0FBUyxFQUFFLDJCQUEyQjtJQUN0Qyx3QkFBd0IsRUFDdEIsdUdBQXVHO0lBQ3pHLHVCQUF1QixFQUNyQixpRUFBaUU7SUFDbkUsRUFBRSxFQUFFLDhCQUE4QjtDQUNuQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMYW1iZGEgcnVudGltZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYW5kIHRoZWlyIGRlc2NyaXB0aW9ucy5cbiAqIFNlZSBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vbGFtYmRhL2xhdGVzdC9kZy9jb25maWd1cmF0aW9uLWVudnZhcnMuaHRtbCNjb25maWd1cmF0aW9uLWVudnZhcnMtcnVudGltZVxuICovXG5leHBvcnQgY29uc3Qgc3RhdGljRW52aXJvbm1lbnRWYXJpYWJsZXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gIC8vIHJlc2VydmVkIGVudmlyb25tZW50IHZhcmlhYmxlc1xuICBfSEFORExFUjogJ1RoZSBoYW5kbGVyIGxvY2F0aW9uIGNvbmZpZ3VyZWQgb24gdGhlIGZ1bmN0aW9uLicsXG4gIF9YX0FNWk5fVFJBQ0VfSUQ6XG4gICAgJ1RoZSBYLVJheSB0cmFjaW5nIGhlYWRlci4gVGhpcyBlbnZpcm9ubWVudCB2YXJpYWJsZSBjaGFuZ2VzIHdpdGggZWFjaCBpbnZvY2F0aW9uLicsXG4gIEFXU19ERUZBVUxUX1JFR0lPTjpcbiAgICAnVGhlIGRlZmF1bHQgQVdTIFJlZ2lvbiB3aGVyZSB0aGUgTGFtYmRhIGZ1bmN0aW9uIGlzIGV4ZWN1dGVkLicsXG4gIEFXU19SRUdJT046XG4gICAgJ1RoZSBBV1MgUmVnaW9uIHdoZXJlIHRoZSBMYW1iZGEgZnVuY3Rpb24gaXMgZXhlY3V0ZWQuIElmIGRlZmluZWQsIHRoaXMgdmFsdWUgb3ZlcnJpZGVzIHRoZSBBV1NfREVGQVVMVF9SRUdJT04uJyxcbiAgQVdTX0VYRUNVVElPTl9FTlY6XG4gICAgJ1RoZSBydW50aW1lIGlkZW50aWZpZXIsIHByZWZpeGVkIGJ5IEFXU19MYW1iZGFfIChmb3IgZXhhbXBsZSwgQVdTX0xhbWJkYV9qYXZhOCkuJyxcbiAgQVdTX0xBTUJEQV9GVU5DVElPTl9OQU1FOiAnVGhlIG5hbWUgb2YgdGhlIGZ1bmN0aW9uLicsXG4gIEFXU19MQU1CREFfRlVOQ1RJT05fTUVNT1JZX1NJWkU6XG4gICAgJ1RoZSBhbW91bnQgb2YgbWVtb3J5IGF2YWlsYWJsZSB0byB0aGUgZnVuY3Rpb24gaW4gTUIuJyxcbiAgQVdTX0xBTUJEQV9GVU5DVElPTl9WRVJTSU9OOiAnVGhlIHZlcnNpb24gb2YgdGhlIGZ1bmN0aW9uIGJlaW5nIGV4ZWN1dGVkLicsXG4gIEFXU19MQU1CREFfSU5JVElBTElaQVRJT05fVFlQRTpcbiAgICAnVGhlIGluaXRpYWxpemF0aW9uIHR5cGUgb2YgdGhlIGZ1bmN0aW9uLCB3aGljaCBpcyBvbi1kZW1hbmQsIHByb3Zpc2lvbmVkLWNvbmN1cnJlbmN5LCBvciBzbmFwLXN0YXJ0LicsXG4gIEFXU19MQU1CREFfTE9HX0dST1VQX05BTUU6XG4gICAgJ1RoZSBuYW1lIG9mIHRoZSBBbWF6b24gQ2xvdWRXYXRjaCBMb2dzIGdyb3VwIGZvciB0aGUgZnVuY3Rpb24uJyxcbiAgQVdTX0xBTUJEQV9MT0dfU1RSRUFNX05BTUU6XG4gICAgJ1RoZSBuYW1lIG9mIHRoZSBBbWF6b24gQ2xvdWRXYXRjaCBMb2dzIHN0cmVhbSBmb3IgdGhlIGZ1bmN0aW9uLicsXG4gIEFXU19BQ0NFU1NfS0VZOiBgQVdTIGFjY2VzcyBrZXkuYCxcbiAgQVdTX0FDQ0VTU19LRVlfSUQ6IGBBV1MgYWNjZXNzIGtleSBJRC5gLFxuICBBV1NfU0VDUkVUX0FDQ0VTU19LRVk6IGBBV1Mgc2VjcmV0IGFjY2VzcyBrZXkuYCxcbiAgQVdTX1NFU1NJT05fVE9LRU46IGBBV1MgU2Vzc2lvbiB0b2tlbi5gLFxuICBBV1NfTEFNQkRBX1JVTlRJTUVfQVBJOiAnVGhlIGhvc3QgYW5kIHBvcnQgb2YgdGhlIHJ1bnRpbWUgQVBJLicsXG4gIExBTUJEQV9UQVNLX1JPT1Q6ICdUaGUgcGF0aCB0byB5b3VyIExhbWJkYSBmdW5jdGlvbiBjb2RlLicsXG4gIExBTUJEQV9SVU5USU1FX0RJUjogJ1RoZSBwYXRoIHRvIHJ1bnRpbWUgbGlicmFyaWVzLicsXG4gIC8vIHVucmVzZXJ2ZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzXG4gIExBTkc6ICdUaGUgbG9jYWxlIG9mIHRoZSBydW50aW1lLicsXG4gIFBBVEg6ICdUaGUgZXhlY3V0aW9uIHBhdGguJyxcbiAgTERfTElCUkFSWV9QQVRIOiAnVGhlIHN5c3RlbSBsaWJyYXJ5IHBhdGguJyxcbiAgTk9ERV9QQVRIOiAnVGhlIE5vZGUuanMgbGlicmFyeSBwYXRoLicsXG4gIEFXU19YUkFZX0NPTlRFWFRfTUlTU0lORzpcbiAgICAnRm9yIFgtUmF5IHRyYWNpbmcsIExhbWJkYSBzZXRzIHRoaXMgdG8gTE9HX0VSUk9SIHRvIGF2b2lkIHRocm93aW5nIHJ1bnRpbWUgZXJyb3JzIGZyb20gdGhlIFgtUmF5IFNESy4nLFxuICBBV1NfWFJBWV9EQUVNT05fQUREUkVTUzpcbiAgICAnRm9yIFgtUmF5IHRyYWNpbmcsIHRoZSBJUCBhZGRyZXNzIGFuZCBwb3J0IG9mIHRoZSBYLVJheSBkYWVtb24uJyxcbiAgVFo6IGBUaGUgZW52aXJvbm1lbnQncyB0aW1lIHpvbmUuYCxcbn07XG4iXX0=