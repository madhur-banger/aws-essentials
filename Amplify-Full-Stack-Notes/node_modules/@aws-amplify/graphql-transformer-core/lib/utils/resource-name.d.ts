import { ModelDataSourceStrategySqlDbType, SQLLambdaModelDataSourceStrategy } from '@aws-amplify/graphql-transformer-interfaces';
import { Construct } from 'constructs';
export type SetResourceNameProps = {
    name: string;
    setOnDefaultChild?: boolean;
};
export declare const setResourceName: (scope: Construct, { name, setOnDefaultChild }: SetResourceNameProps) => void;
export declare const getResourceName: (scope: Construct) => string | undefined;
export interface SQLLambdaResourceNames {
    sqlLambdaAliasLogicalId: string;
    sqlLambdaAliasName: string;
    sqlLambdaDataSource: string;
    sqlLambdaExecutionRole: string;
    sqlLambdaLayerVersion: string;
    sqlLambdaExecutionRolePolicy: string;
    sqlLambdaFunction: string;
    sqlLayerVersionMapping: string;
    sqlSNSTopicArnMapping: string;
    sqlLayerVersionResolverCustomResource: string;
    sqlPatchingLambdaExecutionRole: string;
    sqlPatchingLambdaExecutionRolePolicy: string;
    sqlPatchingLambdaFunction: string;
    sqlPatchingSubscription: string;
    sqlPatchingTopic: string;
    sqlSNSTopicARNResolverCustomResource: string;
    sqlStack: string;
    sqlVpcEndpointPrefix: string;
}
export declare const getDefaultStrategyNameForDbType: (dbType: ModelDataSourceStrategySqlDbType) => string;
export declare const getResourceNamesForStrategy: (strategy: SQLLambdaModelDataSourceStrategy) => SQLLambdaResourceNames;
export declare const getResourceNamesForStrategyName: (strategyName: string) => SQLLambdaResourceNames;
//# sourceMappingURL=resource-name.d.ts.map