import * as iam from 'aws-cdk-lib/aws-iam';
import { TransformerContextProvider, TransformerSchemaVisitStepContextProvider, TransformerTransformSchemaStepContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { Construct } from 'constructs';
import { TransformerContext } from '../transformer-context';
import { SyncConfig, SyncConfigLambda } from '../config/transformer-config';
type DeltaSyncConfig = {
    DeltaSyncTableName: any;
    DeltaSyncTableTTL: number;
    BaseTableTTL: number;
};
export declare function createSyncTable(context: TransformerContext): void;
export declare function syncDataSourceConfig(): DeltaSyncConfig;
export declare function validateResolverConfigForType(ctx: TransformerSchemaVisitStepContextProvider, typeName: string): void;
export declare function getSyncConfig(ctx: TransformerTransformSchemaStepContextProvider, typeName: string): SyncConfig | undefined;
export declare function isLambdaSyncConfig(syncConfig: SyncConfig): syncConfig is SyncConfigLambda;
export declare function createSyncLambdaIAMPolicy(context: TransformerContextProvider, scope: Construct, name: string, region?: string): iam.Policy;
export {};
//# sourceMappingURL=sync-utils.d.ts.map