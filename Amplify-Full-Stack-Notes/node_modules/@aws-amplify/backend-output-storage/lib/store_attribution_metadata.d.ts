/// <reference types="node" />
import { Stack } from 'aws-cdk-lib';
import * as _os from 'os';
import { PackageJsonReader } from '@aws-amplify/platform-core';
/**
 * Stores BI metrics information in stack descriptions
 */
export declare class AttributionMetadataStorage {
    private readonly os;
    private readonly packageJsonReader;
    /**
     * Constructor with props for injecting test mocks
     */
    constructor(os?: typeof _os, packageJsonReader?: PackageJsonReader);
    /**
     * Stores an attribution metadata string in the stack description of the provided stack
     * Does nothing if the stack already has a non-empty description
     */
    storeAttributionMetadata: (stack: Stack, stackType: string, libraryPackageJsonAbsolutePath: string, additionalMetadata?: Record<string, string>) => void;
    private getAttributionMetadata;
    private getDeploymentEngineType;
    private getPlatform;
}
export type AttributionMetadata = {
    /**
     * The OS that synthesized this stack
     */
    createdOn: Platform;
    /**
     * The synthesis engine that generated this stack
     */
    createdBy: DeploymentEngineType;
    /**
     * The library version that created this metadata
     */
    createdWith: string;
    /**
     * String that identifies what type of stack this metadata is set on
     */
    stackType: string;
    /**
     * Field where constructs can put additional information for BI tracking
     */
    metadata: Record<string, string>;
};
export type DeploymentEngineType = 'AmplifyPipelineDeploy' | 'AmplifySandbox' | 'AmplifyCDK';
export type Platform = 'Mac' | 'Windows' | 'Linux' | 'Other';
//# sourceMappingURL=store_attribution_metadata.d.ts.map