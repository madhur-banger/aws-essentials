"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTypescriptDataSchema = void 0;
const ts = __importStar(require("typescript"));
const helpers_1 = require("./helpers");
const file = ts.createSourceFile('schema.ts', '', ts.ScriptTarget.ESNext, false, ts.ScriptKind.TS);
const printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });
const generateTypescriptDataSchema = (schema, config) => {
    var _a, _b;
    const containsSecret = !!(((_a = config === null || config === void 0 ? void 0 : config.secretNames) === null || _a === void 0 ? void 0 : _a.connectionUri) || ((_b = config === null || config === void 0 ? void 0 : config.secretNames) === null || _b === void 0 ? void 0 : _b.sslCertificate));
    const result = printer.printList(ts.ListFormat.MultiLine, ts.factory.createNodeArray([
        ...(0, helpers_1.createImportExpression)(containsSecret),
        ts.factory.createIdentifier('\n'),
        (0, helpers_1.createSchema)(schema, config),
    ]), file);
    return result;
};
exports.generateTypescriptDataSchema = generateTypescriptDataSchema;
//# sourceMappingURL=generate-ts-schema.js.map