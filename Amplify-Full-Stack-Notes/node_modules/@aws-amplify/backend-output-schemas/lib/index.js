"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.unifiedBackendOutputSchema = exports.aiConversationOutputKey = exports.functionOutputKey = exports.storageOutputKey = exports.graphqlOutputKey = exports.authOutputKey = exports.customOutputKey = exports.platformOutputKey = void 0;
const zod_1 = require("zod");
const index_js_1 = require("./auth/index.js");
const index_js_2 = require("./graphql/index.js");
const index_js_3 = require("./storage/index.js");
const index_js_4 = require("./stack/index.js");
const custom_1 = require("./custom");
const index_js_5 = require("./function/index.js");
const index_js_6 = require("./ai/conversation/index.js");
/**
 * The auth, graphql and storage exports here are duplicated from the submodule exports in the package.json file
 * This is because these types need to be consumed in CDK Constructs that may be JSII classes. JSII only supports
 * CommonJS modules which can't interpret submodule exports
 */
/**
 * ---------- Platform exports ----------
 */
exports.platformOutputKey = 'AWS::Amplify::Platform';
__exportStar(require("./platform/index.js"), exports);
/**
 * ---------- Custom exports ----------
 */
exports.customOutputKey = 'AWS::Amplify::Custom';
__exportStar(require("./custom/index.js"), exports);
/**
 * ---------- Auth exports ----------
 */
/**
 * re-export the auth output schema
 */
__exportStar(require("./auth/index.js"), exports);
/**
 * Expected key that auth output is stored under
 */
exports.authOutputKey = 'AWS::Amplify::Auth';
/**
 * ---------- GraphQL exports ----------
 */
/**
 * re-export the graphql output schema
 */
__exportStar(require("./graphql/index.js"), exports);
/**
 * Expected key that graphql output is stored under
 */
exports.graphqlOutputKey = 'AWS::Amplify::GraphQL';
/**
 * ---------- Storage exports ----------
 */
/**
 * re-export the storage output schema
 */
__exportStar(require("./storage/index.js"), exports);
/**
 * Expected key that storage output is stored under
 */
exports.storageOutputKey = 'AWS::Amplify::Storage';
/**
 * ---------- Function exports ----------
 */
/**
 * re-export the function output schema
 */
__exportStar(require("./function/index.js"), exports);
/**
 * Expected key that function output is stored under
 */
exports.functionOutputKey = 'AWS::Amplify::Function';
/**
 * ---------- AI conversation exports ----------
 */
/**
 * re-export the AI conversation output schema
 */
__exportStar(require("./ai/conversation/index.js"), exports);
/**
 * Expected key that AI conversation output is stored under
 */
exports.aiConversationOutputKey = 'AWS::Amplify::AI::Conversation';
/**
 * ---------- Unified exports ----------
 */
/**
 * Defines the unified expected shape of Amplify backend output.
 * As new constructs are added that need to contribute backend output, entries should be added here so that client config generation is aware of these outputs
 */
exports.unifiedBackendOutputSchema = zod_1.z.object({
    [exports.platformOutputKey]: index_js_4.versionedStackOutputSchema.optional(),
    [exports.authOutputKey]: index_js_1.versionedAuthOutputSchema.optional(),
    [exports.graphqlOutputKey]: index_js_2.versionedGraphqlOutputSchema.optional(),
    [exports.storageOutputKey]: index_js_3.versionedStorageOutputSchema.optional(),
    [exports.customOutputKey]: custom_1.versionedCustomOutputSchema.optional(),
    [exports.functionOutputKey]: index_js_5.versionedFunctionOutputSchema.optional(),
    [exports.aiConversationOutputKey]: index_js_6.versionedAIConversationOutputSchema.optional(),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2QkFBd0I7QUFDeEIsOENBQTREO0FBQzVELGlEQUFrRTtBQUNsRSxpREFBa0U7QUFDbEUsK0NBQThEO0FBQzlELHFDQUF1RDtBQUN2RCxrREFBb0U7QUFDcEUseURBQWlGO0FBRWpGOzs7O0dBSUc7QUFFSDs7R0FFRztBQUVVLFFBQUEsaUJBQWlCLEdBQUcsd0JBQXdCLENBQUM7QUFFMUQsc0RBQW9DO0FBRXBDOztHQUVHO0FBRVUsUUFBQSxlQUFlLEdBQUcsc0JBQXNCLENBQUM7QUFFdEQsb0RBQWtDO0FBRWxDOztHQUVHO0FBRUg7O0dBRUc7QUFDSCxrREFBZ0M7QUFFaEM7O0dBRUc7QUFDVSxRQUFBLGFBQWEsR0FBRyxvQkFBb0IsQ0FBQztBQUVsRDs7R0FFRztBQUVIOztHQUVHO0FBQ0gscURBQW1DO0FBRW5DOztHQUVHO0FBQ1UsUUFBQSxnQkFBZ0IsR0FBRyx1QkFBdUIsQ0FBQztBQUV4RDs7R0FFRztBQUVIOztHQUVHO0FBQ0gscURBQW1DO0FBRW5DOztHQUVHO0FBQ1UsUUFBQSxnQkFBZ0IsR0FBRyx1QkFBdUIsQ0FBQztBQUV4RDs7R0FFRztBQUVIOztHQUVHO0FBQ0gsc0RBQW9DO0FBRXBDOztHQUVHO0FBQ1UsUUFBQSxpQkFBaUIsR0FBRyx3QkFBd0IsQ0FBQztBQUUxRDs7R0FFRztBQUVIOztHQUVHO0FBQ0gsNkRBQTJDO0FBRTNDOztHQUVHO0FBQ1UsUUFBQSx1QkFBdUIsR0FBRyxnQ0FBZ0MsQ0FBQztBQUV4RTs7R0FFRztBQUVIOzs7R0FHRztBQUNVLFFBQUEsMEJBQTBCLEdBQUcsT0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNqRCxDQUFDLHlCQUFpQixDQUFDLEVBQUUscUNBQTBCLENBQUMsUUFBUSxFQUFFO0lBQzFELENBQUMscUJBQWEsQ0FBQyxFQUFFLG9DQUF5QixDQUFDLFFBQVEsRUFBRTtJQUNyRCxDQUFDLHdCQUFnQixDQUFDLEVBQUUsdUNBQTRCLENBQUMsUUFBUSxFQUFFO0lBQzNELENBQUMsd0JBQWdCLENBQUMsRUFBRSx1Q0FBNEIsQ0FBQyxRQUFRLEVBQUU7SUFDM0QsQ0FBQyx1QkFBZSxDQUFDLEVBQUUsb0NBQTJCLENBQUMsUUFBUSxFQUFFO0lBQ3pELENBQUMseUJBQWlCLENBQUMsRUFBRSx3Q0FBNkIsQ0FBQyxRQUFRLEVBQUU7SUFDN0QsQ0FBQywrQkFBdUIsQ0FBQyxFQUFFLDhDQUFtQyxDQUFDLFFBQVEsRUFBRTtDQUMxRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcbmltcG9ydCB7IHZlcnNpb25lZEF1dGhPdXRwdXRTY2hlbWEgfSBmcm9tICcuL2F1dGgvaW5kZXguanMnO1xuaW1wb3J0IHsgdmVyc2lvbmVkR3JhcGhxbE91dHB1dFNjaGVtYSB9IGZyb20gJy4vZ3JhcGhxbC9pbmRleC5qcyc7XG5pbXBvcnQgeyB2ZXJzaW9uZWRTdG9yYWdlT3V0cHV0U2NoZW1hIH0gZnJvbSAnLi9zdG9yYWdlL2luZGV4LmpzJztcbmltcG9ydCB7IHZlcnNpb25lZFN0YWNrT3V0cHV0U2NoZW1hIH0gZnJvbSAnLi9zdGFjay9pbmRleC5qcyc7XG5pbXBvcnQgeyB2ZXJzaW9uZWRDdXN0b21PdXRwdXRTY2hlbWEgfSBmcm9tICcuL2N1c3RvbSc7XG5pbXBvcnQgeyB2ZXJzaW9uZWRGdW5jdGlvbk91dHB1dFNjaGVtYSB9IGZyb20gJy4vZnVuY3Rpb24vaW5kZXguanMnO1xuaW1wb3J0IHsgdmVyc2lvbmVkQUlDb252ZXJzYXRpb25PdXRwdXRTY2hlbWEgfSBmcm9tICcuL2FpL2NvbnZlcnNhdGlvbi9pbmRleC5qcyc7XG5cbi8qKlxuICogVGhlIGF1dGgsIGdyYXBocWwgYW5kIHN0b3JhZ2UgZXhwb3J0cyBoZXJlIGFyZSBkdXBsaWNhdGVkIGZyb20gdGhlIHN1Ym1vZHVsZSBleHBvcnRzIGluIHRoZSBwYWNrYWdlLmpzb24gZmlsZVxuICogVGhpcyBpcyBiZWNhdXNlIHRoZXNlIHR5cGVzIG5lZWQgdG8gYmUgY29uc3VtZWQgaW4gQ0RLIENvbnN0cnVjdHMgdGhhdCBtYXkgYmUgSlNJSSBjbGFzc2VzLiBKU0lJIG9ubHkgc3VwcG9ydHNcbiAqIENvbW1vbkpTIG1vZHVsZXMgd2hpY2ggY2FuJ3QgaW50ZXJwcmV0IHN1Ym1vZHVsZSBleHBvcnRzXG4gKi9cblxuLyoqXG4gKiAtLS0tLS0tLS0tIFBsYXRmb3JtIGV4cG9ydHMgLS0tLS0tLS0tLVxuICovXG5cbmV4cG9ydCBjb25zdCBwbGF0Zm9ybU91dHB1dEtleSA9ICdBV1M6OkFtcGxpZnk6OlBsYXRmb3JtJztcblxuZXhwb3J0ICogZnJvbSAnLi9wbGF0Zm9ybS9pbmRleC5qcyc7XG5cbi8qKlxuICogLS0tLS0tLS0tLSBDdXN0b20gZXhwb3J0cyAtLS0tLS0tLS0tXG4gKi9cblxuZXhwb3J0IGNvbnN0IGN1c3RvbU91dHB1dEtleSA9ICdBV1M6OkFtcGxpZnk6OkN1c3RvbSc7XG5cbmV4cG9ydCAqIGZyb20gJy4vY3VzdG9tL2luZGV4LmpzJztcblxuLyoqXG4gKiAtLS0tLS0tLS0tIEF1dGggZXhwb3J0cyAtLS0tLS0tLS0tXG4gKi9cblxuLyoqXG4gKiByZS1leHBvcnQgdGhlIGF1dGggb3V0cHV0IHNjaGVtYVxuICovXG5leHBvcnQgKiBmcm9tICcuL2F1dGgvaW5kZXguanMnO1xuXG4vKipcbiAqIEV4cGVjdGVkIGtleSB0aGF0IGF1dGggb3V0cHV0IGlzIHN0b3JlZCB1bmRlclxuICovXG5leHBvcnQgY29uc3QgYXV0aE91dHB1dEtleSA9ICdBV1M6OkFtcGxpZnk6OkF1dGgnO1xuXG4vKipcbiAqIC0tLS0tLS0tLS0gR3JhcGhRTCBleHBvcnRzIC0tLS0tLS0tLS1cbiAqL1xuXG4vKipcbiAqIHJlLWV4cG9ydCB0aGUgZ3JhcGhxbCBvdXRwdXQgc2NoZW1hXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vZ3JhcGhxbC9pbmRleC5qcyc7XG5cbi8qKlxuICogRXhwZWN0ZWQga2V5IHRoYXQgZ3JhcGhxbCBvdXRwdXQgaXMgc3RvcmVkIHVuZGVyXG4gKi9cbmV4cG9ydCBjb25zdCBncmFwaHFsT3V0cHV0S2V5ID0gJ0FXUzo6QW1wbGlmeTo6R3JhcGhRTCc7XG5cbi8qKlxuICogLS0tLS0tLS0tLSBTdG9yYWdlIGV4cG9ydHMgLS0tLS0tLS0tLVxuICovXG5cbi8qKlxuICogcmUtZXhwb3J0IHRoZSBzdG9yYWdlIG91dHB1dCBzY2hlbWFcbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9zdG9yYWdlL2luZGV4LmpzJztcblxuLyoqXG4gKiBFeHBlY3RlZCBrZXkgdGhhdCBzdG9yYWdlIG91dHB1dCBpcyBzdG9yZWQgdW5kZXJcbiAqL1xuZXhwb3J0IGNvbnN0IHN0b3JhZ2VPdXRwdXRLZXkgPSAnQVdTOjpBbXBsaWZ5OjpTdG9yYWdlJztcblxuLyoqXG4gKiAtLS0tLS0tLS0tIEZ1bmN0aW9uIGV4cG9ydHMgLS0tLS0tLS0tLVxuICovXG5cbi8qKlxuICogcmUtZXhwb3J0IHRoZSBmdW5jdGlvbiBvdXRwdXQgc2NoZW1hXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vZnVuY3Rpb24vaW5kZXguanMnO1xuXG4vKipcbiAqIEV4cGVjdGVkIGtleSB0aGF0IGZ1bmN0aW9uIG91dHB1dCBpcyBzdG9yZWQgdW5kZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGZ1bmN0aW9uT3V0cHV0S2V5ID0gJ0FXUzo6QW1wbGlmeTo6RnVuY3Rpb24nO1xuXG4vKipcbiAqIC0tLS0tLS0tLS0gQUkgY29udmVyc2F0aW9uIGV4cG9ydHMgLS0tLS0tLS0tLVxuICovXG5cbi8qKlxuICogcmUtZXhwb3J0IHRoZSBBSSBjb252ZXJzYXRpb24gb3V0cHV0IHNjaGVtYVxuICovXG5leHBvcnQgKiBmcm9tICcuL2FpL2NvbnZlcnNhdGlvbi9pbmRleC5qcyc7XG5cbi8qKlxuICogRXhwZWN0ZWQga2V5IHRoYXQgQUkgY29udmVyc2F0aW9uIG91dHB1dCBpcyBzdG9yZWQgdW5kZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGFpQ29udmVyc2F0aW9uT3V0cHV0S2V5ID0gJ0FXUzo6QW1wbGlmeTo6QUk6OkNvbnZlcnNhdGlvbic7XG5cbi8qKlxuICogLS0tLS0tLS0tLSBVbmlmaWVkIGV4cG9ydHMgLS0tLS0tLS0tLVxuICovXG5cbi8qKlxuICogRGVmaW5lcyB0aGUgdW5pZmllZCBleHBlY3RlZCBzaGFwZSBvZiBBbXBsaWZ5IGJhY2tlbmQgb3V0cHV0LlxuICogQXMgbmV3IGNvbnN0cnVjdHMgYXJlIGFkZGVkIHRoYXQgbmVlZCB0byBjb250cmlidXRlIGJhY2tlbmQgb3V0cHV0LCBlbnRyaWVzIHNob3VsZCBiZSBhZGRlZCBoZXJlIHNvIHRoYXQgY2xpZW50IGNvbmZpZyBnZW5lcmF0aW9uIGlzIGF3YXJlIG9mIHRoZXNlIG91dHB1dHNcbiAqL1xuZXhwb3J0IGNvbnN0IHVuaWZpZWRCYWNrZW5kT3V0cHV0U2NoZW1hID0gei5vYmplY3Qoe1xuICBbcGxhdGZvcm1PdXRwdXRLZXldOiB2ZXJzaW9uZWRTdGFja091dHB1dFNjaGVtYS5vcHRpb25hbCgpLFxuICBbYXV0aE91dHB1dEtleV06IHZlcnNpb25lZEF1dGhPdXRwdXRTY2hlbWEub3B0aW9uYWwoKSxcbiAgW2dyYXBocWxPdXRwdXRLZXldOiB2ZXJzaW9uZWRHcmFwaHFsT3V0cHV0U2NoZW1hLm9wdGlvbmFsKCksXG4gIFtzdG9yYWdlT3V0cHV0S2V5XTogdmVyc2lvbmVkU3RvcmFnZU91dHB1dFNjaGVtYS5vcHRpb25hbCgpLFxuICBbY3VzdG9tT3V0cHV0S2V5XTogdmVyc2lvbmVkQ3VzdG9tT3V0cHV0U2NoZW1hLm9wdGlvbmFsKCksXG4gIFtmdW5jdGlvbk91dHB1dEtleV06IHZlcnNpb25lZEZ1bmN0aW9uT3V0cHV0U2NoZW1hLm9wdGlvbmFsKCksXG4gIFthaUNvbnZlcnNhdGlvbk91dHB1dEtleV06IHZlcnNpb25lZEFJQ29udmVyc2F0aW9uT3V0cHV0U2NoZW1hLm9wdGlvbmFsKCksXG59KTtcbi8qKlxuICogVGhpcyB0eXBlIGlzIGEgc3Vic2V0IG9mIHRoZSBCYWNrZW5kT3V0cHV0IHR5cGUgdGhhdCBpcyBleHBvc2VkIGJ5IHRoZSBwbGF0Zm9ybS5cbiAqIEl0IHJlcHJlc2VudHMgQmFja2VuZE91dHB1dCB0aGF0IGhhcyBiZWVuIHZhbGlkYXRlZCBhZ2FpbnN0IHRoZSBzY2hlbWEgb2Yga25vd24gb3V0cHV0IHZhbHVlc1xuICovXG5leHBvcnQgdHlwZSBVbmlmaWVkQmFja2VuZE91dHB1dCA9IHouaW5mZXI8dHlwZW9mIHVuaWZpZWRCYWNrZW5kT3V0cHV0U2NoZW1hPjtcbiJdfQ==