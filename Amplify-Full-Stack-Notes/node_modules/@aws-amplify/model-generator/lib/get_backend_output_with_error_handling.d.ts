import { BackendOutputClient, DeployedBackendIdentifier } from '@aws-amplify/deployed-backend-client';
/**
 * Common Error handling for BackendOutputClient.getOutput() in model-generator package.
 */
export declare const getBackendOutputWithErrorHandling: (backendOutputClient: BackendOutputClient, backendIdentifier: DeployedBackendIdentifier) => Promise<{
    "AWS::Amplify::Platform"?: {
        version: "1";
        payload: {
            deploymentType: string;
            region: string;
        };
    } | undefined;
    "AWS::Amplify::Custom"?: {
        version: "1";
        payload: {
            customOutputs: string;
        };
    } | undefined;
    "AWS::Amplify::Auth"?: {
        version: "1";
        payload: {
            authRegion: string;
            userPoolId: string;
            webClientId: string;
            identityPoolId: string;
            allowUnauthenticatedIdentities?: string | undefined;
            usernameAttributes?: string | undefined;
            signupAttributes?: string | undefined;
            passwordPolicyMinLength?: string | undefined;
            passwordPolicyRequirements?: string | undefined;
            mfaConfiguration?: string | undefined;
            mfaTypes?: string | undefined;
            verificationMechanisms?: string | undefined;
            socialProviders?: string | undefined;
            oauthCognitoDomain?: string | undefined;
            oauthScope?: string | undefined;
            oauthRedirectSignIn?: string | undefined;
            oauthRedirectSignOut?: string | undefined;
            oauthClientId?: string | undefined;
            oauthResponseType?: string | undefined;
        };
    } | undefined;
    "AWS::Amplify::GraphQL"?: {
        version: "1";
        payload: {
            awsAppsyncRegion: string;
            awsAppsyncApiEndpoint: string;
            awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
            awsAppsyncApiId: string;
            amplifyApiModelSchemaS3Uri: string;
            awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
            awsAppsyncConflictResolutionMode?: string | undefined;
            awsAppsyncApiKey?: string | undefined;
        };
    } | undefined;
    "AWS::Amplify::Storage"?: {
        version: "1";
        payload: {
            bucketName: string;
            storageRegion: string;
            buckets?: string | undefined;
        };
    } | undefined;
    "AWS::Amplify::Function"?: {
        version: "1";
        payload: {
            definedFunctions: string;
        };
    } | undefined;
}>;
//# sourceMappingURL=get_backend_output_with_error_handling.d.ts.map