import { GenerationResult, GraphqlDocumentGenerator, GraphqlModelsGenerator, GraphqlTypesGenerator } from './model_generator.js';
import { DeployedBackendIdentifier } from '@aws-amplify/deployed-backend-client';
import { AWSClientProvider } from '@aws-amplify/plugin-types';
import { AmplifyClient } from '@aws-sdk/client-amplify';
import { CloudFormationClient } from '@aws-sdk/client-cloudformation';
import { S3Client } from '@aws-sdk/client-s3';
export declare enum GenerateApiCodeFormat {
    MODELGEN = "modelgen",
    GRAPHQL_CODEGEN = "graphql-codegen",
    INTROSPECTION = "introspection"
}
export declare enum GenerateApiCodeModelTarget {
    JAVA = "java",
    SWIFT = "swift",
    JAVASCRIPT = "javascript",
    TYPESCRIPT = "typescript",
    DART = "dart"
}
export declare enum GenerateApiCodeStatementTarget {
    JAVASCRIPT = "javascript",
    GRAPHQL = "graphql",
    FLOW = "flow",
    TYPESCRIPT = "typescript",
    ANGULAR = "angular"
}
export declare enum GenerateApiCodeTypeTarget {
    JSON = "json",
    SWIFT = "swift",
    TYPESCRIPT = "typescript",
    FLOW = "flow",
    SCALA = "scala",
    FLOW_MODERN = "flow-modern",
    ANGULAR = "angular"
}
export type GenerateModelsOptions = {
    format: GenerateApiCodeFormat.MODELGEN;
    modelTarget: GenerateApiCodeModelTarget;
    generateIndexRules?: boolean;
    emitAuthProvider?: boolean;
    useExperimentalPipelinedTransformer?: boolean;
    transformerVersion?: number;
    respectPrimaryKeyAttributesOnConnectionField?: boolean;
    generateModelsForLazyLoadAndCustomSelectionSet?: boolean;
    addTimestampFields?: boolean;
    handleListNullabilityTransparently?: boolean;
};
export type GenerateGraphqlCodegenOptions = {
    format: GenerateApiCodeFormat.GRAPHQL_CODEGEN;
    statementTarget: GenerateApiCodeStatementTarget;
    maxDepth?: number;
    typeNameIntrospection?: boolean;
    typeTarget?: GenerateApiCodeTypeTarget;
    multipleSwiftFiles?: boolean;
};
export type GenerateIntrospectionOptions = {
    format: GenerateApiCodeFormat.INTROSPECTION;
};
export type GenerateOptions = GenerateGraphqlCodegenOptions | GenerateModelsOptions | GenerateIntrospectionOptions;
export type GenerateApiCodeProps = GenerateOptions & DeployedBackendIdentifier & {
    awsClientProvider: AWSClientProvider<{
        getAmplifyClient: AmplifyClient;
        getCloudFormationClient: CloudFormationClient;
        getS3Client: S3Client;
    }>;
};
/**
 * Generate api code using Api Code Generator with default generators.
 */
export declare const generateApiCode: (props: GenerateApiCodeProps) => Promise<GenerationResult>;
/**
 * Generator for Api Code resources.
 */
export declare class ApiCodeGenerator {
    private readonly graphqlDocumentGenerator;
    private readonly graphqlTypesGenerator;
    private readonly graphqlModelsGenerator;
    /**
     * Construct generator, passing in nested generators.
     * @param graphqlDocumentGenerator the graphql document generator
     * @param graphqlTypesGenerator the type generator
     * @param graphqlModelsGenerator the model object generator
     */
    constructor(graphqlDocumentGenerator: GraphqlDocumentGenerator, graphqlTypesGenerator: GraphqlTypesGenerator, graphqlModelsGenerator: GraphqlModelsGenerator);
    /**
     * Execute the generation.
     * @param props the required generate options.
     * @returns a promise with the generation results
     */
    generate(props: GenerateOptions): Promise<GenerationResult>;
    /**
     * Execute document, and optionally type generation with relevant targets, wiring through types into statements if possible.
     */
    private generateGraphqlCodegenApiCode;
    /**
     * Execute model generation with model target.
     */
    private generateModelgenApiCode;
    /**
     * Execute model generation with introspection target.
     */
    private generateIntrospectionApiCode;
}
//# sourceMappingURL=generate_api_code.d.ts.map