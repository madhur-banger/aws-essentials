export const schema = `
schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type ModelTodoConnection {
  items: [Todo]!
  nextToken: String
}

type Mutation {
  createTodo(condition: ModelTodoConditionInput, input: CreateTodoInput!): Todo
  deleteTodo(condition: ModelTodoConditionInput, input: DeleteTodoInput!): Todo
  updateTodo(condition: ModelTodoConditionInput, input: UpdateTodoInput!): Todo
}

type Query {
  getTodo(id: ID!): Todo
  listTodos(
    filter: ModelTodoFilterInput
    limit: Int
    nextToken: String
  ): ModelTodoConnection
}

type Subscription {
  onCreateTodo(filter: ModelSubscriptionTodoFilterInput): Todo
    @aws_subscribe(mutations: ["createTodo"])
  onDeleteTodo(filter: ModelSubscriptionTodoFilterInput): Todo
    @aws_subscribe(mutations: ["deleteTodo"])
  onUpdateTodo(filter: ModelSubscriptionTodoFilterInput): Todo
    @aws_subscribe(mutations: ["updateTodo"])
}

type Todo {
  createdAt: AWSDateTime!
  description: String
  id: ID!
  name: String!
  updatedAt: AWSDateTime!
}

enum ModelAttributeTypes {
  _null
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
}

enum ModelSortDirection {
  ASC
  DESC
}

input CreateTodoInput {
  description: String
  id: ID
  name: String!
}

input DeleteTodoInput {
  id: ID!
}

input ModelBooleanInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  eq: Boolean
  ne: Boolean
}

input ModelFloatInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input ModelIDInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input ModelIntInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelStringInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input ModelSubscriptionBooleanInput {
  eq: Boolean
  ne: Boolean
}

input ModelSubscriptionFloatInput {
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  in: [Float]
  le: Float
  lt: Float
  ne: Float
  notIn: [Float]
}

input ModelSubscriptionIDInput {
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  in: [ID]
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  notIn: [ID]
}

input ModelSubscriptionIntInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  in: [Int]
  le: Int
  lt: Int
  ne: Int
  notIn: [Int]
}

input ModelSubscriptionStringInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
  ne: String
  notContains: String
  notIn: [String]
}

input ModelSubscriptionTodoFilterInput {
  and: [ModelSubscriptionTodoFilterInput]
  description: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  or: [ModelSubscriptionTodoFilterInput]
}

input ModelTodoConditionInput {
  and: [ModelTodoConditionInput]
  description: ModelStringInput
  name: ModelStringInput
  not: ModelTodoConditionInput
  or: [ModelTodoConditionInput]
}

input ModelTodoFilterInput {
  and: [ModelTodoFilterInput]
  description: ModelStringInput
  id: ModelIDInput
  name: ModelStringInput
  not: ModelTodoFilterInput
  or: [ModelTodoFilterInput]
}

input UpdateTodoInput {
  description: String
  id: ID!
  name: String
}`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwc3luY19zY2hlbWEuZXhhbXBsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0LWFzc2V0cy9hcHBzeW5jX3NjaGVtYS5leGFtcGxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF5T3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc2NoZW1hID0gYFxuc2NoZW1hIHtcbiAgcXVlcnk6IFF1ZXJ5XG4gIG11dGF0aW9uOiBNdXRhdGlvblxuICBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvblxufVxuXG50eXBlIE1vZGVsVG9kb0Nvbm5lY3Rpb24ge1xuICBpdGVtczogW1RvZG9dIVxuICBuZXh0VG9rZW46IFN0cmluZ1xufVxuXG50eXBlIE11dGF0aW9uIHtcbiAgY3JlYXRlVG9kbyhjb25kaXRpb246IE1vZGVsVG9kb0NvbmRpdGlvbklucHV0LCBpbnB1dDogQ3JlYXRlVG9kb0lucHV0ISk6IFRvZG9cbiAgZGVsZXRlVG9kbyhjb25kaXRpb246IE1vZGVsVG9kb0NvbmRpdGlvbklucHV0LCBpbnB1dDogRGVsZXRlVG9kb0lucHV0ISk6IFRvZG9cbiAgdXBkYXRlVG9kbyhjb25kaXRpb246IE1vZGVsVG9kb0NvbmRpdGlvbklucHV0LCBpbnB1dDogVXBkYXRlVG9kb0lucHV0ISk6IFRvZG9cbn1cblxudHlwZSBRdWVyeSB7XG4gIGdldFRvZG8oaWQ6IElEISk6IFRvZG9cbiAgbGlzdFRvZG9zKFxuICAgIGZpbHRlcjogTW9kZWxUb2RvRmlsdGVySW5wdXRcbiAgICBsaW1pdDogSW50XG4gICAgbmV4dFRva2VuOiBTdHJpbmdcbiAgKTogTW9kZWxUb2RvQ29ubmVjdGlvblxufVxuXG50eXBlIFN1YnNjcmlwdGlvbiB7XG4gIG9uQ3JlYXRlVG9kbyhmaWx0ZXI6IE1vZGVsU3Vic2NyaXB0aW9uVG9kb0ZpbHRlcklucHV0KTogVG9kb1xuICAgIEBhd3Nfc3Vic2NyaWJlKG11dGF0aW9uczogW1wiY3JlYXRlVG9kb1wiXSlcbiAgb25EZWxldGVUb2RvKGZpbHRlcjogTW9kZWxTdWJzY3JpcHRpb25Ub2RvRmlsdGVySW5wdXQpOiBUb2RvXG4gICAgQGF3c19zdWJzY3JpYmUobXV0YXRpb25zOiBbXCJkZWxldGVUb2RvXCJdKVxuICBvblVwZGF0ZVRvZG8oZmlsdGVyOiBNb2RlbFN1YnNjcmlwdGlvblRvZG9GaWx0ZXJJbnB1dCk6IFRvZG9cbiAgICBAYXdzX3N1YnNjcmliZShtdXRhdGlvbnM6IFtcInVwZGF0ZVRvZG9cIl0pXG59XG5cbnR5cGUgVG9kbyB7XG4gIGNyZWF0ZWRBdDogQVdTRGF0ZVRpbWUhXG4gIGRlc2NyaXB0aW9uOiBTdHJpbmdcbiAgaWQ6IElEIVxuICBuYW1lOiBTdHJpbmchXG4gIHVwZGF0ZWRBdDogQVdTRGF0ZVRpbWUhXG59XG5cbmVudW0gTW9kZWxBdHRyaWJ1dGVUeXBlcyB7XG4gIF9udWxsXG4gIGJpbmFyeVxuICBiaW5hcnlTZXRcbiAgYm9vbFxuICBsaXN0XG4gIG1hcFxuICBudW1iZXJcbiAgbnVtYmVyU2V0XG4gIHN0cmluZ1xuICBzdHJpbmdTZXRcbn1cblxuZW51bSBNb2RlbFNvcnREaXJlY3Rpb24ge1xuICBBU0NcbiAgREVTQ1xufVxuXG5pbnB1dCBDcmVhdGVUb2RvSW5wdXQge1xuICBkZXNjcmlwdGlvbjogU3RyaW5nXG4gIGlkOiBJRFxuICBuYW1lOiBTdHJpbmchXG59XG5cbmlucHV0IERlbGV0ZVRvZG9JbnB1dCB7XG4gIGlkOiBJRCFcbn1cblxuaW5wdXQgTW9kZWxCb29sZWFuSW5wdXQge1xuICBhdHRyaWJ1dGVFeGlzdHM6IEJvb2xlYW5cbiAgYXR0cmlidXRlVHlwZTogTW9kZWxBdHRyaWJ1dGVUeXBlc1xuICBlcTogQm9vbGVhblxuICBuZTogQm9vbGVhblxufVxuXG5pbnB1dCBNb2RlbEZsb2F0SW5wdXQge1xuICBhdHRyaWJ1dGVFeGlzdHM6IEJvb2xlYW5cbiAgYXR0cmlidXRlVHlwZTogTW9kZWxBdHRyaWJ1dGVUeXBlc1xuICBiZXR3ZWVuOiBbRmxvYXRdXG4gIGVxOiBGbG9hdFxuICBnZTogRmxvYXRcbiAgZ3Q6IEZsb2F0XG4gIGxlOiBGbG9hdFxuICBsdDogRmxvYXRcbiAgbmU6IEZsb2F0XG59XG5cbmlucHV0IE1vZGVsSURJbnB1dCB7XG4gIGF0dHJpYnV0ZUV4aXN0czogQm9vbGVhblxuICBhdHRyaWJ1dGVUeXBlOiBNb2RlbEF0dHJpYnV0ZVR5cGVzXG4gIGJlZ2luc1dpdGg6IElEXG4gIGJldHdlZW46IFtJRF1cbiAgY29udGFpbnM6IElEXG4gIGVxOiBJRFxuICBnZTogSURcbiAgZ3Q6IElEXG4gIGxlOiBJRFxuICBsdDogSURcbiAgbmU6IElEXG4gIG5vdENvbnRhaW5zOiBJRFxuICBzaXplOiBNb2RlbFNpemVJbnB1dFxufVxuXG5pbnB1dCBNb2RlbEludElucHV0IHtcbiAgYXR0cmlidXRlRXhpc3RzOiBCb29sZWFuXG4gIGF0dHJpYnV0ZVR5cGU6IE1vZGVsQXR0cmlidXRlVHlwZXNcbiAgYmV0d2VlbjogW0ludF1cbiAgZXE6IEludFxuICBnZTogSW50XG4gIGd0OiBJbnRcbiAgbGU6IEludFxuICBsdDogSW50XG4gIG5lOiBJbnRcbn1cblxuaW5wdXQgTW9kZWxTaXplSW5wdXQge1xuICBiZXR3ZWVuOiBbSW50XVxuICBlcTogSW50XG4gIGdlOiBJbnRcbiAgZ3Q6IEludFxuICBsZTogSW50XG4gIGx0OiBJbnRcbiAgbmU6IEludFxufVxuXG5pbnB1dCBNb2RlbFN0cmluZ0lucHV0IHtcbiAgYXR0cmlidXRlRXhpc3RzOiBCb29sZWFuXG4gIGF0dHJpYnV0ZVR5cGU6IE1vZGVsQXR0cmlidXRlVHlwZXNcbiAgYmVnaW5zV2l0aDogU3RyaW5nXG4gIGJldHdlZW46IFtTdHJpbmddXG4gIGNvbnRhaW5zOiBTdHJpbmdcbiAgZXE6IFN0cmluZ1xuICBnZTogU3RyaW5nXG4gIGd0OiBTdHJpbmdcbiAgbGU6IFN0cmluZ1xuICBsdDogU3RyaW5nXG4gIG5lOiBTdHJpbmdcbiAgbm90Q29udGFpbnM6IFN0cmluZ1xuICBzaXplOiBNb2RlbFNpemVJbnB1dFxufVxuXG5pbnB1dCBNb2RlbFN1YnNjcmlwdGlvbkJvb2xlYW5JbnB1dCB7XG4gIGVxOiBCb29sZWFuXG4gIG5lOiBCb29sZWFuXG59XG5cbmlucHV0IE1vZGVsU3Vic2NyaXB0aW9uRmxvYXRJbnB1dCB7XG4gIGJldHdlZW46IFtGbG9hdF1cbiAgZXE6IEZsb2F0XG4gIGdlOiBGbG9hdFxuICBndDogRmxvYXRcbiAgaW46IFtGbG9hdF1cbiAgbGU6IEZsb2F0XG4gIGx0OiBGbG9hdFxuICBuZTogRmxvYXRcbiAgbm90SW46IFtGbG9hdF1cbn1cblxuaW5wdXQgTW9kZWxTdWJzY3JpcHRpb25JRElucHV0IHtcbiAgYmVnaW5zV2l0aDogSURcbiAgYmV0d2VlbjogW0lEXVxuICBjb250YWluczogSURcbiAgZXE6IElEXG4gIGdlOiBJRFxuICBndDogSURcbiAgaW46IFtJRF1cbiAgbGU6IElEXG4gIGx0OiBJRFxuICBuZTogSURcbiAgbm90Q29udGFpbnM6IElEXG4gIG5vdEluOiBbSURdXG59XG5cbmlucHV0IE1vZGVsU3Vic2NyaXB0aW9uSW50SW5wdXQge1xuICBiZXR3ZWVuOiBbSW50XVxuICBlcTogSW50XG4gIGdlOiBJbnRcbiAgZ3Q6IEludFxuICBpbjogW0ludF1cbiAgbGU6IEludFxuICBsdDogSW50XG4gIG5lOiBJbnRcbiAgbm90SW46IFtJbnRdXG59XG5cbmlucHV0IE1vZGVsU3Vic2NyaXB0aW9uU3RyaW5nSW5wdXQge1xuICBiZWdpbnNXaXRoOiBTdHJpbmdcbiAgYmV0d2VlbjogW1N0cmluZ11cbiAgY29udGFpbnM6IFN0cmluZ1xuICBlcTogU3RyaW5nXG4gIGdlOiBTdHJpbmdcbiAgZ3Q6IFN0cmluZ1xuICBpbjogW1N0cmluZ11cbiAgbGU6IFN0cmluZ1xuICBsdDogU3RyaW5nXG4gIG5lOiBTdHJpbmdcbiAgbm90Q29udGFpbnM6IFN0cmluZ1xuICBub3RJbjogW1N0cmluZ11cbn1cblxuaW5wdXQgTW9kZWxTdWJzY3JpcHRpb25Ub2RvRmlsdGVySW5wdXQge1xuICBhbmQ6IFtNb2RlbFN1YnNjcmlwdGlvblRvZG9GaWx0ZXJJbnB1dF1cbiAgZGVzY3JpcHRpb246IE1vZGVsU3Vic2NyaXB0aW9uU3RyaW5nSW5wdXRcbiAgaWQ6IE1vZGVsU3Vic2NyaXB0aW9uSURJbnB1dFxuICBuYW1lOiBNb2RlbFN1YnNjcmlwdGlvblN0cmluZ0lucHV0XG4gIG9yOiBbTW9kZWxTdWJzY3JpcHRpb25Ub2RvRmlsdGVySW5wdXRdXG59XG5cbmlucHV0IE1vZGVsVG9kb0NvbmRpdGlvbklucHV0IHtcbiAgYW5kOiBbTW9kZWxUb2RvQ29uZGl0aW9uSW5wdXRdXG4gIGRlc2NyaXB0aW9uOiBNb2RlbFN0cmluZ0lucHV0XG4gIG5hbWU6IE1vZGVsU3RyaW5nSW5wdXRcbiAgbm90OiBNb2RlbFRvZG9Db25kaXRpb25JbnB1dFxuICBvcjogW01vZGVsVG9kb0NvbmRpdGlvbklucHV0XVxufVxuXG5pbnB1dCBNb2RlbFRvZG9GaWx0ZXJJbnB1dCB7XG4gIGFuZDogW01vZGVsVG9kb0ZpbHRlcklucHV0XVxuICBkZXNjcmlwdGlvbjogTW9kZWxTdHJpbmdJbnB1dFxuICBpZDogTW9kZWxJRElucHV0XG4gIG5hbWU6IE1vZGVsU3RyaW5nSW5wdXRcbiAgbm90OiBNb2RlbFRvZG9GaWx0ZXJJbnB1dFxuICBvcjogW01vZGVsVG9kb0ZpbHRlcklucHV0XVxufVxuXG5pbnB1dCBVcGRhdGVUb2RvSW5wdXQge1xuICBkZXNjcmlwdGlvbjogU3RyaW5nXG4gIGlkOiBJRCFcbiAgbmFtZTogU3RyaW5nXG59YDtcbiJdfQ==